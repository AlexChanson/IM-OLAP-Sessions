{
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre de voitures des menages (min)], [Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY Order({Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Surface du logement (moyenne)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members), Union(Crossjoin({[Measures].[Consomattion chauffage annuelle (min)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members), Crossjoin({[Measures].[Consomattion chauffage annuelle (max)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members)))) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Indicateur de lieu d\u0027etudes.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))))))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"indicateur_lieu\".\"indicateur_id\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\" from \"indicateur_lieu\" as \"indicateur_lieu\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"indicateur_lieu\".\"indicateur_id\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\" from \"indicateur_lieu\" as \"indicateur_lieu\") as \"init\";",
    "select count(distinct \"categorie_id\") from \"indicateur_lieu\";",
    "select count(distinct \"categorie_id\") from \"indicateur_lieu\";",
    "select count(distinct \"indicateur_id\") from \"indicateur_lieu\";",
    "select count(distinct \"indicateur_id\") from \"indicateur_lieu\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"iletud\" \u003d \"indicateur_lieu\".\"indicateur_id\" group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"iletud\" \u003d \"indicateur_lieu\".\"indicateur_id\" group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"iletud\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"iletud\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"iletud\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"iletud\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale], [Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Measures].[Nombre total d\u0027individus]})), Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (min)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\", \"activite_economique\".\"na5_id\" as \"c3\", \"activite_economique\".\"na5_lib\" as \"c4\", \"activite_economique\".\"na5_lib\" as \"c5\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\", \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC, CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC;",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\", \"activite_economique\".\"na5_id\" as \"c3\", \"activite_economique\".\"na5_lib\" as \"c4\", \"activite_economique\".\"na5_lib\" as \"c5\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\", \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC, CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC;",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"activite_economique\".\"na5_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"age_revolu\".\"agerev_id\", \"activite_economique\".\"na5_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"activite_economique\".\"na5_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"age_revolu\".\"agerev_id\", \"activite_economique\".\"na5_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE].[EPUISAY]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Sexe du referent.Sexe_Hierarchie].[Femmes], [Sexe du referent.Sexe_Hierarchie].[Hommes]}})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members}, {[Commune de residence.CNERES_Hierarchie_administrative].[CENTRE].[LOIR-ET-CHER].[BLOIS]}})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Lien avec la personne de reference.LPRM_Hierarchie_1].[Lien avec la personne de reference].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", \"motif_deplacement\".\"categorie1_id\" as \"c3\", \"motif_deplacement\".\"categorie2_id\" as \"c4\", \"motif_deplacement\".\"motif_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", \"motif_deplacement\".\"categorie1_id\" as \"c3\", \"motif_deplacement\".\"categorie2_id\" as \"c4\", \"motif_deplacement\".\"motif_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, [Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, [Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members))), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, [Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members)))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"niveau_motorisation\".\"niveau_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", \"statut_occupation_lgt\".\"statut_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_motorisation\" as \"niveau_motorisation\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"niveau_motorisation\".\"niveau_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", \"statut_occupation_lgt\".\"statut_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_motorisation\" as \"niveau_motorisation\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"niveau_motorisation\".\"niveau_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", \"statut_occupation_lgt\".\"categorie_id\" as \"c7\", \"statut_occupation_lgt\".\"statut_id\" as \"c8\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_motorisation\" as \"niveau_motorisation\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"niveau_motorisation\".\"niveau_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", \"statut_occupation_lgt\".\"categorie_id\" as \"c7\", \"statut_occupation_lgt\".\"statut_id\" as \"c8\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_motorisation\" as \"niveau_motorisation\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 2].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Duree trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[tous les modes confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type d\u0027activite du referent.REF_TYPACT_Hierarchie_1].[Type d\u0027actvite].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre de voitures des menages (max)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members), Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members)))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, [Sexe du referent.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(distinct \"annee_regroupee\") from \"annee_emmenagement\";",
    "select count(distinct \"annee_regroupee\") from \"annee_emmenagement\";",
    "select count(distinct \"annee\") from \"annee_emmenagement\";",
    "select count(distinct \"annee\") from \"annee_emmenagement\";",
    "select count(distinct \"categorie1_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie1_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie2_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie2_id\") from \"niveau_instruction\";",
    "select count(distinct \"niveau_inst_id\") from \"niveau_instruction\";",
    "select count(distinct \"niveau_inst_id\") from \"niveau_instruction\";",
    "select count(distinct \"sexe_id\") from \"sexe\";",
    "select count(distinct \"sexe_id\") from \"sexe\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie1_id\" as \"c0\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie1_id\" as \"c0\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie2_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie2_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Depense trajet domicile - travail (min)]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[VILLENEUVE-FROUVILLE]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes scolarisees des menages (min)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members}, {[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members}})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]})), Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]})), Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)) ON COLUMNS,  {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Sexe.Sexe_Hierarchie].[Femmes]}, {[Type de menage.TYPMEN_Hierarchie].[tous les types confondus]})), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Sexe.Sexe_Hierarchie].[Hommes]}, {[Type de menage.TYPMEN_Hierarchie].[tous les types confondus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\", \"indicateur_lieu\".\"indicateur_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_recensement\".\"annee\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\", \"indicateur_lieu\".\"indicateur_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_recensement\".\"annee\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}), Union(Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Professions Intermédiaires]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Professions Intermédiaires]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]})))))))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Sexe.Sexe_Hierarchie].[Femmes]})) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie2_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie2_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Nombre total d\u0027individus]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Mode de cohabitation.MODCOHAB_Hierarchie_1].[Mode de cohabitation].Members, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members)) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"mode_cohabitation\".\"mode_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"mode_cohabitation\".\"mode_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_cohabitation\".\"mode_id\" as \"c1\", \"motif_deplacement\".\"categorie1_id\" as \"c2\", \"motif_deplacement\".\"categorie2_id\" as \"c3\", \"motif_deplacement\".\"motif_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_cohabitation\" as \"mode_cohabitation\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_cohabitation\".\"mode_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_cohabitation\".\"mode_id\" as \"c1\", \"motif_deplacement\".\"categorie1_id\" as \"c2\", \"motif_deplacement\".\"categorie2_id\" as \"c3\", \"motif_deplacement\".\"motif_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_cohabitation\" as \"mode_cohabitation\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_cohabitation\".\"mode_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[VILLENEUVE-FROUVILLE]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[ABELCOURT]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre de voitures des menages (moyenne)]}))), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Energie de chauffage du logement.LOGT_ENERGIECHAUF_Hierarchie_1].[Energie].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"annee_recensement\".\"annee\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", \"statut_occupation_lgt\".\"statut_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"annee_recensement\".\"annee\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", \"statut_occupation_lgt\".\"statut_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"annee_recensement\".\"annee\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" \u003d \u00271\u0027 group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" \u003d \u00271\u0027 group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"niveau_inst_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"niveau_inst_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_occupation_lgt\".\"categorie_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre de personnes des menages (total)], [Measures].[Depense chauffage annuelle par unite de consommation (total)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[1 pièce], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[2 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[3 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[4 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[5 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[6 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[7 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[8 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[9 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[10 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[11 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[12 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[13 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[14 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[15 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[16 pièces]}})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Lien avec la personne de reference.LPRM_Hierarchie_1].[Lien avec la personne de reference].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type regroupe].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members)) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members)), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members)), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL]}) ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, {[Measures].[Nombre de personnes scolarisees des menages (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", sum(mobsco_ind_1.nbperscomen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" \u003d \u0027-9\u0027 group by \"age_revolu_10\".\"agerev10_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", sum(mobsco_ind_1.nbperscomen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" \u003d \u0027-9\u0027 group by \"age_revolu_10\".\"agerev10_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", sum(mobsco_ind_1.nbperscomen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" group by \"age_revolu_10\".\"agerev10_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", sum(mobsco_ind_1.nbperscomen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" group by \"age_revolu_10\".\"agerev10_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", sum(mobsco_ind_1.nbperscomen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", sum(mobsco_ind_1.nbperscomen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune d\u0027etudes.CNELOCC_Hierarchie_administrative].[Departement].Members})}, [Measures].[Nombre total d\u0027individus], BDESC) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"departement_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\" from \"commune\" as \"commune_1\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"departement_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\" from \"commune\" as \"commune_1\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"pays_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"pays_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_occupation_lgt\".\"categorie_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Categorie].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[tous les sexes confondus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members))), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]})), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]})))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members))))))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"motif_deplacement\".\"motif_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"categorie1_id\" as \"c2\" from \"motif_deplacement\" as \"motif_deplacement\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"motif_deplacement\".\"motif_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"categorie1_id\" as \"c2\" from \"motif_deplacement\" as \"motif_deplacement\") as \"init\";",
    "select count(distinct \"categorie1_id\") from \"motif_deplacement\";",
    "select count(distinct \"categorie1_id\") from \"motif_deplacement\";",
    "select count(distinct \"categorie2_id\") from \"motif_deplacement\";",
    "select count(distinct \"categorie2_id\") from \"motif_deplacement\";",
    "select count(distinct \"motif_id\") from \"motif_deplacement\";",
    "select count(distinct \"motif_id\") from \"motif_deplacement\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"motif_deplacement\".\"categorie1_id\" as \"c4\", \"motif_deplacement\".\"categorie2_id\" as \"c5\", \"motif_deplacement\".\"motif_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"motif_deplacement\".\"categorie1_id\" as \"c4\", \"motif_deplacement\".\"categorie2_id\" as \"c5\", \"motif_deplacement\".\"motif_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"motif_deplacement\".\"categorie1_id\" as \"c5\", \"motif_deplacement\".\"categorie2_id\" as \"c6\", \"motif_deplacement\".\"motif_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"motif_deplacement\".\"categorie1_id\" as \"c5\", \"motif_deplacement\".\"categorie2_id\" as \"c6\", \"motif_deplacement\".\"motif_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]}))))) ON COLUMNS,  NON EMPTY Order(Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]}))))) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\", \"indicateur_lieu\".\"indicateur_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", \"statut_emploi\".\"stat2_id\" as \"c7\", \"statut_emploi\".\"stat3_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat3_id\" \u003d \u002711\u0027 group by \"csp\".\"csp1_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\", \"indicateur_lieu\".\"indicateur_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", \"statut_emploi\".\"stat2_id\" as \"c7\", \"statut_emploi\".\"stat3_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat3_id\" \u003d \u002711\u0027 group by \"csp\".\"csp1_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}), Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}), Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002704\u0027, \u002711\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002774\u0027, \u002783\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002708\u0027, \u002710\u0027, \u002711\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002719\u0027, \u002721\u0027, \u002722\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002727\u0027, \u002728\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002730\u0027, \u002733\u0027, \u002734\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002739\u0027, \u002740\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002748\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002766\u0027, \u002767\u0027, \u002768\u0027, \u002770\u0027, \u002771\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002789\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027971\u0027, \u0027973\u0027, \u0027974\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002704\u0027, \u002711\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002774\u0027, \u002783\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002708\u0027, \u002710\u0027, \u002711\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002719\u0027, \u002721\u0027, \u002722\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002727\u0027, \u002728\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002730\u0027, \u002733\u0027, \u002734\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002739\u0027, \u002740\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002748\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002766\u0027, \u002767\u0027, \u002768\u0027, \u002770\u0027, \u002771\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002789\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027971\u0027, \u0027973\u0027, \u0027974\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u002702\u0027, \u002706\u0027, \u00271B\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002774\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002702\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002707\u0027, \u002709\u0027, \u002712\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002726\u0027, \u002731\u0027, \u002732\u0027, \u002738\u0027, \u002742\u0027, \u002744\u0027, \u002746\u0027, \u002749\u0027, \u002753\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002765\u0027, \u002769\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002787\u0027, \u002788\u0027, \u0027972\u0027, \u0027975\u0027, \u0027976\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u002702\u0027, \u002706\u0027, \u00271B\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002774\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002702\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002707\u0027, \u002709\u0027, \u002712\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002726\u0027, \u002731\u0027, \u002732\u0027, \u002738\u0027, \u002742\u0027, \u002744\u0027, \u002746\u0027, \u002749\u0027, \u002753\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002765\u0027, \u002769\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002787\u0027, \u002788\u0027, \u0027972\u0027, \u0027975\u0027, \u0027976\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, Crossjoin([Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]})), Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, Crossjoin([Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members, Filter({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}, (Exists({Ancestor([Statut d\u0027emploi du referent.STATEMPL_Hierarchie].CurrentMember, [Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1])}, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}).Count \u003e 0)))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat3_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat3_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(distinct \"stat3_id\") from \"statut_emploi\";",
    "select count(distinct \"stat3_id\") from \"statut_emploi\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", \"statut_emploi\".\"stat3_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", \"statut_emploi\".\"stat3_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"statut_emploi\".\"stat2_id\" as \"c9\", \"statut_emploi\".\"stat3_id\" as \"c10\", \"sexe\".\"sexe_id\" as \"c11\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"statut_emploi\".\"stat3_id\" in (\u002711\u0027, \u002712\u0027, \u002713\u0027, \u002714\u0027, \u002715\u0027, \u002716\u0027) and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"statut_emploi\".\"stat2_id\" as \"c9\", \"statut_emploi\".\"stat3_id\" as \"c10\", \"sexe\".\"sexe_id\" as \"c11\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"statut_emploi\".\"stat3_id\" in (\u002711\u0027, \u002712\u0027, \u002713\u0027, \u002714\u0027, \u002715\u0027, \u002716\u0027) and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order({Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[15 à 19 ans]})}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (min)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]})))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members))))))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"mode_transport\".\"mode_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\" from \"mode_transport\" as \"mode_transport\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"mode_transport\".\"mode_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\" from \"mode_transport\" as \"mode_transport\") as \"init\";",
    "select count(distinct \"categorie_id\") from \"mode_transport\";",
    "select count(distinct \"categorie_id\") from \"mode_transport\";",
    "select count(distinct \"mode_id\") from \"mode_transport\";",
    "select count(distinct \"mode_id\") from \"mode_transport\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"mode_transport\" as \"mode_transport\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"mode_transport\" as \"mode_transport\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, {[Measures].[Nombre total d\u0027individus]}))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [
    "select count(*) as \"c0\" from (select distinct \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\") as \"init\";",
    "select \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\" group by \"annee_recensement\".\"annee\" order by CASE WHEN \"annee_recensement\".\"annee\" IS NULL THEN 1 ELSE 0 END, \"annee_recensement\".\"annee\" ASC;",
    "select \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\" group by \"annee_recensement\".\"annee\" order by CASE WHEN \"annee_recensement\".\"annee\" IS NULL THEN 1 ELSE 0 END, \"annee_recensement\".\"annee\" ASC;",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"annee_recensement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"annee_recensement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"mode_transport\" as \"mode_transport\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"mode_transport\" as \"mode_transport\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[VILLENEUVE-FROUVILLE]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[ABELCOURT]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ABELCOURT\u0027),UPPER(\u0027AIBRE\u0027),UPPER(\u0027VILLENEUVE-FROUVILLE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ABELCOURT\u0027),UPPER(\u0027AIBRE\u0027),UPPER(\u0027VILLENEUVE-FROUVILLE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, [Commune d\u0027etudes.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members)) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[toutes les csp]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Consommation carborant trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]})), Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Duree trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]where {[Measures].[Nombre total d\u0027individus]}": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members}, {[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", \"type_menage\".\"typemr9_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", \"type_menage\".\"typemr9_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, [Commune d\u0027etudes.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune_1\".\"region_id\" as \"c6\", \"commune_1\".\"region_nom\" as \"c7\", \"commune_1\".\"region_nom\" as \"c8\", \"commune_1\".\"pays_id\" as \"c9\", \"commune_1\".\"pays_nom\" as \"c10\", \"commune_1\".\"pays_nom\" as \"c11\", \"commune_1\".\"communaute_communes_id\" as \"c12\", \"commune_1\".\"communaute_communes_nom\" as \"c13\", \"commune_1\".\"communaute_communes_nom\" as \"c14\", \"commune_1\".\"commune_id\" as \"c15\", \"commune_1\".\"commune_nom\" as \"c16\", \"commune_1\".\"commune_nom\" as \"c17\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune_1\".\"region_id\" as \"c6\", \"commune_1\".\"region_nom\" as \"c7\", \"commune_1\".\"region_nom\" as \"c8\", \"commune_1\".\"pays_id\" as \"c9\", \"commune_1\".\"pays_nom\" as \"c10\", \"commune_1\".\"pays_nom\" as \"c11\", \"commune_1\".\"communaute_communes_id\" as \"c12\", \"commune_1\".\"communaute_communes_nom\" as \"c13\", \"commune_1\".\"communaute_communes_nom\" as \"c14\", \"commune_1\".\"commune_id\" as \"c15\", \"commune_1\".\"commune_nom\" as \"c16\", \"commune_1\".\"commune_nom\" as \"c17\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"communaute_communes_id\" as \"c4\", \"commune_1\".\"commune_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701138\u0027, \u002702408\u0027, \u002703185\u0027, \u002705145\u0027, \u002706085\u0027, \u002706088\u0027, \u002710387\u0027, \u002711356\u0027, \u002713117\u0027, \u002713204\u0027, \u002713208\u0027, \u002713210\u0027, \u002714118\u0027, \u002716015\u0027, \u002716211\u0027, \u002716358\u0027, \u002717300\u0027, \u002717434\u0027, \u002718015\u0027, \u002718027\u0027, \u002718033\u0027, \u002718109\u0027, \u002718197\u0027, \u002718207\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002719073\u0027, \u002721231\u0027, \u002725056\u0027, \u002728061\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728134\u0027, \u002728218\u0027, \u002728229\u0027, \u002728280\u0027, \u002728318\u0027, \u002728354\u0027, \u002728380\u0027, \u002730164\u0027, \u002731069\u0027, \u002731555\u0027, \u002732013\u0027, \u002733063\u0027, \u002733199\u0027, \u002733522\u0027, \u002734301\u0027, \u002735238\u0027, \u002735253\u0027, \u002736034\u0027, \u002736044\u0027, \u002736046\u0027, \u002736063\u0027, \u002736088\u0027, \u002736188\u0027, \u002736228\u0027, \u002736233\u0027, \u002737003\u0027, \u002737018\u0027, \u002737027\u0027, \u002737031\u0027, \u002737038\u0027, \u002737043\u0027, \u002737050\u0027, \u002737063\u0027, \u002737072\u0027, \u002737073\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737109\u0027, \u002737119\u0027, \u002737122\u0027, \u002737132\u0027, \u002737141\u0027, \u002737156\u0027, \u002737161\u0027, \u002737163\u0027, \u002737170\u0027, \u002737176\u0027, \u002737177\u0027, \u002737180\u0027, \u002737195\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737256\u0027, \u002737261\u0027, \u002737278\u0027, \u002738185\u0027, \u002738316\u0027, \u002738344\u0027, \u002738544\u0027, \u002739198\u0027, \u002739297\u0027, \u002739300\u0027, \u002739434\u0027, \u002740088\u0027, \u002740192\u0027, \u002740266\u0027, \u002740282\u0027, \u002740312\u0027, \u002741002\u0027, \u002741003\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741013\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741022\u0027, \u002741023\u0027, \u002741025\u0027, \u002741028\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741067\u0027, \u002741068\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741078\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741099\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741114\u0027, \u002741115\u0027, \u002741119\u0027, \u002741120\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741154\u0027, \u002741155\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741180\u0027, \u002741181\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741189\u0027, \u002741192\u0027, \u002741194\u0027, \u002741198\u0027, \u002741199\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741206\u0027, \u002741207\u0027, \u002741209\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741225\u0027, \u002741226\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741235\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741262\u0027, \u002741263\u0027, \u002741265\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741285\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002744047\u0027, \u002744109\u0027, \u002744190\u0027, \u002745028\u0027, \u002745030\u0027, \u002745061\u0027, \u002745067\u0027, \u002745075\u0027, \u002745081\u0027, \u002745109\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745155\u0027, \u002745169\u0027, \u002745179\u0027, \u002745202\u0027, \u002745203\u0027, \u002745208\u0027, \u002745232\u0027, \u002745234\u0027, \u002745248\u0027, \u002745284\u0027, \u002745285\u0027, \u002745309\u0027, \u002745344\u0027, \u002746030\u0027, \u002748092\u0027, \u002749007\u0027, \u002749042\u0027, \u002749054\u0027, \u002749188\u0027, \u002750147\u0027, \u002751454\u0027, \u002753062\u0027, \u002754395\u0027, \u002754580\u0027, \u002756260\u0027, \u002757672\u0027, \u002759009\u0027, \u002759350\u0027, \u002760057\u0027, \u002760159\u0027, \u002760282\u0027, \u002760612\u0027, \u002761001\u0027, \u002761293\u0027, \u002761332\u0027, \u002763113\u0027, \u002763397\u0027, \u002764256\u0027, \u002764445\u0027, \u002767482\u0027, \u002769081\u0027, \u002769381\u0027, \u002769383\u0027, \u002769385\u0027, \u002769386\u0027, \u002769387\u0027, \u002769389\u0027, \u002772035\u0027, \u002772068\u0027, \u002772071\u0027, \u002772132\u0027, \u002772154\u0027, \u002772180\u0027, \u002772181\u0027, \u002772193\u0027, \u002772240\u0027, \u002772247\u0027, \u002772262\u0027, \u002772269\u0027, \u002772357\u0027, \u002772373\u0027, \u002775101\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775120\u0027, \u002776451\u0027, \u002776540\u0027, \u002777014\u0027, \u002777169\u0027, \u002777243\u0027, \u002777251\u0027, \u002778120\u0027, \u002778217\u0027, \u002778322\u0027, \u002778517\u0027, \u002778638\u0027, \u002778646\u0027, \u002778686\u0027, \u002779049\u0027, \u002779057\u0027, \u002779311\u0027, \u002780021\u0027, \u002786062\u0027, \u002786066\u0027, \u002786070\u0027, \u002786165\u0027, \u002786194\u0027, \u002787050\u0027, \u002789024\u0027, \u002789387\u0027, \u002790010\u0027, \u002791103\u0027, \u002791114\u0027, \u002791174\u0027, \u002791461\u0027, \u002792014\u0027, \u002792019\u0027, \u002792050\u0027, \u002792062\u0027, \u002792075\u0027, \u002793006\u0027, \u002793066\u0027, \u002794004\u0027, \u002794043\u0027, \u002794052\u0027, \u002795127\u0027, \u002797209\u0027, \u002799999\u0027) group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"communaute_communes_id\" as \"c4\", \"commune_1\".\"commune_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701138\u0027, \u002702408\u0027, \u002703185\u0027, \u002705145\u0027, \u002706085\u0027, \u002706088\u0027, \u002710387\u0027, \u002711356\u0027, \u002713117\u0027, \u002713204\u0027, \u002713208\u0027, \u002713210\u0027, \u002714118\u0027, \u002716015\u0027, \u002716211\u0027, \u002716358\u0027, \u002717300\u0027, \u002717434\u0027, \u002718015\u0027, \u002718027\u0027, \u002718033\u0027, \u002718109\u0027, \u002718197\u0027, \u002718207\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002719073\u0027, \u002721231\u0027, \u002725056\u0027, \u002728061\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728134\u0027, \u002728218\u0027, \u002728229\u0027, \u002728280\u0027, \u002728318\u0027, \u002728354\u0027, \u002728380\u0027, \u002730164\u0027, \u002731069\u0027, \u002731555\u0027, \u002732013\u0027, \u002733063\u0027, \u002733199\u0027, \u002733522\u0027, \u002734301\u0027, \u002735238\u0027, \u002735253\u0027, \u002736034\u0027, \u002736044\u0027, \u002736046\u0027, \u002736063\u0027, \u002736088\u0027, \u002736188\u0027, \u002736228\u0027, \u002736233\u0027, \u002737003\u0027, \u002737018\u0027, \u002737027\u0027, \u002737031\u0027, \u002737038\u0027, \u002737043\u0027, \u002737050\u0027, \u002737063\u0027, \u002737072\u0027, \u002737073\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737109\u0027, \u002737119\u0027, \u002737122\u0027, \u002737132\u0027, \u002737141\u0027, \u002737156\u0027, \u002737161\u0027, \u002737163\u0027, \u002737170\u0027, \u002737176\u0027, \u002737177\u0027, \u002737180\u0027, \u002737195\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737256\u0027, \u002737261\u0027, \u002737278\u0027, \u002738185\u0027, \u002738316\u0027, \u002738344\u0027, \u002738544\u0027, \u002739198\u0027, \u002739297\u0027, \u002739300\u0027, \u002739434\u0027, \u002740088\u0027, \u002740192\u0027, \u002740266\u0027, \u002740282\u0027, \u002740312\u0027, \u002741002\u0027, \u002741003\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741013\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741022\u0027, \u002741023\u0027, \u002741025\u0027, \u002741028\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741067\u0027, \u002741068\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741078\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741099\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741114\u0027, \u002741115\u0027, \u002741119\u0027, \u002741120\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741154\u0027, \u002741155\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741180\u0027, \u002741181\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741189\u0027, \u002741192\u0027, \u002741194\u0027, \u002741198\u0027, \u002741199\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741206\u0027, \u002741207\u0027, \u002741209\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741225\u0027, \u002741226\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741235\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741262\u0027, \u002741263\u0027, \u002741265\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741285\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002744047\u0027, \u002744109\u0027, \u002744190\u0027, \u002745028\u0027, \u002745030\u0027, \u002745061\u0027, \u002745067\u0027, \u002745075\u0027, \u002745081\u0027, \u002745109\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745155\u0027, \u002745169\u0027, \u002745179\u0027, \u002745202\u0027, \u002745203\u0027, \u002745208\u0027, \u002745232\u0027, \u002745234\u0027, \u002745248\u0027, \u002745284\u0027, \u002745285\u0027, \u002745309\u0027, \u002745344\u0027, \u002746030\u0027, \u002748092\u0027, \u002749007\u0027, \u002749042\u0027, \u002749054\u0027, \u002749188\u0027, \u002750147\u0027, \u002751454\u0027, \u002753062\u0027, \u002754395\u0027, \u002754580\u0027, \u002756260\u0027, \u002757672\u0027, \u002759009\u0027, \u002759350\u0027, \u002760057\u0027, \u002760159\u0027, \u002760282\u0027, \u002760612\u0027, \u002761001\u0027, \u002761293\u0027, \u002761332\u0027, \u002763113\u0027, \u002763397\u0027, \u002764256\u0027, \u002764445\u0027, \u002767482\u0027, \u002769081\u0027, \u002769381\u0027, \u002769383\u0027, \u002769385\u0027, \u002769386\u0027, \u002769387\u0027, \u002769389\u0027, \u002772035\u0027, \u002772068\u0027, \u002772071\u0027, \u002772132\u0027, \u002772154\u0027, \u002772180\u0027, \u002772181\u0027, \u002772193\u0027, \u002772240\u0027, \u002772247\u0027, \u002772262\u0027, \u002772269\u0027, \u002772357\u0027, \u002772373\u0027, \u002775101\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775120\u0027, \u002776451\u0027, \u002776540\u0027, \u002777014\u0027, \u002777169\u0027, \u002777243\u0027, \u002777251\u0027, \u002778120\u0027, \u002778217\u0027, \u002778322\u0027, \u002778517\u0027, \u002778638\u0027, \u002778646\u0027, \u002778686\u0027, \u002779049\u0027, \u002779057\u0027, \u002779311\u0027, \u002780021\u0027, \u002786062\u0027, \u002786066\u0027, \u002786070\u0027, \u002786165\u0027, \u002786194\u0027, \u002787050\u0027, \u002789024\u0027, \u002789387\u0027, \u002790010\u0027, \u002791103\u0027, \u002791114\u0027, \u002791174\u0027, \u002791461\u0027, \u002792014\u0027, \u002792019\u0027, \u002792050\u0027, \u002792062\u0027, \u002792075\u0027, \u002793006\u0027, \u002793066\u0027, \u002794004\u0027, \u002794043\u0027, \u002794052\u0027, \u002795127\u0027, \u002797209\u0027, \u002799999\u0027) group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, [Sexe du referent.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"commune_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"commune_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002708\u0027, \u002710\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002721\u0027, \u002722\u0027, \u002724\u0027, \u002725\u0027, \u002727\u0027, \u002728\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002733\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002739\u0027, \u002740\u0027, \u002741\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002768\u0027, \u002770\u0027, \u002771\u0027, \u002776\u0027, \u002789\u0027, \u002790\u0027, \u0027971\u0027, \u0027973\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002708\u0027, \u002710\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002721\u0027, \u002722\u0027, \u002724\u0027, \u002725\u0027, \u002727\u0027, \u002728\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002733\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002739\u0027, \u002740\u0027, \u002741\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002768\u0027, \u002770\u0027, \u002771\u0027, \u002776\u0027, \u002789\u0027, \u002790\u0027, \u0027971\u0027, \u0027973\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027, \u002793\u0027) and \"commune\".\"departement_id\" in (\u002702\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002709\u0027, \u002711\u0027, \u002712\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002719\u0027, \u002723\u0027, \u002730\u0027, \u002731\u0027, \u002732\u0027, \u002734\u0027, \u002744\u0027, \u002746\u0027, \u002748\u0027, \u002749\u0027, \u002753\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002765\u0027, \u002766\u0027, \u002772\u0027, \u002777\u0027, \u002778\u0027, \u002779\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002787\u0027, \u002788\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027972\u0027, \u0027974\u0027, \u0027976\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027, \u002793\u0027) and \"commune\".\"departement_id\" in (\u002702\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002709\u0027, \u002711\u0027, \u002712\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002719\u0027, \u002723\u0027, \u002730\u0027, \u002731\u0027, \u002732\u0027, \u002734\u0027, \u002744\u0027, \u002746\u0027, \u002748\u0027, \u002749\u0027, \u002753\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002765\u0027, \u002766\u0027, \u002772\u0027, \u002777\u0027, \u002778\u0027, \u002779\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002787\u0027, \u002788\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027972\u0027, \u0027974\u0027, \u0027976\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002782\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002707\u0027, \u002713\u0027, \u002726\u0027, \u002738\u0027, \u002742\u0027, \u002769\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002788\u0027, \u0027975\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002782\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002707\u0027, \u002713\u0027, \u002726\u0027, \u002738\u0027, \u002742\u0027, \u002769\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002788\u0027, \u0027975\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", \"statut_emploi\".\"stat3_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", \"statut_emploi\".\"stat3_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre de voitures des menages (max)], [Measures].[Nombre de voitures des menages (min)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"nbvoitmen\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"nbvoitmen\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Commune de travail.CNELOCC_Hierarchie_administrative].[Departement].Members), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), [Commune de travail.CNELOCC_Hierarchie_administrative].[Departement].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"departement_id\" as \"c12\", \"commune_1\".\"departement_nom\" as \"c13\", \"commune_1\".\"departement_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"departement_id\", \"commune_1\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"departement_id\" as \"c12\", \"commune_1\".\"departement_nom\" as \"c13\", \"commune_1\".\"departement_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"departement_id\", \"commune_1\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"departement_nom\" ASC;",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002742\u0027 and \"commune_1\".\"departement_id\" \u003d \u002767\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002742\u0027 and \"commune_1\".\"departement_id\" \u003d \u002767\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"departement_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"departement_id\" in (\u002702\u0027, \u002703\u0027, \u002705\u0027, \u002714\u0027, \u002717\u0027, \u002718\u0027, \u002719\u0027, \u002724\u0027, \u002726\u0027, \u002727\u0027, \u002728\u0027, \u002729\u0027, \u002733\u0027, \u002734\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002740\u0027, \u002741\u0027, \u002743\u0027, \u002744\u0027, \u002745\u0027, \u002747\u0027, \u002748\u0027, \u002749\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002753\u0027, \u002755\u0027, \u002756\u0027, \u002757\u0027, \u002759\u0027, \u002761\u0027, \u002763\u0027, \u002767\u0027, \u002768\u0027, \u002769\u0027, \u002771\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002788\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027974\u0027, \u002799\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"departement_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"departement_id\" in (\u002702\u0027, \u002703\u0027, \u002705\u0027, \u002714\u0027, \u002717\u0027, \u002718\u0027, \u002719\u0027, \u002724\u0027, \u002726\u0027, \u002727\u0027, \u002728\u0027, \u002729\u0027, \u002733\u0027, \u002734\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002740\u0027, \u002741\u0027, \u002743\u0027, \u002744\u0027, \u002745\u0027, \u002747\u0027, \u002748\u0027, \u002749\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002753\u0027, \u002755\u0027, \u002756\u0027, \u002757\u0027, \u002759\u0027, \u002761\u0027, \u002763\u0027, \u002767\u0027, \u002768\u0027, \u002769\u0027, \u002771\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002788\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027974\u0027, \u002799\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"departement_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"departement_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members}, {[Commune de residence.CNERES_Hierarchie_administrative].[CENTRE].[LOIR-ET-CHER].[BLOIS]}})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, Crossjoin({[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Employés]}, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members))))) ON ROWSfrom [Cube1MobProInd]": [
    "select count(distinct \"categorie_id\") from \"mode_transport\";",
    "select count(distinct \"categorie_id\") from \"mode_transport\";",
    "select count(distinct \"mode_id\") from \"mode_transport\";",
    "select count(distinct \"mode_id\") from \"mode_transport\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]})))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi du referent.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"temps_emploi\".\"temps_id\" as \"c0\" from \"temps_emploi\" as \"temps_emploi\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"temps_emploi\".\"temps_id\" as \"c0\" from \"temps_emploi\" as \"temps_emploi\") as \"init\";",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c1\", \"temps_emploi\".\"temps_nom\" as \"c2\" from \"temps_emploi\" as \"temps_emploi\" group by \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c1\", \"temps_emploi\".\"temps_nom\" as \"c2\" from \"temps_emploi\" as \"temps_emploi\" group by \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;",
    "select count(distinct \"temps_id\") from \"temps_emploi\";",
    "select count(distinct \"temps_id\") from \"temps_emploi\";",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", sum(\"logements\".\"nbmen\") as \"m0\", max(\"logements\".\"consoannuelchauf\") as \"m1\", min(\"logements\".\"consoannuelchauf\") as \"m2\", sum(logements.poids_statistique_logt * logements.surfacelogt) as \"m3\" from \"temps_emploi\" as \"temps_emploi\", \"logements\" as \"logements\" where \"logements\".\"ref_temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"temps_emploi\".\"temps_id\";",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", sum(\"logements\".\"nbmen\") as \"m0\", max(\"logements\".\"consoannuelchauf\") as \"m1\", min(\"logements\".\"consoannuelchauf\") as \"m2\", sum(logements.poids_statistique_logt * logements.surfacelogt) as \"m3\" from \"temps_emploi\" as \"temps_emploi\", \"logements\" as \"logements\" where \"logements\".\"ref_temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (min)]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"activite_economique\".\"na5_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"activite_economique\".\"na5_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"activite_economique\".\"na5_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m3\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"csp\".\"csp1_id\", \"activite_economique\".\"na5_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"activite_economique\".\"na5_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m3\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"csp\".\"csp1_id\", \"activite_economique\".\"na5_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre de voitures des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Sexe.Sexe_Hierarchie].[Femmes]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members)), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Sexe.Sexe_Hierarchie].[Hommes]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"statut_occupation_lgt\".\"categorie_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"statut_occupation_lgt\".\"categorie_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[AgeRevQ inconnu]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Measures].[Duree trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002740002\u0027, \u002740009\u0027, \u002740013\u0027, \u002740020\u0027, \u002740023\u0027, \u002740028\u0027, \u002740029\u0027, \u002797801\u0027) and \"commune_1\".\"commune_id\" in (\u002702304\u0027, \u002702691\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718103\u0027, \u002718147\u0027, \u002718148\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718255\u0027, \u002718263\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002719272\u0027, \u002721295\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002724322\u0027, \u002725388\u0027, \u002726349\u0027, \u002727022\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728078\u0027, \u002728093\u0027, \u002728110\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728198\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728262\u0027, \u002728280\u0027, \u002728318\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002733058\u0027, \u002733063\u0027, \u002733483\u0027, \u002734101\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735352\u0027, \u002736018\u0027, \u002736036\u0027, \u002736068\u0027, \u002736069\u0027, \u002736077\u0027, \u002736093\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736244\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737023\u0027, \u002737043\u0027, \u002737046\u0027, \u002737060\u0027, \u002737070\u0027, \u002737072\u0027, \u002737075\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737111\u0027, \u002737115\u0027, \u002737119\u0027, \u002737138\u0027, \u002737153\u0027, \u002737155\u0027, \u002737160\u0027, \u002737167\u0027, \u002737171\u0027, \u002737177\u0027, \u002737194\u0027, \u002737195\u0027, \u002737211\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737240\u0027, \u002737247\u0027, \u002737252\u0027, \u002737254\u0027, \u002737263\u0027, \u002737276\u0027, \u002738382\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741054\u0027, \u002741064\u0027, \u002741081\u0027, \u002741103\u0027, \u002741113\u0027, \u002741124\u0027, \u002741168\u0027, \u002741195\u0027, \u002741274\u0027, \u002741292\u0027, \u002744004\u0027, \u002744169\u0027, \u002744188\u0027, \u002745004\u0027, \u002745008\u0027, \u002745020\u0027, \u002745029\u0027, \u002745042\u0027, \u002745046\u0027, \u002745062\u0027, \u002745072\u0027, \u002745073\u0027, \u002745087\u0027, \u002745098\u0027, \u002745109\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745133\u0027, \u002745142\u0027, \u002745144\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745206\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745299\u0027, \u002745300\u0027, \u002745307\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002747157\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002750184\u0027, \u002751388\u0027, \u002751454\u0027, \u002751559\u0027, \u002752353\u0027, \u002753013\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759121\u0027, \u002759384\u0027, \u002760139\u0027, \u002760463\u0027, \u002761043\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761454\u0027, \u002762351\u0027, \u002763124\u0027, \u002765257\u0027, \u002767348\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769259\u0027, \u002769268\u0027, \u002769290\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002772032\u0027, \u002772039\u0027, \u002772042\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772183\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772257\u0027, \u002772264\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002773181\u0027, \u002773227\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774268\u0027, \u002776035\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777060\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777291\u0027, \u002777305\u0027, \u002777327\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777495\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778372\u0027, \u002778407\u0027, \u002778501\u0027, \u002778545\u0027, \u002778688\u0027, \u002779046\u0027, \u002779202\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785151\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002789025\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791272\u0027, \u002791405\u0027, \u002791425\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791692\u0027, \u002792007\u0027, \u002792020\u0027, \u002792025\u0027, \u002792032\u0027, \u002793008\u0027, \u002793010\u0027, \u002793027\u0027, \u002793046\u0027, \u002793057\u0027, \u002793064\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794042\u0027, \u002794047\u0027, \u002794048\u0027, \u002794071\u0027, \u002794073\u0027, \u002794078\u0027, \u002794080\u0027, \u002795051\u0027, \u002795127\u0027, \u002795218\u0027, \u002795500\u0027, \u002795607\u0027, \u002797611\u0027, \u002797801\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002740002\u0027, \u002740009\u0027, \u002740013\u0027, \u002740020\u0027, \u002740023\u0027, \u002740028\u0027, \u002740029\u0027, \u002797801\u0027) and \"commune_1\".\"commune_id\" in (\u002702304\u0027, \u002702691\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718103\u0027, \u002718147\u0027, \u002718148\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718255\u0027, \u002718263\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002719272\u0027, \u002721295\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002724322\u0027, \u002725388\u0027, \u002726349\u0027, \u002727022\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728078\u0027, \u002728093\u0027, \u002728110\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728198\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728262\u0027, \u002728280\u0027, \u002728318\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002733058\u0027, \u002733063\u0027, \u002733483\u0027, \u002734101\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735352\u0027, \u002736018\u0027, \u002736036\u0027, \u002736068\u0027, \u002736069\u0027, \u002736077\u0027, \u002736093\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736244\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737023\u0027, \u002737043\u0027, \u002737046\u0027, \u002737060\u0027, \u002737070\u0027, \u002737072\u0027, \u002737075\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737111\u0027, \u002737115\u0027, \u002737119\u0027, \u002737138\u0027, \u002737153\u0027, \u002737155\u0027, \u002737160\u0027, \u002737167\u0027, \u002737171\u0027, \u002737177\u0027, \u002737194\u0027, \u002737195\u0027, \u002737211\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737240\u0027, \u002737247\u0027, \u002737252\u0027, \u002737254\u0027, \u002737263\u0027, \u002737276\u0027, \u002738382\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741054\u0027, \u002741064\u0027, \u002741081\u0027, \u002741103\u0027, \u002741113\u0027, \u002741124\u0027, \u002741168\u0027, \u002741195\u0027, \u002741274\u0027, \u002741292\u0027, \u002744004\u0027, \u002744169\u0027, \u002744188\u0027, \u002745004\u0027, \u002745008\u0027, \u002745020\u0027, \u002745029\u0027, \u002745042\u0027, \u002745046\u0027, \u002745062\u0027, \u002745072\u0027, \u002745073\u0027, \u002745087\u0027, \u002745098\u0027, \u002745109\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745133\u0027, \u002745142\u0027, \u002745144\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745206\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745299\u0027, \u002745300\u0027, \u002745307\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002747157\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002750184\u0027, \u002751388\u0027, \u002751454\u0027, \u002751559\u0027, \u002752353\u0027, \u002753013\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759121\u0027, \u002759384\u0027, \u002760139\u0027, \u002760463\u0027, \u002761043\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761454\u0027, \u002762351\u0027, \u002763124\u0027, \u002765257\u0027, \u002767348\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769259\u0027, \u002769268\u0027, \u002769290\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002772032\u0027, \u002772039\u0027, \u002772042\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772183\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772257\u0027, \u002772264\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002773181\u0027, \u002773227\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774268\u0027, \u002776035\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777060\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777291\u0027, \u002777305\u0027, \u002777327\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777495\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778372\u0027, \u002778407\u0027, \u002778501\u0027, \u002778545\u0027, \u002778688\u0027, \u002779046\u0027, \u002779202\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785151\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002789025\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791272\u0027, \u002791405\u0027, \u002791425\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791692\u0027, \u002792007\u0027, \u002792020\u0027, \u002792025\u0027, \u002792032\u0027, \u002793008\u0027, \u002793010\u0027, \u002793027\u0027, \u002793046\u0027, \u002793057\u0027, \u002793064\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794042\u0027, \u002794047\u0027, \u002794048\u0027, \u002794071\u0027, \u002794073\u0027, \u002794078\u0027, \u002794080\u0027, \u002795051\u0027, \u002795127\u0027, \u002795218\u0027, \u002795500\u0027, \u002795607\u0027, \u002797611\u0027, \u002797801\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre de personnes scolarisees des menages (max)], [Measures].[Nombre de personnes scolarisees des menages (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.nbperscomen * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.nbperscomen * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Depense trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Depense trajet domicile - travail (moyenne)]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Depense trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE].[EPUISAY]})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00276\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00276\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"indicateur_lieu\".\"categorie_id\" as \"c0\" from \"indicateur_lieu\" as \"indicateur_lieu\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"indicateur_lieu\".\"categorie_id\" as \"c0\" from \"indicateur_lieu\" as \"indicateur_lieu\") as \"init\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Union(Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}), Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})} ON ROWSfrom [Cube1MobProInd]where {[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}": [
    "select \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"communaute_communes_nom\" as \"c1\", \"commune\".\"communaute_communes_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u0027ZZ\u0027) group by \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"communaute_communes_nom\" as \"c1\", \"commune\".\"communaute_communes_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u0027ZZ\u0027) group by \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"pays_id\" as \"c0\", \"commune\".\"pays_nom\" as \"c1\", \"commune\".\"pays_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"region_id\" \u003d \u0027ZZ\u0027) group by \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;",
    "select \"commune\".\"pays_id\" as \"c0\", \"commune\".\"pays_nom\" as \"c1\", \"commune\".\"pays_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"region_id\" \u003d \u0027ZZ\u0027) group by \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[toutes les csp]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]})))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, Filter({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00272\u0027, \u00274\u0027, \u00275\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"type_menage\".\"typemr4_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00272\u0027, \u00274\u0027, \u00275\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"type_menage\".\"typemr4_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00272\u0027, \u00274\u0027, \u00275\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"type_menage\".\"typemr4_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00272\u0027, \u00274\u0027, \u00275\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c4\", \"temps_emploi\".\"temps_nom\" as \"c5\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\", \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC, CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c4\", \"temps_emploi\".\"temps_nom\" as \"c5\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\", \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC, CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)), Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé]}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme]}).Count \u003e 0)), [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 2].Members))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre de personnes scolarisees des menages (min)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", min(\"mobpro_ind_1\".\"nbperscomen\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", min(\"mobpro_ind_1\".\"nbperscomen\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", min(\"mobpro_ind_1\".\"nbperscomen\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", min(\"mobpro_ind_1\".\"nbperscomen\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"temps_emploi\".\"temps_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[toutes les csp]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Consommation carborant trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"pays_id\" as \"c12\", \"commune_1\".\"pays_nom\" as \"c13\", \"commune_1\".\"pays_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"pays_id\" as \"c12\", \"commune_1\".\"pays_nom\" as \"c13\", \"commune_1\".\"pays_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select count(distinct \"region_id\") from \"commune\";",
    "select count(distinct \"region_id\") from \"commune\";",
    "select \"commune\".\"region_id\" as \"c0\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c1\", \"categorie_logement\".\"categorie_id\" as \"c2\", sum(\"logements\".\"nbmen\") as \"m0\" from \"commune\" as \"commune\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\" where \"logements\".\"commune_residence\" \u003d \"commune\".\"commune_id\" and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" group by \"commune\".\"region_id\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c1\", \"categorie_logement\".\"categorie_id\" as \"c2\", sum(\"logements\".\"nbmen\") as \"m0\" from \"commune\" as \"commune\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\" where \"logements\".\"commune_residence\" \u003d \"commune\".\"commune_id\" and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" group by \"commune\".\"region_id\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select count(distinct \"pays_id\") from \"commune\";",
    "select count(distinct \"pays_id\") from \"commune\";",
    "select count(distinct \"communaute_communes_id\") from \"commune\";",
    "select count(distinct \"communaute_communes_id\") from \"commune\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c3\", \"categorie_logement\".\"categorie_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"commune\" as \"commune\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\" where \"logements\".\"commune_residence\" \u003d \"commune\".\"commune_id\" and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c3\", \"categorie_logement\".\"categorie_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"commune\" as \"commune\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\" where \"logements\".\"commune_residence\" \u003d \"commune\".\"commune_id\" and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\";"
  ],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members, {[Measures].[Duree trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]})))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]where {[Sexe.Sexe_Hierarchie].[Sexe].Members}": [
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_occupation_lgt\".\"categorie_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin(Filter({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}, (Exists({Ancestor([Statut d\u0027emploi.STATEMPL_Hierarchie].CurrentMember, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2])}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation]}, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members), Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type regroupe].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes scolarisees de plus de 14 ans (min)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (min)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}), Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre total d\u0027individus]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}))), Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}))), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})))))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"indicateur_lieu\".\"categorie_id\" as \"c2\", \"indicateur_lieu\".\"indicateur_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", \"statut_emploi\".\"stat1_id\" as \"c7\", \"statut_emploi\".\"stat2_id\" as \"c8\", \"statut_emploi\".\"stat3_id\" as \"c9\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"indicateur_lieu\" as \"indicateur_lieu\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002740X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat3_id\" \u003d \u002711\u0027 group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"indicateur_lieu\".\"categorie_id\" as \"c2\", \"indicateur_lieu\".\"indicateur_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", \"statut_emploi\".\"stat1_id\" as \"c7\", \"statut_emploi\".\"stat2_id\" as \"c8\", \"statut_emploi\".\"stat3_id\" as \"c9\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"indicateur_lieu\" as \"indicateur_lieu\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002740X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat3_id\" \u003d \u002711\u0027 group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]})))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"annee_recensement\".\"annee\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740001\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740001\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Measures].[Duree trajet domicile - travail (moyenne)]})))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[tous les statuts confondus]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members)) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Professions Intermédiaires]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]}))))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002721\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002708\u0027, \u002710\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002721\u0027, \u002722\u0027, \u002724\u0027, \u002725\u0027, \u002728\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002733\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002739\u0027, \u002740\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002768\u0027, \u002770\u0027, \u002771\u0027, \u002789\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00274\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002721\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002708\u0027, \u002710\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002721\u0027, \u002722\u0027, \u002724\u0027, \u002725\u0027, \u002728\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002733\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002739\u0027, \u002740\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002750\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002768\u0027, \u002770\u0027, \u002771\u0027, \u002789\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00274\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002702\u0027, \u002703\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002723\u0027, \u002741\u0027, \u002743\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027) and \"commune\".\"departement_id\" in (\u002709\u0027, \u002711\u0027, \u002712\u0027, \u002719\u0027, \u002723\u0027, \u002727\u0027, \u002730\u0027, \u002731\u0027, \u002732\u0027, \u002734\u0027, \u002746\u0027, \u002748\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002765\u0027, \u002766\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002787\u0027, \u002788\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027971\u0027, \u0027972\u0027, \u0027973\u0027, \u0027974\u0027, \u0027976\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00274\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002702\u0027, \u002703\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002723\u0027, \u002741\u0027, \u002743\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027) and \"commune\".\"departement_id\" in (\u002709\u0027, \u002711\u0027, \u002712\u0027, \u002719\u0027, \u002723\u0027, \u002727\u0027, \u002730\u0027, \u002731\u0027, \u002732\u0027, \u002734\u0027, \u002746\u0027, \u002748\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002765\u0027, \u002766\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002787\u0027, \u002788\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027971\u0027, \u0027972\u0027, \u0027973\u0027, \u0027974\u0027, \u0027976\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00274\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002722\u0027, \u002731\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002702\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002707\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002726\u0027, \u002738\u0027, \u002742\u0027, \u002744\u0027, \u002749\u0027, \u002753\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002769\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002788\u0027, \u0027975\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00274\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002722\u0027, \u002731\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002702\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002707\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002726\u0027, \u002738\u0027, \u002742\u0027, \u002744\u0027, \u002749\u0027, \u002753\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002769\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002783\u0027, \u002784\u0027, \u002785\u0027, \u002786\u0027, \u002788\u0027, \u0027975\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00274\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c4\", \"temps_emploi\".\"temps_nom\" as \"c5\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\", \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC, CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c4\", \"temps_emploi\".\"temps_nom\" as \"c5\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\", \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC, CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Measures].[Duree trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))))))), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BDESC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", \"type_menage\".\"typemr9_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", \"type_menage\".\"typemr9_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(distinct \"statut_id\") from \"statut_occupation_lgt\";",
    "select count(distinct \"statut_id\") from \"statut_occupation_lgt\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", \"statut_occupation_lgt\".\"statut_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"niveau_motorisation\".\"niveau_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", \"statut_occupation_lgt\".\"statut_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"niveau_motorisation\".\"niveau_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select count(*) as \"c0\" from (select distinct \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\") as \"init\";",
    "select \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_nom\" as \"c1\", \"statut_occupation_lgt\".\"statut_nom\" as \"c2\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where (\"statut_occupation_lgt\".\"categorie_id\" \u003d \u00272\u0027) group by \"statut_occupation_lgt\".\"statut_id\", \"statut_occupation_lgt\".\"statut_nom\" order by CASE WHEN \"statut_occupation_lgt\".\"statut_nom\" IS NULL THEN 1 ELSE 0 END, \"statut_occupation_lgt\".\"statut_nom\" ASC;",
    "select \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_nom\" as \"c1\", \"statut_occupation_lgt\".\"statut_nom\" as \"c2\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where (\"statut_occupation_lgt\".\"categorie_id\" \u003d \u00272\u0027) group by \"statut_occupation_lgt\".\"statut_id\", \"statut_occupation_lgt\".\"statut_nom\" order by CASE WHEN \"statut_occupation_lgt\".\"statut_nom\" IS NULL THEN 1 ELSE 0 END, \"statut_occupation_lgt\".\"statut_nom\" ASC;",
    "select \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_nom\" as \"c1\", \"statut_occupation_lgt\".\"statut_nom\" as \"c2\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where (\"statut_occupation_lgt\".\"categorie_id\" \u003d \u00273\u0027) group by \"statut_occupation_lgt\".\"statut_id\", \"statut_occupation_lgt\".\"statut_nom\" order by CASE WHEN \"statut_occupation_lgt\".\"statut_nom\" IS NULL THEN 1 ELSE 0 END, \"statut_occupation_lgt\".\"statut_nom\" ASC;",
    "select \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_nom\" as \"c1\", \"statut_occupation_lgt\".\"statut_nom\" as \"c2\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where (\"statut_occupation_lgt\".\"categorie_id\" \u003d \u00273\u0027) group by \"statut_occupation_lgt\".\"statut_id\", \"statut_occupation_lgt\".\"statut_nom\" order by CASE WHEN \"statut_occupation_lgt\".\"statut_nom\" IS NULL THEN 1 ELSE 0 END, \"statut_occupation_lgt\".\"statut_nom\" ASC;",
    "select \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_nom\" as \"c1\", \"statut_occupation_lgt\".\"statut_nom\" as \"c2\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where (\"statut_occupation_lgt\".\"categorie_id\" \u003d \u00271\u0027) group by \"statut_occupation_lgt\".\"statut_id\", \"statut_occupation_lgt\".\"statut_nom\" order by CASE WHEN \"statut_occupation_lgt\".\"statut_nom\" IS NULL THEN 1 ELSE 0 END, \"statut_occupation_lgt\".\"statut_nom\" ASC;",
    "select \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_nom\" as \"c1\", \"statut_occupation_lgt\".\"statut_nom\" as \"c2\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where (\"statut_occupation_lgt\".\"categorie_id\" \u003d \u00271\u0027) group by \"statut_occupation_lgt\".\"statut_id\", \"statut_occupation_lgt\".\"statut_nom\" order by CASE WHEN \"statut_occupation_lgt\".\"statut_nom\" IS NULL THEN 1 ELSE 0 END, \"statut_occupation_lgt\".\"statut_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, [Commune d\u0027etudes.CNELOCC_Hierarchie_administrative].[Departement].Members), [Measures].[Nombre total d\u0027individus], BASC) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740001\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ARVILLE\u0027),UPPER(\u0027BOURSAY\u0027),UPPER(\u0027LE GAULT-PERCHE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740001\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ARVILLE\u0027),UPPER(\u0027BOURSAY\u0027),UPPER(\u0027LE GAULT-PERCHE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740019\u0027 and \"commune\".\"pays_id\" \u003d \u00275\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027MONTRIEUX-EN-SOLOGNE\u0027),UPPER(\u0027NEUNG-SUR-BEUVRON\u0027),UPPER(\u0027VILLENY\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740019\u0027 and \"commune\".\"pays_id\" \u003d \u00275\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027MONTRIEUX-EN-SOLOGNE\u0027),UPPER(\u0027NEUNG-SUR-BEUVRON\u0027),UPPER(\u0027VILLENY\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[tous les modes confondus]}, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"region_nom\" as \"c4\", \"commune_1\".\"region_nom\" as \"c5\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"region_nom\" as \"c4\", \"commune_1\".\"region_nom\" as \"c5\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;"
  ],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)]}})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members)), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members)))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]})))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[1 pièce], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[2 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[3 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[4 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[5 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[6 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[7 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[8 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[9 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[10 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[11 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[12 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[13 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[14 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[15 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[16 pièces]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (total)]})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]})), Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, Filter({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, (Exists({Ancestor([Statut d\u0027emploi du referent.STATEMPL_Hierarchie].CurrentMember, [Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1])}, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}).Count \u003e 0)))), Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]})), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, Filter({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, (Exists({Ancestor([Statut d\u0027emploi du referent.STATEMPL_Hierarchie].CurrentMember, [Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1])}, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}).Count \u003e 0)))))))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat2_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat2_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(distinct \"stat2_id\") from \"statut_emploi\";",
    "select count(distinct \"stat2_id\") from \"statut_emploi\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"statut_emploi\" as \"statut_emploi\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"statut_emploi\".\"stat2_id\" as \"c9\", \"sexe\".\"sexe_id\" as \"c10\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"age_regroupe\".\"age_regroupe_id\" in (\u002725\u0027, \u002740\u0027, \u002755\u0027, \u002765\u0027, \u002780\u0027) and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"statut_emploi\".\"stat2_id\" as \"c9\", \"sexe\".\"sexe_id\" as \"c10\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"age_regroupe\".\"age_regroupe_id\" in (\u002725\u0027, \u002740\u0027, \u002755\u0027, \u002765\u0027, \u002780\u0027) and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, Crossjoin({[Sexe.Sexe_Hierarchie].[Femmes]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, Crossjoin({[Sexe.Sexe_Hierarchie].[Femmes]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, Crossjoin({[Sexe.Sexe_Hierarchie].[Femmes]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members)))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00272\u0027 and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members))))))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"csp\".\"csp1_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"csp\".\"csp1_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members)), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members)), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" \u003d \u00271\u0027 and \"type_menage\".\"typemr9_id\" \u003d \u002712\u0027 group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" \u003d \u00271\u0027 and \"type_menage\".\"typemr9_id\" \u003d \u002712\u0027 group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", \"type_menage\".\"typemr9_id\" as \"c4\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", \"type_menage\".\"typemr9_id\" as \"c4\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[SAINT-JULIEN-DE-CHEDON]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"statut_emploi\".\"stat2_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"statut_emploi\".\"stat2_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"statut_emploi\".\"stat2_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) and \"statut_emploi\".\"stat3_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"statut_emploi\".\"stat2_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) and \"statut_emploi\".\"stat3_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, [Commune d\u0027etudes.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(distinct \"pays_id\") from \"commune\";",
    "select count(distinct \"pays_id\") from \"commune\";",
    "select count(distinct \"communaute_communes_id\") from \"commune\";",
    "select count(distinct \"communaute_communes_id\") from \"commune\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"communaute_communes_id\" as \"c4\", \"commune_1\".\"commune_id\" as \"c5\", \"niveau_motorisation\".\"niveau_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\", \"niveau_motorisation\" as \"niveau_motorisation\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701138\u0027, \u002702408\u0027, \u002703185\u0027, \u002705145\u0027, \u002706085\u0027, \u002706088\u0027, \u002710387\u0027, \u002711356\u0027, \u002713117\u0027, \u002713204\u0027, \u002713208\u0027, \u002713210\u0027, \u002714118\u0027, \u002716015\u0027, \u002716211\u0027, \u002716358\u0027, \u002717300\u0027, \u002717434\u0027, \u002718015\u0027, \u002718027\u0027, \u002718033\u0027, \u002718109\u0027, \u002718197\u0027, \u002718207\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002719073\u0027, \u002721231\u0027, \u002725056\u0027, \u002728061\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728134\u0027, \u002728218\u0027, \u002728229\u0027, \u002728280\u0027, \u002728318\u0027, \u002728354\u0027, \u002728380\u0027, \u002730164\u0027, \u002731069\u0027, \u002731555\u0027, \u002732013\u0027, \u002733063\u0027, \u002733199\u0027, \u002733522\u0027, \u002734301\u0027, \u002735238\u0027, \u002735253\u0027, \u002736034\u0027, \u002736044\u0027, \u002736046\u0027, \u002736063\u0027, \u002736088\u0027, \u002736188\u0027, \u002736228\u0027, \u002736233\u0027, \u002737003\u0027, \u002737018\u0027, \u002737027\u0027, \u002737031\u0027, \u002737038\u0027, \u002737043\u0027, \u002737050\u0027, \u002737063\u0027, \u002737072\u0027, \u002737073\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737109\u0027, \u002737119\u0027, \u002737122\u0027, \u002737132\u0027, \u002737141\u0027, \u002737156\u0027, \u002737161\u0027, \u002737163\u0027, \u002737170\u0027, \u002737176\u0027, \u002737177\u0027, \u002737180\u0027, \u002737195\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737256\u0027, \u002737261\u0027, \u002737278\u0027, \u002738185\u0027, \u002738316\u0027, \u002738344\u0027, \u002738544\u0027, \u002739198\u0027, \u002739297\u0027, \u002739300\u0027, \u002739434\u0027, \u002740088\u0027, \u002740192\u0027, \u002740266\u0027, \u002740282\u0027, \u002740312\u0027, \u002741002\u0027, \u002741003\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741013\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741022\u0027, \u002741023\u0027, \u002741025\u0027, \u002741028\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741067\u0027, \u002741068\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741078\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741099\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741114\u0027, \u002741115\u0027, \u002741119\u0027, \u002741120\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741154\u0027, \u002741155\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741180\u0027, \u002741181\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741189\u0027, \u002741192\u0027, \u002741194\u0027, \u002741198\u0027, \u002741199\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741206\u0027, \u002741207\u0027, \u002741209\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741225\u0027, \u002741226\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741235\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741262\u0027, \u002741263\u0027, \u002741265\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741285\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002744047\u0027, \u002744109\u0027, \u002744190\u0027, \u002745028\u0027, \u002745030\u0027, \u002745061\u0027, \u002745067\u0027, \u002745075\u0027, \u002745081\u0027, \u002745109\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745155\u0027, \u002745169\u0027, \u002745179\u0027, \u002745202\u0027, \u002745203\u0027, \u002745208\u0027, \u002745232\u0027, \u002745234\u0027, \u002745248\u0027, \u002745284\u0027, \u002745285\u0027, \u002745309\u0027, \u002745344\u0027, \u002746030\u0027, \u002748092\u0027, \u002749007\u0027, \u002749042\u0027, \u002749054\u0027, \u002749188\u0027, \u002750147\u0027, \u002751454\u0027, \u002753062\u0027, \u002754395\u0027, \u002754580\u0027, \u002756260\u0027, \u002757672\u0027, \u002759009\u0027, \u002759350\u0027, \u002760057\u0027, \u002760159\u0027, \u002760282\u0027, \u002760612\u0027, \u002761001\u0027, \u002761293\u0027, \u002761332\u0027, \u002763113\u0027, \u002763397\u0027, \u002764256\u0027, \u002764445\u0027, \u002767482\u0027, \u002769081\u0027, \u002769381\u0027, \u002769383\u0027, \u002769385\u0027, \u002769386\u0027, \u002769387\u0027, \u002769389\u0027, \u002772035\u0027, \u002772068\u0027, \u002772071\u0027, \u002772132\u0027, \u002772154\u0027, \u002772180\u0027, \u002772181\u0027, \u002772193\u0027, \u002772240\u0027, \u002772247\u0027, \u002772262\u0027, \u002772269\u0027, \u002772357\u0027, \u002772373\u0027, \u002775101\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775120\u0027, \u002776451\u0027, \u002776540\u0027, \u002777014\u0027, \u002777169\u0027, \u002777243\u0027, \u002777251\u0027, \u002778120\u0027, \u002778217\u0027, \u002778322\u0027, \u002778517\u0027, \u002778638\u0027, \u002778646\u0027, \u002778686\u0027, \u002779049\u0027, \u002779057\u0027, \u002779311\u0027, \u002780021\u0027, \u002786062\u0027, \u002786066\u0027, \u002786070\u0027, \u002786165\u0027, \u002786194\u0027, \u002787050\u0027, \u002789024\u0027, \u002789387\u0027, \u002790010\u0027, \u002791103\u0027, \u002791114\u0027, \u002791174\u0027, \u002791461\u0027, \u002792014\u0027, \u002792019\u0027, \u002792050\u0027, \u002792062\u0027, \u002792075\u0027, \u002793006\u0027, \u002793066\u0027, \u002794004\u0027, \u002794043\u0027, \u002794052\u0027, \u002795127\u0027, \u002797209\u0027, \u002799999\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"niveau_motorisation\".\"niveau_id\" in (\u00270\u0027, \u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"niveau_motorisation\".\"niveau_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"communaute_communes_id\" as \"c4\", \"commune_1\".\"commune_id\" as \"c5\", \"niveau_motorisation\".\"niveau_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\", \"niveau_motorisation\" as \"niveau_motorisation\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701138\u0027, \u002702408\u0027, \u002703185\u0027, \u002705145\u0027, \u002706085\u0027, \u002706088\u0027, \u002710387\u0027, \u002711356\u0027, \u002713117\u0027, \u002713204\u0027, \u002713208\u0027, \u002713210\u0027, \u002714118\u0027, \u002716015\u0027, \u002716211\u0027, \u002716358\u0027, \u002717300\u0027, \u002717434\u0027, \u002718015\u0027, \u002718027\u0027, \u002718033\u0027, \u002718109\u0027, \u002718197\u0027, \u002718207\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002719073\u0027, \u002721231\u0027, \u002725056\u0027, \u002728061\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728134\u0027, \u002728218\u0027, \u002728229\u0027, \u002728280\u0027, \u002728318\u0027, \u002728354\u0027, \u002728380\u0027, \u002730164\u0027, \u002731069\u0027, \u002731555\u0027, \u002732013\u0027, \u002733063\u0027, \u002733199\u0027, \u002733522\u0027, \u002734301\u0027, \u002735238\u0027, \u002735253\u0027, \u002736034\u0027, \u002736044\u0027, \u002736046\u0027, \u002736063\u0027, \u002736088\u0027, \u002736188\u0027, \u002736228\u0027, \u002736233\u0027, \u002737003\u0027, \u002737018\u0027, \u002737027\u0027, \u002737031\u0027, \u002737038\u0027, \u002737043\u0027, \u002737050\u0027, \u002737063\u0027, \u002737072\u0027, \u002737073\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737109\u0027, \u002737119\u0027, \u002737122\u0027, \u002737132\u0027, \u002737141\u0027, \u002737156\u0027, \u002737161\u0027, \u002737163\u0027, \u002737170\u0027, \u002737176\u0027, \u002737177\u0027, \u002737180\u0027, \u002737195\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737256\u0027, \u002737261\u0027, \u002737278\u0027, \u002738185\u0027, \u002738316\u0027, \u002738344\u0027, \u002738544\u0027, \u002739198\u0027, \u002739297\u0027, \u002739300\u0027, \u002739434\u0027, \u002740088\u0027, \u002740192\u0027, \u002740266\u0027, \u002740282\u0027, \u002740312\u0027, \u002741002\u0027, \u002741003\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741013\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741022\u0027, \u002741023\u0027, \u002741025\u0027, \u002741028\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741067\u0027, \u002741068\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741078\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741099\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741114\u0027, \u002741115\u0027, \u002741119\u0027, \u002741120\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741154\u0027, \u002741155\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741180\u0027, \u002741181\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741189\u0027, \u002741192\u0027, \u002741194\u0027, \u002741198\u0027, \u002741199\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741206\u0027, \u002741207\u0027, \u002741209\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741225\u0027, \u002741226\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741235\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741262\u0027, \u002741263\u0027, \u002741265\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741285\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002744047\u0027, \u002744109\u0027, \u002744190\u0027, \u002745028\u0027, \u002745030\u0027, \u002745061\u0027, \u002745067\u0027, \u002745075\u0027, \u002745081\u0027, \u002745109\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745155\u0027, \u002745169\u0027, \u002745179\u0027, \u002745202\u0027, \u002745203\u0027, \u002745208\u0027, \u002745232\u0027, \u002745234\u0027, \u002745248\u0027, \u002745284\u0027, \u002745285\u0027, \u002745309\u0027, \u002745344\u0027, \u002746030\u0027, \u002748092\u0027, \u002749007\u0027, \u002749042\u0027, \u002749054\u0027, \u002749188\u0027, \u002750147\u0027, \u002751454\u0027, \u002753062\u0027, \u002754395\u0027, \u002754580\u0027, \u002756260\u0027, \u002757672\u0027, \u002759009\u0027, \u002759350\u0027, \u002760057\u0027, \u002760159\u0027, \u002760282\u0027, \u002760612\u0027, \u002761001\u0027, \u002761293\u0027, \u002761332\u0027, \u002763113\u0027, \u002763397\u0027, \u002764256\u0027, \u002764445\u0027, \u002767482\u0027, \u002769081\u0027, \u002769381\u0027, \u002769383\u0027, \u002769385\u0027, \u002769386\u0027, \u002769387\u0027, \u002769389\u0027, \u002772035\u0027, \u002772068\u0027, \u002772071\u0027, \u002772132\u0027, \u002772154\u0027, \u002772180\u0027, \u002772181\u0027, \u002772193\u0027, \u002772240\u0027, \u002772247\u0027, \u002772262\u0027, \u002772269\u0027, \u002772357\u0027, \u002772373\u0027, \u002775101\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775120\u0027, \u002776451\u0027, \u002776540\u0027, \u002777014\u0027, \u002777169\u0027, \u002777243\u0027, \u002777251\u0027, \u002778120\u0027, \u002778217\u0027, \u002778322\u0027, \u002778517\u0027, \u002778638\u0027, \u002778646\u0027, \u002778686\u0027, \u002779049\u0027, \u002779057\u0027, \u002779311\u0027, \u002780021\u0027, \u002786062\u0027, \u002786066\u0027, \u002786070\u0027, \u002786165\u0027, \u002786194\u0027, \u002787050\u0027, \u002789024\u0027, \u002789387\u0027, \u002790010\u0027, \u002791103\u0027, \u002791114\u0027, \u002791174\u0027, \u002791461\u0027, \u002792014\u0027, \u002792019\u0027, \u002792050\u0027, \u002792062\u0027, \u002792075\u0027, \u002793006\u0027, \u002793066\u0027, \u002794004\u0027, \u002794043\u0027, \u002794052\u0027, \u002795127\u0027, \u002797209\u0027, \u002799999\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"niveau_motorisation\".\"niveau_id\" in (\u00270\u0027, \u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"niveau_motorisation\".\"niveau_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Consommation carborant trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]})))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre de voitures des menages (moyenne)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre de voitures des menages (moyenne)]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, {[Measures].[Nombre de voitures des menages (moyenne)]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}), Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]})))) ON ROWSfrom [Cube1MobProInd]": [
    "select sum(mobpro_ind_1.nbpersco14men * mobpro_ind_1.coef_pond) as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select sum(mobpro_ind_1.nbpersco14men * mobpro_ind_1.coef_pond) as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, Filter({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]where {[Measures].[Nombre total d\u0027individus]}": [],
  "select NON EMPTY {Hierarchize({[Type de construction du logement.LOGT_TYPECONSTR_Hierarchie_1].[Type de construction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Energie de chauffage du logement.LOGT_ENERGIECHAUF_Hierarchie_1].[Energie].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"type_construction_logt\".\"type_id\" as \"c0\" from \"type_construction_logt\" as \"type_construction_logt\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"type_construction_logt\".\"type_id\" as \"c0\" from \"type_construction_logt\" as \"type_construction_logt\") as \"init\";",
    "select count(distinct \"type_id\") from \"type_construction_logt\";",
    "select count(distinct \"type_id\") from \"type_construction_logt\";",
    "select \"type_construction_logt\".\"type_id\" as \"c0\", \"energie_chauffage\".\"energie_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"type_construction_logt\" as \"type_construction_logt\", \"logements\" as \"logements\", \"energie_chauffage\" as \"energie_chauffage\" where \"logements\".\"type_construction\" \u003d \"type_construction_logt\".\"type_id\" and \"logements\".\"energie_chauffage\" \u003d \"energie_chauffage\".\"energie_id\" group by \"type_construction_logt\".\"type_id\", \"energie_chauffage\".\"energie_id\";",
    "select \"type_construction_logt\".\"type_id\" as \"c0\", \"energie_chauffage\".\"energie_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"type_construction_logt\" as \"type_construction_logt\", \"logements\" as \"logements\", \"energie_chauffage\" as \"energie_chauffage\" where \"logements\".\"type_construction\" \u003d \"type_construction_logt\".\"type_id\" and \"logements\".\"energie_chauffage\" \u003d \"energie_chauffage\".\"energie_id\" group by \"type_construction_logt\".\"type_id\", \"energie_chauffage\".\"energie_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (max)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie1_id\" as \"c0\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie1_id\" as \"c0\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpermen\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpermen\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))))))) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[tous les motifs confondus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Categorie].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, {[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}) ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)) ON ROWSfrom [Cube4Chauffage]where {[Age du referent.REF_AGE_Hierarchie_1].[tous les ages regroupes]}": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" \u003d \u00271\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members))), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation]}, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002772\u0027, \u002783\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002772\u0027, \u002783\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002704\u0027, \u002711\u0027, \u002721\u0027, \u002723\u0027, \u002743\u0027, \u002753\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002704\u0027, \u002711\u0027, \u002721\u0027, \u002723\u0027, \u002743\u0027, \u002753\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002706\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002773\u0027, \u002774\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002706\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002773\u0027, \u002774\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002722\u0027, \u002754\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", \"statut_emploi\".\"stat2_id\" as \"c5\", \"statut_emploi\".\"stat3_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002722\u0027, \u002754\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]}), Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]}), Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]}), Union(Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]}), Union(Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]}), Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, [Commune d\u0027etudes.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]})))))))))))))))), [Measures].[Nombre total d\u0027individus], BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Femmes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members)) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))))) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"niveau_motorisation\".\"niveau_id\" as \"c0\" from \"niveau_motorisation\" as \"niveau_motorisation\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_motorisation\".\"niveau_id\" as \"c0\" from \"niveau_motorisation\" as \"niveau_motorisation\") as \"init\";",
    "select count(distinct \"niveau_id\") from \"niveau_motorisation\";",
    "select count(distinct \"niveau_id\") from \"niveau_motorisation\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Sexe du referent.Sexe_Hierarchie].[Femmes], [Sexe du referent.Sexe_Hierarchie].[Hommes]}})} ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[55 à 59 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[60 à 64 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[65 à 69 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[70 à 74 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[75 à 79 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[80 à 84 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[85 à 89 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[90 à 94 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[95 à 99 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[100 à 104 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[105 à 109 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[110 à 114 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[115 à 119 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[120 ans]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers], [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale], [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche], [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction], [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, Filter({{[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members}}, (Exists({Ancestor([Type de menage.TYPMEN_Hierarchie].CurrentMember, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories])}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"type_menage\".\"typemr9_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\" from \"type_menage\" as \"type_menage\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"type_menage\".\"typemr9_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\" from \"type_menage\" as \"type_menage\") as \"init\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c1\", \"type_menage\".\"typemr4_nom\" as \"c2\", \"type_menage\".\"typemr9_id\" as \"c3\", \"type_menage\".\"typemr9_nom\" as \"c4\", \"type_menage\".\"typemr9_nom\" as \"c5\" from \"type_menage\" as \"type_menage\" group by \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\", \"type_menage\".\"typemr9_id\", \"type_menage\".\"typemr9_nom\" order by CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC, CASE WHEN \"type_menage\".\"typemr9_nom\" IS NULL THEN 1 ELSE 0 END, \"type_menage\".\"typemr9_nom\" ASC;",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c1\", \"type_menage\".\"typemr4_nom\" as \"c2\", \"type_menage\".\"typemr9_id\" as \"c3\", \"type_menage\".\"typemr9_nom\" as \"c4\", \"type_menage\".\"typemr9_nom\" as \"c5\" from \"type_menage\" as \"type_menage\" group by \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\", \"type_menage\".\"typemr9_id\", \"type_menage\".\"typemr9_nom\" order by CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC, CASE WHEN \"type_menage\".\"typemr9_nom\" IS NULL THEN 1 ELSE 0 END, \"type_menage\".\"typemr9_nom\" ASC;"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, [Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].Children}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr9_id\" as \"c0\", \"type_menage\".\"typemr9_nom\" as \"c1\", \"type_menage\".\"typemr9_nom\" as \"c2\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" \u003d \u00271\u0027 and (\"type_menage\".\"typemr4_id\" \u003d \u00271\u0027) group by \"type_menage\".\"typemr9_id\", \"type_menage\".\"typemr9_nom\" order by CASE WHEN \"type_menage\".\"typemr9_nom\" IS NULL THEN 1 ELSE 0 END, \"type_menage\".\"typemr9_nom\" ASC;",
    "select \"type_menage\".\"typemr9_id\" as \"c0\", \"type_menage\".\"typemr9_nom\" as \"c1\", \"type_menage\".\"typemr9_nom\" as \"c2\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" \u003d \u00271\u0027 and (\"type_menage\".\"typemr4_id\" \u003d \u00271\u0027) group by \"type_menage\".\"typemr9_id\", \"type_menage\".\"typemr9_nom\" order by CASE WHEN \"type_menage\".\"typemr9_nom\" IS NULL THEN 1 ELSE 0 END, \"type_menage\".\"typemr9_nom\" ASC;",
    "select count(distinct \"typemr9_id\") from \"type_menage\";",
    "select count(distinct \"typemr9_id\") from \"type_menage\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", \"type_menage\".\"typemr9_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" \u003d \u00271\u0027 and \"type_menage\".\"typemr9_id\" in (\u002711\u0027, \u002712\u0027) group by \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", \"type_menage\".\"typemr9_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" \u003d \u00271\u0027 and \"type_menage\".\"typemr9_id\" in (\u002711\u0027, \u002712\u0027) group by \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre de voitures des menages (max)], [Measures].[Nombre de voitures des menages (min)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 2].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_administrative].[Departement].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"departement_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\" from \"commune\" as \"commune_1\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"departement_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\" from \"commune\" as \"commune_1\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", \"csp\".\"csp1_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"departement_id\" as \"c1\", \"csp\".\"csp1_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}), Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}), Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de personnes scolarisees des menages (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AUVERGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BASSE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BOURGOGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BRETAGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE LIGÉRIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ORATORIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[CŒUR DE SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[ROMORANTINAIS ET  MONESTOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[VAL-DE-CHER - CONTROIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[GRAND CHAMBORD], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[BEAUCE ET GÂTINE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PAYS DE VENDÔME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PERCHE ET HAUT-VENDÔMOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL], [Commune de residence.CNERES_Hierarchie_intercommunale].[CHAMPAGNE-ARDENNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CORSE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[FRANCHE-COMTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUADELOUPE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUYANE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[HAUTE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ILE-DE-FRANCE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LA REUNION].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LANGUEDOC-ROUSSILLON].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LIMOUSIN].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LORRAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MARTINIQUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MAYOTTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MIDI-PYRENEES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[NORD-PAS-DE-CALAIS].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PAYS DE LA LOIRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PICARDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[POITOU-CHARENTES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PROVENCE-ALPES-COTE D\u0027AZUR].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[REG INCONNUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[RHONE-ALPES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[SAINT-MARTIN].[PAYS INCONNU].[SAINT-MARTIN], [Commune de residence.CNERES_Hierarchie_intercommunale].[SANS OBJET].[PAYS INCONNU].[SANS OBJET]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Depense trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Ecole maternelle et primaire, Collège]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Lycée,  Université et grande école]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Motif Etude détaillé inconnu]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Nourrice, Crèche]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Achats].[Achats]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Loisirs et autres]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Santé]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif inconnu].[Motif inconnu].[Motif inconnu]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Sans Objet].[Sans objet].[Sans objet]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Ecole maternelle et primaire, Collège]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Lycée,  Université et grande école]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Motif Etude détaillé inconnu]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Nourrice, Crèche]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Achats].[Achats]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Loisirs et autres]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Santé]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif inconnu].[Motif inconnu].[Motif inconnu]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Sans Objet].[Sans objet].[Sans objet]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Ecole maternelle et primaire, Collège]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Lycée,  Université et grande école]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Motif Etude détaillé inconnu]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Nourrice, Crèche]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Achats].[Achats]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Loisirs et autres]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Santé]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif inconnu].[Motif inconnu].[Motif inconnu]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Sans Objet].[Sans objet].[Sans objet]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))))))))))))))))))))))))))))))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"motif_deplacement\".\"categorie1_id\" as \"c4\", \"motif_deplacement\".\"categorie2_id\" as \"c5\", \"motif_deplacement\".\"motif_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", \"statut_occupation_lgt\".\"categorie_id\" as \"c8\", \"statut_occupation_lgt\".\"statut_id\" as \"c9\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"motif_deplacement\".\"categorie1_id\" as \"c4\", \"motif_deplacement\".\"categorie2_id\" as \"c5\", \"motif_deplacement\".\"motif_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", \"statut_occupation_lgt\".\"categorie_id\" as \"c8\", \"statut_occupation_lgt\".\"statut_id\" as \"c9\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"motif_deplacement\".\"categorie1_id\" as \"c5\", \"motif_deplacement\".\"categorie2_id\" as \"c6\", \"motif_deplacement\".\"motif_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", \"statut_occupation_lgt\".\"categorie_id\" as \"c9\", \"statut_occupation_lgt\".\"statut_id\" as \"c10\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"motif_deplacement\".\"categorie1_id\" as \"c5\", \"motif_deplacement\".\"categorie2_id\" as \"c6\", \"motif_deplacement\".\"motif_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", \"statut_occupation_lgt\".\"categorie_id\" as \"c9\", \"statut_occupation_lgt\".\"statut_id\" as \"c10\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"motif_deplacement\" as \"motif_deplacement\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00272\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00272X\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_vulnerabilite].[Classe de vulnérabilité énergétique inconnue].[ABAUCOURT-HAUTECOURT], [Commune de residence.CNERES_Hierarchie_vulnerabilite].[Classe de vulnérabilité énergétique inconnue].[ABBARETZ]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"classe_vulnerabilite_insee_id\" as \"c1\", \"csp\".\"csp1_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"commune_id\" in (\u002744001\u0027, \u002755002\u0027) and \"commune\".\"classe_vulnerabilite_insee_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"commune_id\", \"commune\".\"classe_vulnerabilite_insee_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"classe_vulnerabilite_insee_id\" as \"c1\", \"csp\".\"csp1_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"commune_id\" in (\u002744001\u0027, \u002755002\u0027) and \"commune\".\"classe_vulnerabilite_insee_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"commune_id\", \"commune\".\"classe_vulnerabilite_insee_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"temps_emploi\".\"temps_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"mode_transport\".\"categorie_id\" as \"c0\" from \"mode_transport\" as \"mode_transport\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"mode_transport\".\"categorie_id\" as \"c0\" from \"mode_transport\" as \"mode_transport\") as \"init\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\" from \"age_revolu_10\" as \"age_revolu_10\" group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC;",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\" from \"age_revolu_10\" as \"age_revolu_10\" group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order({Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans]})}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[VILLENEUVE-FROUVILLE]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[tous les statuts confondus]})), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[tous les statuts confondus]})))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"pays_id\" as \"c12\", \"commune_1\".\"pays_nom\" as \"c13\", \"commune_1\".\"pays_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"pays_id\" as \"c12\", \"commune_1\".\"pays_nom\" as \"c13\", \"commune_1\".\"pays_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, {[Measures].[Nombre total d\u0027individus]})))))))))))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Categorie].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members}, {[Commune de residence.CNERES_Hierarchie_administrative].[CENTRE].[LOIR-ET-CHER].[BLOIS]}})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre de voitures des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[toutes les annees]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"pays_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"pays_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"pays_id\" as \"c0\", \"commune\".\"pays_nom\" as \"c1\", \"commune\".\"pays_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"region_id\" \u003d \u002742\u0027) group by \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;",
    "select \"commune\".\"pays_id\" as \"c0\", \"commune\".\"pays_nom\" as \"c1\", \"commune\".\"pays_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"region_id\" \u003d \u002742\u0027) group by \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"communaute_communes_nom\" as \"c1\", \"commune\".\"communaute_communes_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002742\u0027) group by \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"communaute_communes_nom\" as \"c1\", \"commune\".\"communaute_communes_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002742\u0027) group by \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002742\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027ROTT\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002742\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027ROTT\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[tous les statuts confondus]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre de personnes des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type regroupe].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de logement.TYPLOGT_Hierarchie].[tous les types confondus]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[1 pièce], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[2 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[3 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[4 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[5 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[6 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[7 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[8 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[9 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[10 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[11 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[12 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[13 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[14 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[15 pièces], [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[16 pièces]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de personnes des menages (total)], [Measures].[Depense chauffage annuelle par unite de consommation (total)]}})} ON ROWSfrom [Cube4Chauffage]": [
    "select \"nombre_pieces\".\"nombre_pieces_id\" as \"c0\", sum(logements.poids_statistique_logt * logements.depenseannuelchaufparuc) as \"m0\" from \"nombre_pieces\" as \"nombre_pieces\", \"logements\" as \"logements\" where \"logements\".\"nombre_pieces\" \u003d \"nombre_pieces\".\"nombre_pieces_id\" group by \"nombre_pieces\".\"nombre_pieces_id\";",
    "select \"nombre_pieces\".\"nombre_pieces_id\" as \"c0\", sum(logements.poids_statistique_logt * logements.depenseannuelchaufparuc) as \"m0\" from \"nombre_pieces\" as \"nombre_pieces\", \"logements\" as \"logements\" where \"logements\".\"nombre_pieces\" \u003d \"nombre_pieces\".\"nombre_pieces_id\" group by \"nombre_pieces\".\"nombre_pieces_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre de personnes des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type regroupe].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Surface du logement (moyenne)]}, [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members), Union(Crossjoin({[Measures].[Consomattion chauffage annuelle (min)]}, [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members), Crossjoin({[Measures].[Consomattion chauffage annuelle (max)]}, [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Surface du logement (moyenne)]}), Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Consomattion chauffage annuelle (min)]}), Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Consomattion chauffage annuelle (max)]}), Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Consomattion chauffage annuelle (total)]}))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]})), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00276\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00276\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (total)]})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"age_revolu\".\"agerev_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Mode de cohabitation.MODCOHAB_Hierarchie_1].[Mode de cohabitation].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mode_cohabitation\".\"mode_id\" \u003d \u002722\u0027 group by \"mode_cohabitation\".\"mode_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mode_cohabitation\".\"mode_id\" \u003d \u002722\u0027 group by \"mode_cohabitation\".\"mode_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" group by \"mode_cohabitation\".\"mode_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" group by \"mode_cohabitation\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_cohabitation\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_cohabitation\" as \"mode_cohabitation\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_cohabitation\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_cohabitation\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_cohabitation\" as \"mode_cohabitation\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_cohabitation\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]where {[Measures].[Nombre total d\u0027individus]}": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order({Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Sexe.Sexe_Hierarchie].[Femmes]})) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and (\"csp\".\"csp1_id\" \u003d \u00271\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and (\"csp\".\"csp1_id\" \u003d \u00271\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]})))))))))))))))), [Measures].[Nombre total d\u0027individus], BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members)))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[SAINT-JULIEN-DE-CHEDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0)), [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" \u003d \u0027100X\u0027 and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" \u003d \u0027100X\u0027 and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"commune_id\" \u003d \u002741217\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"commune_id\" \u003d \u002741217\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Sexe du referent.Sexe_Hierarchie].[Hommes], [Sexe du referent.Sexe_Hierarchie].[Femmes]}})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[10 à 14 ans]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740003\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002752\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740003\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002752\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, [Commune d\u0027etudes.CNELOCC_Hierarchie_administrative].[Departement].Members), [Measures].[Nombre total d\u0027individus], BDESC) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 2].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Measures].[Duree trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Professions Intermédiaires]}, {[Measures].[Nombre total d\u0027individus]})))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[SAINT-JULIEN-DE-CHEDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AUVERGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BASSE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BOURGOGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BRETAGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE LIGÉRIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ORATORIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[CŒUR DE SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[ROMORANTINAIS ET  MONESTOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[VAL-DE-CHER - CONTROIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[GRAND CHAMBORD], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[BEAUCE ET GÂTINE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PAYS DE VENDÔME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PERCHE ET HAUT-VENDÔMOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL], [Commune de residence.CNERES_Hierarchie_intercommunale].[CHAMPAGNE-ARDENNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CORSE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[FRANCHE-COMTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUADELOUPE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUYANE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[HAUTE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ILE-DE-FRANCE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LA REUNION].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LANGUEDOC-ROUSSILLON].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LIMOUSIN].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LORRAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MARTINIQUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MAYOTTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MIDI-PYRENEES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[NORD-PAS-DE-CALAIS].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PAYS DE LA LOIRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PICARDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[POITOU-CHARENTES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PROVENCE-ALPES-COTE D\u0027AZUR].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[REG INCONNUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[RHONE-ALPES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[SAINT-MARTIN].[PAYS INCONNU].[SAINT-MARTIN], [Commune de residence.CNERES_Hierarchie_intercommunale].[SANS OBJET].[PAYS INCONNU].[SANS OBJET]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Professions Intermédiaires]}, {[Measures].[Nombre total d\u0027individus]})))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Annee du recensement.Annee_rencesement_Hierarchie_1].[toutes les annees]}, {[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"annee_recensement\".\"annee\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"annee_recensement\".\"annee\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"annee_recensement\".\"annee\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"annee_recensement\".\"annee\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"annee_recensement\".\"annee\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027, \u002793\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"annee_recensement\".\"annee\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"annee_recensement\".\"annee\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002754\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027, \u002793\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"annee_recensement\".\"annee\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"annee_recensement\".\"annee\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002782\u0027, \u0027ZZ\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"annee_recensement\".\"annee\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"annee_recensement\".\"annee\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002782\u0027, \u0027ZZ\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"annee_recensement\".\"annee\";"
  ],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"region_nom\" as \"c4\", \"commune_1\".\"region_nom\" as \"c5\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"region_nom\" as \"c4\", \"commune_1\".\"region_nom\" as \"c5\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"commune\".\"region_id\", \"commune_1\".\"region_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"commune\".\"region_id\", \"commune_1\".\"region_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de logement.TYPLOGT_Hierarchie].[Type regroupe].Members}, {[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(distinct \"categorie1_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie1_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie2_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie2_id\") from \"niveau_instruction\";",
    "select count(distinct \"niveau_inst_id\") from \"niveau_instruction\";",
    "select count(distinct \"niveau_inst_id\") from \"niveau_instruction\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"temps_emploi\".\"temps_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"temps_emploi\".\"temps_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]}))))) ON COLUMNS,  NON EMPTY Order(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members), [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select count(distinct \"typemr4_id\") from \"type_menage\";",
    "select count(distinct \"typemr4_id\") from \"type_menage\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[15 à 19 ans]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[20 à 24 ans]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[25 à 29 ans]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members)))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members)))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}))))) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"activite_economique\".\"na5_id\" as \"c0\" from \"activite_economique\" as \"activite_economique\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"activite_economique\".\"na5_id\" as \"c0\" from \"activite_economique\" as \"activite_economique\") as \"init\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\" from \"activite_economique\" as \"activite_economique\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC;",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\" from \"activite_economique\" as \"activite_economique\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC;",
    "select \"activite_economique\".\"na5_id\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"activite_economique\".\"na5_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"activite_economique\".\"na5_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}))) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]}), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)) ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat1_id\" as \"c0\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat1_id\" as \"c0\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"activite_economique\".\"na5_id\", \"temps_emploi\".\"temps_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"activite_economique\".\"na5_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members)))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 2].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Motif de deplacement.MOTIFDEP_Hierarchie_1].[tous les motifs confondus]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Depense trajet domicile - travail (moyenne)]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre de personnes des menages (moyenne)]})))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";"
  ],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\" from \"activite_economique\" as \"activite_economique\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC;",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\" from \"activite_economique\" as \"activite_economique\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC;"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Depense trajet domicile - travail (max)]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027) and \"mode_transport\".\"mode_id\" in (\u00271\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027) and \"mode_transport\".\"mode_id\" in (\u00271\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members))))))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie1_id\" as \"c0\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie1_id\" as \"c0\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(distinct \"categorie1_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie1_id\") from \"niveau_instruction\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Duree trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))))))), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BDESC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)) ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de logement.TYPLOGT_Hierarchie].[Maison].[Maison]}), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de logement.TYPLOGT_Hierarchie].[Appartement].[Appartement]}), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de logement.TYPLOGT_Hierarchie].[Autres].[Logement-foyer]})))) ON ROWSfrom [Cube1MobProInd]where {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027CHAILLES\u0027),UPPER(\u0027CHAMPIGNY-EN-BEAUCE\u0027),UPPER(\u0027LANCOME\u0027),UPPER(\u0027MESLAND\u0027),UPPER(\u0027RILLY-SUR-LOIRE\u0027),UPPER(\u0027SAINT-CYR-DU-GAULT\u0027),UPPER(\u0027SAINT-ETIENNE-DES-GUERETS\u0027),UPPER(\u0027VALAIRE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027CHAILLES\u0027),UPPER(\u0027CHAMPIGNY-EN-BEAUCE\u0027),UPPER(\u0027LANCOME\u0027),UPPER(\u0027MESLAND\u0027),UPPER(\u0027RILLY-SUR-LOIRE\u0027),UPPER(\u0027SAINT-CYR-DU-GAULT\u0027),UPPER(\u0027SAINT-ETIENNE-DES-GUERETS\u0027),UPPER(\u0027VALAIRE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Surface du logement (moyenne)]}), Union(Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Consomattion chauffage annuelle (min)]}), Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Consomattion chauffage annuelle (max)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)), Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé]}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme]}).Count \u003e 0)), [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}) ON COLUMNS,  NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, [Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, [Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"sexe\".\"sexe_id\" as \"c9\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"age_regroupe\".\"age_regroupe_id\" in (\u002725\u0027, \u002740\u0027, \u002755\u0027, \u002765\u0027, \u002780\u0027) and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"sexe\".\"sexe_id\" as \"c9\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"age_regroupe\".\"age_regroupe_id\" in (\u002725\u0027, \u002740\u0027, \u002755\u0027, \u002765\u0027, \u002780\u0027) and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Retraités]})), Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Professions Intermédiaires]})))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]where Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE]}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]})": [
    "select \"commune\".\"region_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00277\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"commune\".\"region_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00277\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"commune\".\"region_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"annee_recensement\".\"annee\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00277\u0027) and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"annee_recensement\".\"annee\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00277\u0027) and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune_1\".\"region_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 group by \"commune_1\".\"region_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 group by \"commune_1\".\"region_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]})), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]})), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]})), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]})), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AUVERGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BASSE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BOURGOGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BRETAGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE LIGÉRIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ORATORIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[CŒUR DE SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[ROMORANTINAIS ET  MONESTOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[VAL-DE-CHER - CONTROIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[GRAND CHAMBORD], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[BEAUCE ET GÂTINE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PAYS DE VENDÔME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PERCHE ET HAUT-VENDÔMOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL], [Commune de residence.CNERES_Hierarchie_intercommunale].[CHAMPAGNE-ARDENNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CORSE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[FRANCHE-COMTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUADELOUPE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUYANE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[HAUTE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ILE-DE-FRANCE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LA REUNION].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LANGUEDOC-ROUSSILLON].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LIMOUSIN].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LORRAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MARTINIQUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MAYOTTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MIDI-PYRENEES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[NORD-PAS-DE-CALAIS].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PAYS DE LA LOIRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PICARDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[POITOU-CHARENTES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PROVENCE-ALPES-COTE D\u0027AZUR].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[REG INCONNUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[RHONE-ALPES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[SAINT-MARTIN].[PAYS INCONNU].[SAINT-MARTIN], [Commune de residence.CNERES_Hierarchie_intercommunale].[SANS OBJET].[PAYS INCONNU].[SANS OBJET]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u0027-9\u0027, \u00277\u0027, \u00278\u0027, \u0027Z\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u0027-9\u0027, \u00277\u0027, \u00278\u0027, \u0027Z\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT].[VILLENEUVE-FROUVILLE]})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE].[EPUISAY]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_vulnerabilite].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"classe_vulnerabilite_insee_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"classe_vulnerabilite_insee_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"classe_vulnerabilite_insee_id\" as \"c0\", \"commune\".\"classe_vulnerabilite_insee_nom\" as \"c1\", \"commune\".\"classe_vulnerabilite_insee_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"classe_vulnerabilite_insee_id\", \"commune\".\"classe_vulnerabilite_insee_nom\" order by CASE WHEN \"commune\".\"classe_vulnerabilite_insee_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"classe_vulnerabilite_insee_nom\" ASC;",
    "select \"commune\".\"classe_vulnerabilite_insee_id\" as \"c0\", \"commune\".\"classe_vulnerabilite_insee_nom\" as \"c1\", \"commune\".\"classe_vulnerabilite_insee_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"classe_vulnerabilite_insee_id\", \"commune\".\"classe_vulnerabilite_insee_nom\" order by CASE WHEN \"commune\".\"classe_vulnerabilite_insee_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"classe_vulnerabilite_insee_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_vulnerabilite_insee_id\" \u003d \u0027-9\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ABAUCOURT-HAUTECOURT\u0027),UPPER(\u0027ABBARETZ\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_vulnerabilite_insee_id\" \u003d \u0027-9\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ABAUCOURT-HAUTECOURT\u0027),UPPER(\u0027ABBARETZ\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[MONTRICHARD]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[SAINT-JULIEN-DE-CHEDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[VALLIERES-LES-GRANDES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]}), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]})))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[toutes les csp]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order({Hierarchize({{[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[tous les ages revolus]}, {[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members}})}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de personnes scolarisees de plus de 14 ans (max)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", \"type_menage\".\"typemr9_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", \"type_menage\".\"typemr9_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members}, {[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members}})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"commune_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"commune_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune\".\"commune_id\" as \"c6\", \"commune\".\"commune_nom\" as \"c7\", \"commune\".\"commune_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select count(distinct \"commune_id\") from \"commune\";",
    "select count(distinct \"commune_id\") from \"commune\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"commune_id\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"commune_id\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Sexe.Sexe_Hierarchie].[Hommes], [Sexe.Sexe_Hierarchie].[Femmes]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Nombre de voitures des menages (max)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbvoitmen\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbvoitmen\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Categorie].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"communaute_communes_id\" in (\u002740009\u0027, \u002740013\u0027, \u002740016\u0027, \u002740017\u0027, \u002740019\u0027, \u002740021\u0027, \u002740023\u0027, \u002740024\u0027, \u002740026\u0027, \u002740029\u0027) and \"commune\".\"commune_id\" in (\u002741002\u0027, \u002741006\u0027, \u002741008\u0027, \u002741009\u0027, \u002741011\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741023\u0027, \u002741027\u0027, \u002741029\u0027, \u002741031\u0027, \u002741033\u0027, \u002741035\u0027, \u002741036\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741066\u0027, \u002741067\u0027, \u002741069\u0027, \u002741074\u0027, \u002741077\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741097\u0027, \u002741099\u0027, \u002741101\u0027, \u002741105\u0027, \u002741106\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741118\u0027, \u002741119\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741130\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741139\u0027, \u002741140\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741151\u0027, \u002741152\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741159\u0027, \u002741161\u0027, \u002741164\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741173\u0027, \u002741176\u0027, \u002741178\u0027, \u002741180\u0027, \u002741181\u0027, \u002741183\u0027, \u002741185\u0027, \u002741188\u0027, \u002741189\u0027, \u002741191\u0027, \u002741194\u0027, \u002741195\u0027, \u002741198\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741237\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741249\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741264\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741276\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741284\u0027, \u002741285\u0027, \u002741288\u0027, \u002741289\u0027, \u002741292\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"communaute_communes_id\" in (\u002740009\u0027, \u002740013\u0027, \u002740016\u0027, \u002740017\u0027, \u002740019\u0027, \u002740021\u0027, \u002740023\u0027, \u002740024\u0027, \u002740026\u0027, \u002740029\u0027) and \"commune\".\"commune_id\" in (\u002741002\u0027, \u002741006\u0027, \u002741008\u0027, \u002741009\u0027, \u002741011\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741023\u0027, \u002741027\u0027, \u002741029\u0027, \u002741031\u0027, \u002741033\u0027, \u002741035\u0027, \u002741036\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741066\u0027, \u002741067\u0027, \u002741069\u0027, \u002741074\u0027, \u002741077\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741097\u0027, \u002741099\u0027, \u002741101\u0027, \u002741105\u0027, \u002741106\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741118\u0027, \u002741119\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741130\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741139\u0027, \u002741140\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741151\u0027, \u002741152\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741159\u0027, \u002741161\u0027, \u002741164\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741173\u0027, \u002741176\u0027, \u002741178\u0027, \u002741180\u0027, \u002741181\u0027, \u002741183\u0027, \u002741185\u0027, \u002741188\u0027, \u002741189\u0027, \u002741191\u0027, \u002741194\u0027, \u002741195\u0027, \u002741198\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741237\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741249\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741264\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741276\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741284\u0027, \u002741285\u0027, \u002741288\u0027, \u002741289\u0027, \u002741292\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]})))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Nombre total d\u0027individus]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members)) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY {Hierarchize({[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"nombre_pieces\".\"nombre_pieces_id\" as \"c0\" from \"nombre_pieces\" as \"nombre_pieces\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"nombre_pieces\".\"nombre_pieces_id\" as \"c0\" from \"nombre_pieces\" as \"nombre_pieces\") as \"init\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)), Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})))))))) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]}, Filter({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}}, (Exists({Ancestor([Statut d\u0027emploi.STATEMPL_Hierarchie].CurrentMember, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2])}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"sexe\".\"sexe_id\" as \"c0\" from \"sexe\" as \"sexe\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"sexe\".\"sexe_id\" as \"c0\" from \"sexe\" as \"sexe\") as \"init\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\", \"niveau_instruction\".\"categorie2_id\" as \"c3\", \"niveau_instruction\".\"niveau_inst_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"annee_recensement\".\"annee\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"annee_recensement\".\"annee\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"annee_recensement\".\"annee\";"
  ],
  "select NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Femmes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Femmes]}))), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[AUVERGNE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[BASSE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[BOURGOGNE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[BRETAGNE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE LIGÉRIENNE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ORATORIENNE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[CŒUR DE SOLOGNE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[ROMORANTINAIS ET  MONESTOIS]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[VAL-DE-CHER - CONTROIS]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[GRAND CHAMBORD]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[BEAUCE ET GÂTINE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PAYS DE VENDÔME]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PERCHE ET HAUT-VENDÔMOIS]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CHAMPAGNE-ARDENNE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CORSE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[FRANCHE-COMTE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[GUADELOUPE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[GUYANE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[HAUTE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[ILE-DE-FRANCE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[LA REUNION].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[LANGUEDOC-ROUSSILLON].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[LIMOUSIN].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[LORRAINE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[MARTINIQUE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[MAYOTTE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[MIDI-PYRENEES].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[NORD-PAS-DE-CALAIS].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[PAYS DE LA LOIRE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[PICARDIE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[POITOU-CHARENTES].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[PROVENCE-ALPES-COTE D\u0027AZUR].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[REG INCONNUE].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[RHONE-ALPES].[PAYS INCONNU].[CC INCONNUE]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[SAINT-MARTIN].[PAYS INCONNU].[SAINT-MARTIN]}), Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[SANS OBJET].[PAYS INCONNU].[SANS OBJET]})))))))))))))))))))))))))))))))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members), Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"niveau_motorisation\".\"niveau_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"niveau_motorisation\".\"niveau_id\", \"statut_occupation_lgt\".\"categorie_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Appartenance du logement a un HLM.LOGT_HLM_Hierarchie_1].[Appartenance a un HLM].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Sexe du referent.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube4Chauffage]": [
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u00271\u0027, \u00272\u0027) group by \"logement_hlm\".\"appartenance_hlm_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u00271\u0027, \u00272\u0027) group by \"logement_hlm\".\"appartenance_hlm_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Pas de transport]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun]}))))) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"type_menage\".\"typemr4_id\" as \"c0\" from \"type_menage\" as \"type_menage\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"type_menage\".\"typemr4_id\" as \"c0\" from \"type_menage\" as \"type_menage\") as \"init\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c1\", \"type_menage\".\"typemr4_nom\" as \"c2\" from \"type_menage\" as \"type_menage\" group by \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c1\", \"type_menage\".\"typemr4_nom\" as \"c2\" from \"type_menage\" as \"type_menage\" group by \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"mode_transport\".\"categorie_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"mode_transport\".\"categorie_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"departement_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"departement_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (min)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members)) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"annee_recensement\".\"annee\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"annee_recensement\".\"annee\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]}), Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Duree trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr4_id\" as \"c0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (max)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Motif de deplacement.MOTIFDEP_Hierarchie_1].[tous les motifs confondus]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Categorie].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Sexe.Sexe_Hierarchie].[tous les sexes confondus]}, {[Sexe.Sexe_Hierarchie].[Sexe].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Surface du logement (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Consommation carborant trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members), Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE].[ROTT], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE].[ALTWILLER], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE].[AMMERZWILLER], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE].[ANDOLSHEIM], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE].[ARTOLSHEIM], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE].[ASPACH], [Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE].[RAMOUS], [Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE].[QUINSAC], [Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE].[REIGNAC]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002742\u0027, \u002772\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"commune_id\" in (\u002724346\u0027, \u002733351\u0027, \u002764462\u0027, \u002767009\u0027, \u002767011\u0027, \u002768006\u0027, \u002768007\u0027, \u002768010\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002742\u0027, \u002772\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"commune_id\" in (\u002724346\u0027, \u002733351\u0027, \u002764462\u0027, \u002767009\u0027, \u002767011\u0027, \u002768006\u0027, \u002768007\u0027, \u002768010\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Duree trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[AVERDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[BLOIS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CANDE-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CELLETTES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMBON-SUR-CISSE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAUMONT-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHEVERNY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHITENAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHOUZY-SUR-CISSE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CORMERAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[COULANGES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[COUR-CHEVERNY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[FOSSE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[FRANCAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[HERBAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LA CHAPELLE-VENDOMOISE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LA CHAUSSEE-SAINT-VICTOR]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANDES-LE-GAULOIS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LES MONTILS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MAROLLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MENARS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MOLINEUF]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MONTEAUX]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MONTHOU-SUR-BIEVRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[ONZAIN]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[ORCHAISE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-BOHAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-DENIS-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-GERVAIS-LA-FORET]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-LUBIN-EN-VERGONNOIS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-SULPICE-DE-POMMERAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAMBIN]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SANTENAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SEILLAC]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SEUR]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VEUVES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLEBAROU]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLEFRANCOEUR]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Union(Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLERBON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))), Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VINEUIL]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))))))))))))))))))))))))))))))))))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" in (\u002741009\u0027, \u002741018\u0027, \u002741029\u0027, \u002741031\u0027, \u002741033\u0027, \u002741035\u0027, \u002741040\u0027, \u002741045\u0027, \u002741047\u0027, \u002741050\u0027, \u002741052\u0027, \u002741055\u0027, \u002741061\u0027, \u002741064\u0027, \u002741067\u0027, \u002741091\u0027, \u002741093\u0027, \u002741101\u0027, \u002741108\u0027, \u002741109\u0027, \u002741128\u0027, \u002741134\u0027, \u002741137\u0027, \u002741142\u0027, \u002741144\u0027, \u002741145\u0027, \u002741147\u0027, \u002741167\u0027, \u002741169\u0027, \u002741189\u0027, \u002741203\u0027, \u002741205\u0027, \u002741206\u0027, \u002741208\u0027, \u002741212\u0027, \u002741223\u0027, \u002741230\u0027, \u002741233\u0027, \u002741234\u0027, \u002741240\u0027, \u002741246\u0027, \u002741266\u0027, \u002741272\u0027, \u002741276\u0027, \u002741281\u0027, \u002741288\u0027, \u002741295\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"region_id\" as \"c2\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Depense trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Crossjoin({[Measures].[Consommation carborant trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]}, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]}, {[Measures].[Nombre de personnes des menages (moyenne)]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]}, {[Measures].[Nombre total d\u0027individus]})))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de logement.TYPLOGT_Hierarchie].[tous les types confondus]}), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order({Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Lien avec la personne de reference.LPRM_Hierarchie_1].[Lien avec la personne de reference].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"commune_id\" as \"c0\", \"commune_1\".\"communaute_communes_id\" as \"c1\", \"commune_1\".\"pays_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\" from \"commune\" as \"commune_1\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"commune_id\" as \"c0\", \"commune_1\".\"communaute_communes_id\" as \"c1\", \"commune_1\".\"pays_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\" from \"commune\" as \"commune_1\") as \"init\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"region_nom\" as \"c1\", \"commune_1\".\"region_nom\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"pays_nom\" as \"c4\", \"commune_1\".\"pays_nom\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"communaute_communes_nom\" as \"c7\", \"commune_1\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"commune_id\" as \"c9\", \"commune_1\".\"commune_nom\" as \"c10\", \"commune_1\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune_1\" group by \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"region_nom\" as \"c1\", \"commune_1\".\"region_nom\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"pays_nom\" as \"c4\", \"commune_1\".\"pays_nom\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"communaute_communes_nom\" as \"c7\", \"commune_1\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"commune_id\" as \"c9\", \"commune_1\".\"commune_nom\" as \"c10\", \"commune_1\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune_1\" group by \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u002711\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002752\u0027, \u002772\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u002711\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002752\u0027, \u002772\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002701\u0027, \u002703\u0027, \u002704\u0027, \u002721\u0027, \u002726\u0027, \u002731\u0027, \u002742\u0027, \u002753\u0027, \u002754\u0027, \u002783\u0027, \u002793\u0027) and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002701\u0027, \u002703\u0027, \u002704\u0027, \u002721\u0027, \u002726\u0027, \u002731\u0027, \u002742\u0027, \u002753\u0027, \u002754\u0027, \u002783\u0027, \u002793\u0027) and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u002702\u0027, \u002722\u0027, \u002741\u0027, \u002743\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027) and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u002702\u0027, \u002722\u0027, \u002741\u0027, \u002743\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027) and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u002706\u0027, \u00271B\u0027, \u002782\u0027, \u002794\u0027, \u0027ZZ\u0027) and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u002706\u0027, \u00271B\u0027, \u002782\u0027, \u002794\u0027, \u0027ZZ\u0027) and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002702304\u0027, \u002702691\u0027, \u002703065\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002705096\u0027, \u002706088\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713001\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714118\u0027, \u002714327\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718011\u0027, \u002718015\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718033\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718100\u0027, \u002718103\u0027, \u002718141\u0027, \u002718145\u0027, \u002718147\u0027, \u002718148\u0027, \u002718159\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718213\u0027, \u002718214\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002718290\u0027, \u002719272\u0027, \u002721295\u0027, \u002721355\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002723031\u0027, \u002724322\u0027, \u002725388\u0027, \u002726198\u0027, \u002726349\u0027, \u002727022\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728078\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728093\u0027, \u002728103\u0027, \u002728110\u0027, \u002728115\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728133\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728196\u0027, \u002728198\u0027, \u002728199\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728253\u0027, \u002728262\u0027, \u002728280\u0027, \u002728287\u0027, \u002728318\u0027, \u002728334\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u002729302\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002732459\u0027, \u002733058\u0027, \u002733063\u0027, \u002733243\u0027, \u002733281\u0027, \u002733483\u0027, \u002733540\u0027, \u002734101\u0027, \u002734145\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735238\u0027, \u002735352\u0027, \u002736018\u0027, \u002736034\u0027, \u002736036\u0027, \u002736044\u0027, \u002736063\u0027, \u002736068\u0027, \u002736069\u0027, \u002736072\u0027, \u002736077\u0027, \u002736088\u0027, \u002736093\u0027, \u002736103\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736162\u0027, \u002736171\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002736244\u0027, \u002737003\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737018\u0027, \u002737021\u0027, \u002737023\u0027, \u002737027\u0027, \u002737043\u0027, \u002737046\u0027, \u002737050\u0027, \u002737054\u0027, \u002737060\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737070\u0027, \u002737072\u0027, \u002737073\u0027, \u002737075\u0027, \u002737077\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737111\u0027, \u002737113\u0027, \u002737115\u0027, \u002737116\u0027, \u002737119\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737138\u0027, \u002737150\u0027, \u002737152\u0027, \u002737153\u0027, \u002737154\u0027, \u002737155\u0027, \u002737156\u0027, \u002737159\u0027, \u002737160\u0027, \u002737161\u0027, \u002737163\u0027, \u002737167\u0027, \u002737169\u0027, \u002737170\u0027, \u002737171\u0027, \u002737172\u0027, \u002737175\u0027, \u002737177\u0027, \u002737179\u0027, \u002737185\u0027, \u002737194\u0027, \u002737195\u0027, \u002737203\u0027, \u002737208\u0027, \u002737211\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737252\u0027, \u002737253\u0027, \u002737254\u0027, \u002737257\u0027, \u002737261\u0027, \u002737263\u0027, \u002737270\u0027, \u002737273\u0027, \u002737276\u0027, \u002737281\u0027, \u002738382\u0027, \u002739199\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744004\u0027, \u002744052\u0027, \u002744109\u0027, \u002744169\u0027, \u002744184\u0027, \u002744188\u0027, \u002745004\u0027, \u002745006\u0027, \u002745008\u0027, \u002745019\u0027, \u002745020\u0027, \u002745024\u0027, \u002745028\u0027, \u002745029\u0027, \u002745034\u0027, \u002745042\u0027, \u002745046\u0027, \u002745055\u0027, \u002745062\u0027, \u002745067\u0027, \u002745068\u0027, \u002745072\u0027, \u002745073\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745087\u0027, \u002745089\u0027, \u002745098\u0027, \u002745109\u0027, \u002745116\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745130\u0027, \u002745133\u0027, \u002745134\u0027, \u002745142\u0027, \u002745144\u0027, \u002745146\u0027, \u002745147\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745169\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745203\u0027, \u002745206\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745269\u0027, \u002745272\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745284\u0027, \u002745285\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745298\u0027, \u002745299\u0027, \u002745300\u0027, \u002745302\u0027, \u002745307\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002745344\u0027, \u002747157\u0027, \u002748095\u0027, \u002749003\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002749353\u0027, \u002749361\u0027, \u002750184\u0027, \u002751388\u0027, \u002751431\u0027, \u002751454\u0027, \u002751507\u0027, \u002751559\u0027, \u002751573\u0027, \u002752121\u0027, \u002752353\u0027, \u002753013\u0027, \u002753130\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002756251\u0027, \u002757474\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759009\u0027, \u002759121\u0027, \u002759350\u0027, \u002759384\u0027, \u002759606\u0027, \u002760057\u0027, \u002760139\u0027, \u002760233\u0027, \u002760463\u0027, \u002760491\u0027, \u002761043\u0027, \u002761116\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761411\u0027, \u002761454\u0027, \u002761484\u0027, \u002762041\u0027, \u002762351\u0027, \u002763047\u0027, \u002763113\u0027, \u002763124\u0027, \u002765257\u0027, \u002767202\u0027, \u002767348\u0027, \u002767482\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769100\u0027, \u002769168\u0027, \u002769259\u0027, \u002769266\u0027, \u002769268\u0027, \u002769275\u0027, \u002769290\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002771520\u0027, \u002772032\u0027, \u002772035\u0027, \u002772039\u0027, \u002772042\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772068\u0027, \u002772071\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772181\u0027, \u002772183\u0027, \u002772190\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772250\u0027, \u002772257\u0027, \u002772262\u0027, \u002772264\u0027, \u002772269\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002772366\u0027, \u002772373\u0027, \u002773181\u0027, \u002773227\u0027, \u002773257\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774256\u0027, \u002774268\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776035\u0027, \u002776540\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777058\u0027, \u002777060\u0027, \u002777108\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777288\u0027, \u002777291\u0027, \u002777305\u0027, \u002777309\u0027, \u002777327\u0027, \u002777337\u0027, \u002777379\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777467\u0027, \u002777495\u0027, \u002778003\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778297\u0027, \u002778372\u0027, \u002778383\u0027, \u002778407\u0027, \u002778418\u0027, \u002778440\u0027, \u002778501\u0027, \u002778545\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002778688\u0027, \u002779046\u0027, \u002779191\u0027, \u002779202\u0027, \u002780570\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783107\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785151\u0027, \u002785166\u0027, \u002785191\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787085\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002788512\u0027, \u002789025\u0027, \u002790010\u0027, \u002791086\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791228\u0027, \u002791272\u0027, \u002791338\u0027, \u002791377\u0027, \u002791405\u0027, \u002791425\u0027, \u002791433\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791661\u0027, \u002791692\u0027, \u002792004\u0027, \u002792007\u0027, \u002792009\u0027, \u002792012\u0027, \u002792020\u0027, \u002792023\u0027, \u002792024\u0027, \u002792025\u0027, \u002792026\u0027, \u002792032\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793008\u0027, \u002793010\u0027, \u002793013\u0027, \u002793027\u0027, \u002793046\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793057\u0027, \u002793059\u0027, \u002793064\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794016\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794042\u0027, \u002794043\u0027, \u002794046\u0027, \u002794047\u0027, \u002794048\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794071\u0027, \u002794073\u0027, \u002794076\u0027, \u002794078\u0027, \u002794080\u0027, \u002794081\u0027, \u002795018\u0027, \u002795051\u0027, \u002795127\u0027, \u002795203\u0027, \u002795218\u0027, \u002795500\u0027, \u002795527\u0027, \u002795572\u0027, \u002795607\u0027, \u002797409\u0027, \u002797611\u0027, \u002797801\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002702304\u0027, \u002702691\u0027, \u002703065\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002705096\u0027, \u002706088\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713001\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714118\u0027, \u002714327\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718011\u0027, \u002718015\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718033\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718100\u0027, \u002718103\u0027, \u002718141\u0027, \u002718145\u0027, \u002718147\u0027, \u002718148\u0027, \u002718159\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718213\u0027, \u002718214\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002718290\u0027, \u002719272\u0027, \u002721295\u0027, \u002721355\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002723031\u0027, \u002724322\u0027, \u002725388\u0027, \u002726198\u0027, \u002726349\u0027, \u002727022\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728078\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728093\u0027, \u002728103\u0027, \u002728110\u0027, \u002728115\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728133\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728196\u0027, \u002728198\u0027, \u002728199\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728253\u0027, \u002728262\u0027, \u002728280\u0027, \u002728287\u0027, \u002728318\u0027, \u002728334\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u002729302\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002732459\u0027, \u002733058\u0027, \u002733063\u0027, \u002733243\u0027, \u002733281\u0027, \u002733483\u0027, \u002733540\u0027, \u002734101\u0027, \u002734145\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735238\u0027, \u002735352\u0027, \u002736018\u0027, \u002736034\u0027, \u002736036\u0027, \u002736044\u0027, \u002736063\u0027, \u002736068\u0027, \u002736069\u0027, \u002736072\u0027, \u002736077\u0027, \u002736088\u0027, \u002736093\u0027, \u002736103\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736162\u0027, \u002736171\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002736244\u0027, \u002737003\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737018\u0027, \u002737021\u0027, \u002737023\u0027, \u002737027\u0027, \u002737043\u0027, \u002737046\u0027, \u002737050\u0027, \u002737054\u0027, \u002737060\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737070\u0027, \u002737072\u0027, \u002737073\u0027, \u002737075\u0027, \u002737077\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737111\u0027, \u002737113\u0027, \u002737115\u0027, \u002737116\u0027, \u002737119\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737138\u0027, \u002737150\u0027, \u002737152\u0027, \u002737153\u0027, \u002737154\u0027, \u002737155\u0027, \u002737156\u0027, \u002737159\u0027, \u002737160\u0027, \u002737161\u0027, \u002737163\u0027, \u002737167\u0027, \u002737169\u0027, \u002737170\u0027, \u002737171\u0027, \u002737172\u0027, \u002737175\u0027, \u002737177\u0027, \u002737179\u0027, \u002737185\u0027, \u002737194\u0027, \u002737195\u0027, \u002737203\u0027, \u002737208\u0027, \u002737211\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737252\u0027, \u002737253\u0027, \u002737254\u0027, \u002737257\u0027, \u002737261\u0027, \u002737263\u0027, \u002737270\u0027, \u002737273\u0027, \u002737276\u0027, \u002737281\u0027, \u002738382\u0027, \u002739199\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744004\u0027, \u002744052\u0027, \u002744109\u0027, \u002744169\u0027, \u002744184\u0027, \u002744188\u0027, \u002745004\u0027, \u002745006\u0027, \u002745008\u0027, \u002745019\u0027, \u002745020\u0027, \u002745024\u0027, \u002745028\u0027, \u002745029\u0027, \u002745034\u0027, \u002745042\u0027, \u002745046\u0027, \u002745055\u0027, \u002745062\u0027, \u002745067\u0027, \u002745068\u0027, \u002745072\u0027, \u002745073\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745087\u0027, \u002745089\u0027, \u002745098\u0027, \u002745109\u0027, \u002745116\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745130\u0027, \u002745133\u0027, \u002745134\u0027, \u002745142\u0027, \u002745144\u0027, \u002745146\u0027, \u002745147\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745169\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745203\u0027, \u002745206\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745269\u0027, \u002745272\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745284\u0027, \u002745285\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745298\u0027, \u002745299\u0027, \u002745300\u0027, \u002745302\u0027, \u002745307\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002745344\u0027, \u002747157\u0027, \u002748095\u0027, \u002749003\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002749353\u0027, \u002749361\u0027, \u002750184\u0027, \u002751388\u0027, \u002751431\u0027, \u002751454\u0027, \u002751507\u0027, \u002751559\u0027, \u002751573\u0027, \u002752121\u0027, \u002752353\u0027, \u002753013\u0027, \u002753130\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002756251\u0027, \u002757474\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759009\u0027, \u002759121\u0027, \u002759350\u0027, \u002759384\u0027, \u002759606\u0027, \u002760057\u0027, \u002760139\u0027, \u002760233\u0027, \u002760463\u0027, \u002760491\u0027, \u002761043\u0027, \u002761116\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761411\u0027, \u002761454\u0027, \u002761484\u0027, \u002762041\u0027, \u002762351\u0027, \u002763047\u0027, \u002763113\u0027, \u002763124\u0027, \u002765257\u0027, \u002767202\u0027, \u002767348\u0027, \u002767482\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769100\u0027, \u002769168\u0027, \u002769259\u0027, \u002769266\u0027, \u002769268\u0027, \u002769275\u0027, \u002769290\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002771520\u0027, \u002772032\u0027, \u002772035\u0027, \u002772039\u0027, \u002772042\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772068\u0027, \u002772071\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772181\u0027, \u002772183\u0027, \u002772190\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772250\u0027, \u002772257\u0027, \u002772262\u0027, \u002772264\u0027, \u002772269\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002772366\u0027, \u002772373\u0027, \u002773181\u0027, \u002773227\u0027, \u002773257\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774256\u0027, \u002774268\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776035\u0027, \u002776540\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777058\u0027, \u002777060\u0027, \u002777108\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777288\u0027, \u002777291\u0027, \u002777305\u0027, \u002777309\u0027, \u002777327\u0027, \u002777337\u0027, \u002777379\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777467\u0027, \u002777495\u0027, \u002778003\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778297\u0027, \u002778372\u0027, \u002778383\u0027, \u002778407\u0027, \u002778418\u0027, \u002778440\u0027, \u002778501\u0027, \u002778545\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002778688\u0027, \u002779046\u0027, \u002779191\u0027, \u002779202\u0027, \u002780570\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783107\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785151\u0027, \u002785166\u0027, \u002785191\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787085\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002788512\u0027, \u002789025\u0027, \u002790010\u0027, \u002791086\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791228\u0027, \u002791272\u0027, \u002791338\u0027, \u002791377\u0027, \u002791405\u0027, \u002791425\u0027, \u002791433\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791661\u0027, \u002791692\u0027, \u002792004\u0027, \u002792007\u0027, \u002792009\u0027, \u002792012\u0027, \u002792020\u0027, \u002792023\u0027, \u002792024\u0027, \u002792025\u0027, \u002792026\u0027, \u002792032\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793008\u0027, \u002793010\u0027, \u002793013\u0027, \u002793027\u0027, \u002793046\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793057\u0027, \u002793059\u0027, \u002793064\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794016\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794042\u0027, \u002794043\u0027, \u002794046\u0027, \u002794047\u0027, \u002794048\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794071\u0027, \u002794073\u0027, \u002794076\u0027, \u002794078\u0027, \u002794080\u0027, \u002794081\u0027, \u002795018\u0027, \u002795051\u0027, \u002795127\u0027, \u002795203\u0027, \u002795218\u0027, \u002795500\u0027, \u002795527\u0027, \u002795572\u0027, \u002795607\u0027, \u002797409\u0027, \u002797611\u0027, \u002797801\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members}, {[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", \"type_menage\".\"typemr9_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", \"type_menage\".\"typemr9_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({{[Sexe.Sexe_Hierarchie].[tous les sexes confondus]}, {[Sexe.Sexe_Hierarchie].[Sexe].Members}})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";"
  ],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre de personnes des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[VILLENEUVE-FROUVILLE]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ABELCOURT\u0027),UPPER(\u0027VILLENEUVE-FROUVILLE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ABELCOURT\u0027),UPPER(\u0027VILLENEUVE-FROUVILLE\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002721\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002743\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027, \u002794\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members))), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[SAINT-JULIEN-DE-CHEDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0)), Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\", \"indicateur_lieu\".\"indicateur_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"age_revolu\".\"agerev_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"indicateur_lieu\".\"categorie_id\" as \"c1\", \"indicateur_lieu\".\"indicateur_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"age_revolu\".\"agerev_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"commune_id\" \u003d \u002741217\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"commune_id\" \u003d \u002741217\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"commune_id\" \u003d \u002741217\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"indicateur_lieu\".\"categorie_id\" as \"c5\", \"indicateur_lieu\".\"indicateur_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"commune_id\" \u003d \u002741217\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)), Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ORATORIENNE]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Depense trajet domicile - travail (max)]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[GRAND CHAMBORD]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[toutes les classes d\u0027ages revolus]}, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Retraités]}))), Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[toutes les classes d\u0027ages revolus]}, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Professions Intermédiaires]}))))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[tous les ages revolus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr4_id\" as \"c0\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c1\", \"type_menage\".\"typemr4_nom\" as \"c2\" from \"type_menage\" as \"type_menage\" group by \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c1\", \"type_menage\".\"typemr4_nom\" as \"c2\" from \"type_menage\" as \"type_menage\" group by \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))))))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, Filter({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))))))), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Appartenance du logement a un HLM.LOGT_HLM_Hierarchie_1].[Appartenance a un HLM].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"logement_hlm\".\"appartenance_hlm_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"niveau_instruction\" as \"niveau_instruction\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"logement_hlm\".\"appartenance_hlm_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[55 à 59 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[60 à 64 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[65 à 69 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[70 à 74 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[75 à 79 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[80 à 84 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[85 à 89 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[90 à 94 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[95 à 99 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[100 à 104 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[105 à 109 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[110 à 114 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[115 à 119 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[120 ans]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]})))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]}, Filter({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}}, (Exists({Ancestor([Statut d\u0027emploi.STATEMPL_Hierarchie].CurrentMember, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2])}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe du referent.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]}))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Sexe.Sexe_Hierarchie].[Hommes]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00271\u0027, \u00272\u0027, \u0027Z\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]})))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, Filter({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]})) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[SAINT-JULIEN-DE-CHEDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0)), [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, [Sexe du referent.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube4Chauffage]where {[Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members}": [
    "select (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c0\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u0027Residences principales\u0027 else \u0027Autres\u0027 end) as \"c1\" from \"categorie_logement\" as \"categorie_logement\" group by (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u0027Residences principales\u0027 else \u0027Autres\u0027 end) order by CASE WHEN (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) IS NULL THEN 1 ELSE 0 END, (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) ASC;",
    "select (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c0\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u0027Residences principales\u0027 else \u0027Autres\u0027 end) as \"c1\" from \"categorie_logement\" as \"categorie_logement\" group by (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u0027Residences principales\u0027 else \u0027Autres\u0027 end) order by CASE WHEN (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) IS NULL THEN 1 ELSE 0 END, (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Ouvriers]}, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members)), Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Employés]}, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members)))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Retraités]})), Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Professions Intermédiaires]})))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Distance trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube1MobProInd]where {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"niveau_motorisation\".\"niveau_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_motorisation\" as \"niveau_motorisation\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"niveau_motorisation\".\"niveau_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"niveau_motorisation\".\"niveau_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"niveau_motorisation\" as \"niveau_motorisation\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"niveau_motorisation\".\"niveau_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, [Sexe du referent.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) from (select distinct (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c0\" from \"categorie_logement\" as \"categorie_logement\") as \"init\";",
    "select count(*) from (select distinct (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c0\" from \"categorie_logement\" as \"categorie_logement\") as \"init\";",
    "select count(distinct \"categorie_id\") from \"categorie_logement\";",
    "select count(distinct \"categorie_id\") from \"categorie_logement\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Region].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027-9\u0027, \u00270\u0027, \u00270X\u0027, \u00271\u0027, \u002710\u0027, \u002710X\u0027, \u002711\u0027, \u002712\u0027, \u002713\u0027, \u002714\u0027, \u002715\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00275X\u0027, \u00276\u0027, \u00277\u0027, \u00278\u0027, \u00279\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027-9\u0027, \u00270\u0027, \u00270X\u0027, \u00271\u0027, \u002710\u0027, \u002710X\u0027, \u002711\u0027, \u002712\u0027, \u002713\u0027, \u002714\u0027, \u002715\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00275X\u0027, \u00276\u0027, \u00277\u0027, \u00278\u0027, \u00279\u0027) and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\";"
  ],
  "select NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[AVERDON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[BLOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CANDE-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CELLETTES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMBON-SUR-CISSE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAUMONT-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHEVERNY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHITENAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHOUZY-SUR-CISSE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CORMERAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[COULANGES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[COUR-CHEVERNY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[FOSSE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[FRANCAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[HERBAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LA CHAPELLE-VENDOMOISE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LA CHAUSSEE-SAINT-VICTOR], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANDES-LE-GAULOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LES MONTILS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MAROLLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MENARS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MOLINEUF], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MONTEAUX], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MONTHOU-SUR-BIEVRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[ONZAIN], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[ORCHAISE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-BOHAIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-DENIS-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-GERVAIS-LA-FORET], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-LUBIN-EN-VERGONNOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-SULPICE-DE-POMMERAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAMBIN], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SANTENAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SEILLAC], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SEUR], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VEUVES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLEBAROU], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLEFRANCOEUR], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLERBON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VINEUIL]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de personnes scolarisees des menages (max)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de residence.CNERES_Hierarchie_depense].[Commune de residence].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"classe_depense_insee_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"classe_depense_insee_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"classe_depense_insee_id\" as \"c0\", \"commune\".\"classe_depense_insee_nom\" as \"c1\", \"commune\".\"classe_depense_insee_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"classe_depense_insee_id\", \"commune\".\"classe_depense_insee_nom\" order by CASE WHEN \"commune\".\"classe_depense_insee_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"classe_depense_insee_nom\" ASC;",
    "select \"commune\".\"classe_depense_insee_id\" as \"c0\", \"commune\".\"classe_depense_insee_nom\" as \"c1\", \"commune\".\"classe_depense_insee_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"classe_depense_insee_id\", \"commune\".\"classe_depense_insee_nom\" order by CASE WHEN \"commune\".\"classe_depense_insee_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"classe_depense_insee_nom\" ASC;",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"commune_id\" as \"c0\", \"commune\".\"classe_depense_insee_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"commune_id\" as \"c0\", \"commune\".\"classe_depense_insee_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027VILLENEUVE-FROUVILLE\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027VILLENEUVE-FROUVILLE\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]})), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Depense trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\", \"commune\".\"region_id\" as \"c2\", \"commune\".\"region_nom\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"pays_id\" as \"c5\", \"commune\".\"pays_nom\" as \"c6\", \"commune\".\"pays_nom\" as \"c7\", \"commune\".\"communaute_communes_id\" as \"c8\", \"commune\".\"communaute_communes_nom\" as \"c9\", \"commune\".\"communaute_communes_nom\" as \"c10\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"age_revolu_10\".\"agerev10_id\" \u003d \u002725\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\", \"commune\".\"region_id\" as \"c2\", \"commune\".\"region_nom\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"pays_id\" as \"c5\", \"commune\".\"pays_nom\" as \"c6\", \"commune\".\"pays_nom\" as \"c7\", \"commune\".\"communaute_communes_id\" as \"c8\", \"commune\".\"communaute_communes_nom\" as \"c9\", \"commune\".\"communaute_communes_nom\" as \"c10\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"age_revolu_10\".\"agerev10_id\" \u003d \u002725\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (total)]})} ON COLUMNS,  NON EMPTY Crossjoin([Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, {[Measures].[Nombre total d\u0027individus]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, {[Sexe.Sexe_Hierarchie].[tous les sexes confondus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Measures].[Duree trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[10 à 14 ans]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[65 à 69 ans]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Type de construction du logement.LOGT_TYPECONSTR_Hierarchie_1].[Type de construction].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Energie de chauffage du logement.LOGT_ENERGIECHAUF_Hierarchie_1].[Energie].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[tous les niveaux confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (max)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select max(\"mobpro_ind_1\".\"nbpermen\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select max(\"mobpro_ind_1\".\"nbpermen\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 1].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, {[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}) ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)) ON ROWSfrom [Cube4Chauffage]where {[Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members}": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"age_revolu\".\"agerev_id\" as \"c0\" from \"age_revolu\" as \"age_revolu\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"age_revolu\".\"agerev_id\" as \"c0\" from \"age_revolu\" as \"age_revolu\") as \"init\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\" from \"age_revolu\" as \"age_revolu\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC;",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\" from \"age_revolu\" as \"age_revolu\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC;",
    "select count(distinct \"agerev_id\") from \"age_revolu\";",
    "select count(distinct \"agerev_id\") from \"age_revolu\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", \"statut_occupation_lgt\".\"statut_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"age_revolu\".\"agerev_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", \"statut_occupation_lgt\".\"statut_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"age_revolu\".\"agerev_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre de voitures des menages (moyenne)]})))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Appartenance du logement a un HLM.LOGT_HLM_Hierarchie_1].[Appartenance a un HLM].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Energie de chauffage du logement.LOGT_ENERGIECHAUF_Hierarchie_1].[Energie].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\" from \"logement_hlm\" as \"logement_hlm\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\" from \"logement_hlm\" as \"logement_hlm\") as \"init\";",
    "select count(distinct \"appartenance_hlm_id\") from \"logement_hlm\";",
    "select count(distinct \"appartenance_hlm_id\") from \"logement_hlm\";",
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"energie_chauffage\".\"energie_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"energie_chauffage\" as \"energie_chauffage\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"energie_chauffage\" \u003d \"energie_chauffage\".\"energie_id\" group by \"logement_hlm\".\"appartenance_hlm_id\", \"energie_chauffage\".\"energie_id\";",
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"energie_chauffage\".\"energie_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"energie_chauffage\" as \"energie_chauffage\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"energie_chauffage\" \u003d \"energie_chauffage\".\"energie_id\" group by \"logement_hlm\".\"appartenance_hlm_id\", \"energie_chauffage\".\"energie_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", \"statut_emploi\".\"stat3_id\" as \"c4\", \"temps_emploi\".\"temps_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"temps_emploi\".\"temps_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", \"statut_emploi\".\"stat2_id\" as \"c3\", \"statut_emploi\".\"stat3_id\" as \"c4\", \"temps_emploi\".\"temps_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_depense].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[0 à 4 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[5 à 9 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[10 à 14 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[15 à 19 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[20 à 24 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[25 à 29 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[30 à 34 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[35 à 39 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[40 à 44 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[45 à 49 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[55 à 59 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[60 à 64 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[65 à 69 ans]}, {[Measures].[Depense trajet domicile - travail (max)]}), Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[70 à 74 ans]}, {[Measures].[Depense trajet domicile - travail (max)]})))))))))))))))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Commune de travail.CNELOCC_Hierarchie_administrative].[Departement].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u00270\u0027, \u002712\u0027, \u002715\u0027, \u002720\u0027, \u002725\u0027, \u002730\u0027, \u002735\u0027, \u002740\u0027, \u002745\u0027, \u00275\u0027, \u002750\u0027, \u002755\u0027, \u002760\u0027, \u002765\u0027, \u002770\u0027) group by \"age_revolu\".\"agerev_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", max(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u00270\u0027, \u002712\u0027, \u002715\u0027, \u002720\u0027, \u002725\u0027, \u002730\u0027, \u002735\u0027, \u002740\u0027, \u002745\u0027, \u00275\u0027, \u002750\u0027, \u002755\u0027, \u002760\u0027, \u002765\u0027, \u002770\u0027) group by \"age_revolu\".\"agerev_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]})), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]})), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]})), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]})))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]})), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]})))))))))))))))))))))))))))))))))))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Pays].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"indicateur_lieu\".\"indicateur_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"indicateur_lieu\".\"indicateur_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}))))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]where {[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members}": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)), Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members))))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre de personnes des menages (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"activite_economique\".\"na5_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" group by \"activite_economique\".\"na5_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}), Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, {[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de cohabitation.MODCOHAB_Hierarchie_1].[Mode de cohabitation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"mode_cohabitation\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"mode_cohabitation\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members}, {[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members}})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" group by \"age_revolu_10\".\"agerev10_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" group by \"age_revolu_10\".\"agerev10_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"commune_id\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"commune_id\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", sum(mobsco_ind_1.nbpermen * mobsco_ind_1.coef_pond) as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"region_id\" as \"c0\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"departement_id\" \u003d \u002741\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027BLOIS\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"departement_id\" \u003d \u002741\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027BLOIS\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[AVERDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[BLOIS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CANDE-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CELLETTES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMBON-SUR-CISSE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAUMONT-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHEVERNY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHITENAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHOUZY-SUR-CISSE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CORMERAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[COULANGES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[COUR-CHEVERNY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[FOSSE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[FRANCAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[HERBAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LA CHAPELLE-VENDOMOISE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LA CHAUSSEE-SAINT-VICTOR]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANDES-LE-GAULOIS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LES MONTILS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MAROLLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MENARS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MOLINEUF]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MONTEAUX]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MONTHOU-SUR-BIEVRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[ONZAIN]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[ORCHAISE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-BOHAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-DENIS-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-GERVAIS-LA-FORET]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-LUBIN-EN-VERGONNOIS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-SULPICE-DE-POMMERAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAMBIN]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SANTENAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SEILLAC]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SEUR]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VEUVES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLEBAROU]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLEFRANCOEUR]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VILLERBON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VINEUIL]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[toutes les communes]}))))))))))))))))))))))))))))))))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Depense trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin({[Measures].[Consommation carborant trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Crossjoin({[Measures].[Nombre de personnes scolarisees de plus de 14 ans (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\", sum(mobpro_ind_1.nbpersco14men * mobpro_ind_1.coef_pond) as \"m1\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\", sum(mobpro_ind_1.nbpersco14men * mobpro_ind_1.coef_pond) as \"m1\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.nbpersco14men * mobpro_ind_1.coef_pond) as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.nbpersco14men * mobpro_ind_1.coef_pond) as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Mode de cohabitation.MODCOHAB_Hierarchie_1].[Mode de cohabitation].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (min)]}) ON ROWSfrom [Cube1MobProInd]": [
    "select min(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select min(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", min(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", min(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", min(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_cohabitation\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", min(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) group by \"mode_cohabitation\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}), Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}), Union(Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0)), {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}), Union(Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}), Union(Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}), Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, [Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, [Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", \"age_regroupe\".\"age_regroupe_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[tous les temps confondus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Sexe.Sexe_Hierarchie].[Femmes]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members)), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Sexe.Sexe_Hierarchie].[Hommes]}, [Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members)))) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" \u003d \u0027-9\u0027 group by \"age_revolu\".\"agerev_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" \u003d \u0027-9\u0027 group by \"age_revolu\".\"agerev_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" group by \"age_revolu\".\"agerev_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" group by \"age_revolu\".\"agerev_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"age_revolu\".\"agerev_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"age_revolu\".\"agerev_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin(Filter({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme]}).Count \u003e 0)), [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)), Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Sans diplôme]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002715\u0027, \u002725\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002715\u0027, \u002725\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members)) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[tous les niveaux confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Depense trajet domicile - travail (max)]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members), Crossjoin({[Measures].[Depense trajet domicile - travail (min)]}, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mobpro_ind_1\" as \"mobpro_ind_1\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027) and \"mode_transport\".\"mode_id\" in (\u00271\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027) and \"mode_transport\".\"mode_id\" in (\u00271\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]}, {[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[tous les ages revolus]}))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC;",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC;"
  ],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de logement.TYPLOGT_Hierarchie].[tous les types confondus]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c4\", \"temps_emploi\".\"temps_nom\" as \"c5\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\", \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC, CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"activite_economique\".\"na5_lib\" as \"c1\", \"activite_economique\".\"na5_lib\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c4\", \"temps_emploi\".\"temps_nom\" as \"c5\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"activite_economique\".\"na5_id\", \"activite_economique\".\"na5_lib\", \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\" order by CASE WHEN \"activite_economique\".\"na5_lib\" IS NULL THEN 1 ELSE 0 END, \"activite_economique\".\"na5_lib\" ASC, CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC;"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Sexe.Sexe_Hierarchie].[Hommes]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}), Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})} ON ROWSfrom [Cube1MobProInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}": [
    "select \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"niveau_nom\" as \"c1\", \"niveau_instruction\".\"niveau_nom\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\" where (\"niveau_instruction\".\"categorie2_id\" \u003d \u0027Z\u0027 and \"niveau_instruction\".\"categorie1_id\" \u003d \u0027Z\u0027) group by \"niveau_instruction\".\"niveau_inst_id\", \"niveau_instruction\".\"niveau_nom\" order by CASE WHEN \"niveau_instruction\".\"niveau_nom\" IS NULL THEN 1 ELSE 0 END, \"niveau_instruction\".\"niveau_nom\" ASC;",
    "select \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"niveau_nom\" as \"c1\", \"niveau_instruction\".\"niveau_nom\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\" where (\"niveau_instruction\".\"categorie2_id\" \u003d \u0027Z\u0027 and \"niveau_instruction\".\"categorie1_id\" \u003d \u0027Z\u0027) group by \"niveau_instruction\".\"niveau_inst_id\", \"niveau_instruction\".\"niveau_nom\" order by CASE WHEN \"niveau_instruction\".\"niveau_nom\" IS NULL THEN 1 ELSE 0 END, \"niveau_instruction\".\"niveau_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u0027100X\u0027, \u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002740X\u0027, \u002745X\u0027, \u002750X\u0027, \u002755X\u0027, \u002760X\u0027, \u002765X\u0027, \u002770X\u0027, \u002775X\u0027, \u002780X\u0027, \u002785X\u0027, \u002790X\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu\".\"agerev_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, {[Measures].[Duree trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"departement_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"departement_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"departement_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"departement_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) group by \"age_revolu\".\"agerev_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027un homme avec enfant(s)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale].[Famille principale monoparentale composée d\u0027une femme avec enfant(s)]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où l\u0027homme et la femme ont tous les deux le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où ni l\u0027homme ni la femme n\u0027ont le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seul l\u0027homme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple].[Famille principale composée d\u0027un couple où seule la femme a le statut d\u0027actif ayant un emploi\"\"]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Femme vivant seule]}), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille].[Homme vivant seul]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille].[Plusieurs personnes sans famille]})))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Lien avec la personne de reference.LPRM_Hierarchie_1].[Categorie].Members})}, [Lien avec la personne de reference.LPRM_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (max)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}), Union(Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Crossjoin({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (min)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type d\u0027activite du referent.REF_TYPACT_Hierarchie_1].[Type d\u0027actvite].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"type_activite\".\"type_id\" as \"c0\" from \"type_activite\" as \"type_activite\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"type_activite\".\"type_id\" as \"c0\" from \"type_activite\" as \"type_activite\") as \"init\";",
    "select count(distinct \"type_id\") from \"type_activite\";",
    "select count(distinct \"type_id\") from \"type_activite\";",
    "select \"type_activite\".\"type_id\" as \"c0\", sum(\"logements\".\"nbmen\") as \"m0\", max(\"logements\".\"consoannuelchauf\") as \"m1\", min(\"logements\".\"consoannuelchauf\") as \"m2\", sum(logements.poids_statistique_logt * logements.surfacelogt) as \"m3\" from \"type_activite\" as \"type_activite\", \"logements\" as \"logements\" where \"logements\".\"ref_type_activite\" \u003d \"type_activite\".\"type_id\" group by \"type_activite\".\"type_id\";",
    "select \"type_activite\".\"type_id\" as \"c0\", sum(\"logements\".\"nbmen\") as \"m0\", max(\"logements\".\"consoannuelchauf\") as \"m1\", min(\"logements\".\"consoannuelchauf\") as \"m2\", sum(logements.poids_statistique_logt * logements.surfacelogt) as \"m3\" from \"type_activite\" as \"type_activite\", \"logements\" as \"logements\" where \"logements\".\"ref_type_activite\" \u003d \"type_activite\".\"type_id\" group by \"type_activite\".\"type_id\";"
  ],
  "select NON EMPTY Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[Stagiaires rémunérés en entreprise].Children, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre de personnes des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin({[Type de logement.TYPLOGT_Hierarchie].[tous les types confondus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Femmes]}), Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Sexe.Sexe_Hierarchie].[Hommes]}))) ON COLUMNS,  NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Retraités]})), Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Professions Intermédiaires]})))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre de voitures des menages (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Propriétaire].[Propriétaire]}), Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué meublé ou d\u0027une chambre d\u0027hôtel]}), Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué vide HLM]}), Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué vide non HLM]}), Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Logé gratuitement].[Logé gratuitement]}), Union(Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Propriétaire].[Propriétaire]}), Union(Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué meublé ou d\u0027une chambre d\u0027hôtel]}), Union(Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué vide HLM]}), Union(Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué vide non HLM]}), Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Logé gratuitement].[Logé gratuitement]}))))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Order({Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Professions Intermédiaires], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Employés], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Retraités], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Autres personnes sans activité professionnelle], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1 inconnue], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Sans objet]}})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[VILLENEUVE-FROUVILLE]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[ABELCOURT]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin({[Commune de residence.CNERES_Hierarchie_depense].[Classe de dépense énergétique inconnue].[AIBRE]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members))))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]})} ON COLUMNS,  NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]})) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order({Hierarchize({{[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[55 à 59 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[60 à 64 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[65 à 69 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[70 à 74 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[75 à 79 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[80 à 84 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[85 à 89 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[90 à 94 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[95 à 99 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[100 à 104 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[105 à 109 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[110 à 114 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[115 à 119 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[120 ans]}})}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, Crossjoin({[Age du referent.REF_AGE_Hierarchie_1].[tous les ages regroupes]}, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]})))) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Depense trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members)) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(distinct \"categorie2_id\") from \"niveau_instruction\";",
    "select count(distinct \"categorie2_id\") from \"niveau_instruction\";",
    "select count(distinct \"niveau_inst_id\") from \"niveau_instruction\";",
    "select count(distinct \"niveau_inst_id\") from \"niveau_instruction\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", \"mode_transport\".\"categorie_id\" as \"c2\", \"mode_transport\".\"mode_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"annee_recensement\" as \"annee_recensement\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"annee_recensement\".\"annee\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie2_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"categorie2_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"categorie1_id\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\") as \"init\";",
    "select \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"niveau_nom\" as \"c1\", \"niveau_instruction\".\"niveau_nom\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\" where (\"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027) group by \"niveau_instruction\".\"niveau_inst_id\", \"niveau_instruction\".\"niveau_nom\" order by CASE WHEN \"niveau_instruction\".\"niveau_nom\" IS NULL THEN 1 ELSE 0 END, \"niveau_instruction\".\"niveau_nom\" ASC;",
    "select \"niveau_instruction\".\"niveau_inst_id\" as \"c0\", \"niveau_instruction\".\"niveau_nom\" as \"c1\", \"niveau_instruction\".\"niveau_nom\" as \"c2\" from \"niveau_instruction\" as \"niveau_instruction\" where (\"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027) group by \"niveau_instruction\".\"niveau_inst_id\", \"niveau_instruction\".\"niveau_nom\" order by CASE WHEN \"niveau_instruction\".\"niveau_nom\" IS NULL THEN 1 ELSE 0 END, \"niveau_instruction\".\"niveau_nom\" ASC;"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.consocarb_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\", \"commune_1\".\"pays_id\" as \"c2\", \"commune_1\".\"communaute_communes_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\", \"commune_1\".\"pays_id\" as \"c2\", \"commune_1\".\"communaute_communes_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"age_revolu\".\"agerev_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[toutes les communes]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Lien avec la personne de reference.LPRM_Hierarchie_1].[Lien avec la personne de reference].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"lien_avec_perrefm\".\"lien_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\" from \"lien_avec_perrefm\" as \"lien_avec_perrefm\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"lien_avec_perrefm\".\"lien_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\" from \"lien_avec_perrefm\" as \"lien_avec_perrefm\") as \"init\";",
    "select count(distinct \"categorie_id\") from \"lien_avec_perrefm\";",
    "select count(distinct \"categorie_id\") from \"lien_avec_perrefm\";",
    "select count(distinct \"lien_id\") from \"lien_avec_perrefm\";",
    "select count(distinct \"lien_id\") from \"lien_avec_perrefm\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", \"statut_emploi\".\"stat1_id\" as \"c3\", \"statut_emploi\".\"stat2_id\" as \"c4\", \"statut_emploi\".\"stat3_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]}))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027AVERDON\u0027),UPPER(\u0027BLOIS\u0027),UPPER(\u0027CANDE-SUR-BEUVRON\u0027),UPPER(\u0027CELLETTES\u0027),UPPER(\u0027CHAMBON-SUR-CISSE\u0027),UPPER(\u0027CHAMPIGNY-EN-BEAUCE\u0027),UPPER(\u0027CHAUMONT-SUR-LOIRE\u0027),UPPER(\u0027CHEVERNY\u0027),UPPER(\u0027CHITENAY\u0027),UPPER(\u0027CHOUZY-SUR-CISSE\u0027),UPPER(\u0027CORMERAY\u0027),UPPER(\u0027COULANGES\u0027),UPPER(\u0027COUR-CHEVERNY\u0027),UPPER(\u0027FOSSE\u0027),UPPER(\u0027FRANCAY\u0027),UPPER(\u0027HERBAULT\u0027),UPPER(\u0027LA CHAPELLE-VENDOMOISE\u0027),UPPER(\u0027LA CHAUSSEE-SAINT-VICTOR\u0027),UPPER(\u0027LANCOME\u0027),UPPER(\u0027LANDES-LE-GAULOIS\u0027),UPPER(\u0027LES MONTILS\u0027),UPPER(\u0027MAROLLES\u0027),UPPER(\u0027MENARS\u0027),UPPER(\u0027MESLAND\u0027),UPPER(\u0027MOLINEUF\u0027),UPPER(\u0027MONTEAUX\u0027),UPPER(\u0027MONTHOU-SUR-BIEVRE\u0027),UPPER(\u0027ONZAIN\u0027),UPPER(\u0027ORCHAISE\u0027),UPPER(\u0027RILLY-SUR-LOIRE\u0027),UPPER(\u0027SAINT-BOHAIRE\u0027),UPPER(\u0027SAINT-CYR-DU-GAULT\u0027),UPPER(\u0027SAINT-DENIS-SUR-LOIRE\u0027),UPPER(\u0027SAINT-ETIENNE-DES-GUERETS\u0027),UPPER(\u0027SAINT-GERVAIS-LA-FORET\u0027),UPPER(\u0027SAINT-LUBIN-EN-VERGONNOIS\u0027),UPPER(\u0027SAINT-SULPICE-DE-POMMERAY\u0027),UPPER(\u0027SAMBIN\u0027),UPPER(\u0027SANTENAY\u0027),UPPER(\u0027SEILLAC\u0027),UPPER(\u0027SEUR\u0027),UPPER(\u0027VALAIRE\u0027),UPPER(\u0027VEUVES\u0027),UPPER(\u0027VILLEBAROU\u0027),UPPER(\u0027VILLEFRANCOEUR\u0027),UPPER(\u0027VILLERBON\u0027),UPPER(\u0027VINEUIL\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027AVERDON\u0027),UPPER(\u0027BLOIS\u0027),UPPER(\u0027CANDE-SUR-BEUVRON\u0027),UPPER(\u0027CELLETTES\u0027),UPPER(\u0027CHAMBON-SUR-CISSE\u0027),UPPER(\u0027CHAMPIGNY-EN-BEAUCE\u0027),UPPER(\u0027CHAUMONT-SUR-LOIRE\u0027),UPPER(\u0027CHEVERNY\u0027),UPPER(\u0027CHITENAY\u0027),UPPER(\u0027CHOUZY-SUR-CISSE\u0027),UPPER(\u0027CORMERAY\u0027),UPPER(\u0027COULANGES\u0027),UPPER(\u0027COUR-CHEVERNY\u0027),UPPER(\u0027FOSSE\u0027),UPPER(\u0027FRANCAY\u0027),UPPER(\u0027HERBAULT\u0027),UPPER(\u0027LA CHAPELLE-VENDOMOISE\u0027),UPPER(\u0027LA CHAUSSEE-SAINT-VICTOR\u0027),UPPER(\u0027LANCOME\u0027),UPPER(\u0027LANDES-LE-GAULOIS\u0027),UPPER(\u0027LES MONTILS\u0027),UPPER(\u0027MAROLLES\u0027),UPPER(\u0027MENARS\u0027),UPPER(\u0027MESLAND\u0027),UPPER(\u0027MOLINEUF\u0027),UPPER(\u0027MONTEAUX\u0027),UPPER(\u0027MONTHOU-SUR-BIEVRE\u0027),UPPER(\u0027ONZAIN\u0027),UPPER(\u0027ORCHAISE\u0027),UPPER(\u0027RILLY-SUR-LOIRE\u0027),UPPER(\u0027SAINT-BOHAIRE\u0027),UPPER(\u0027SAINT-CYR-DU-GAULT\u0027),UPPER(\u0027SAINT-DENIS-SUR-LOIRE\u0027),UPPER(\u0027SAINT-ETIENNE-DES-GUERETS\u0027),UPPER(\u0027SAINT-GERVAIS-LA-FORET\u0027),UPPER(\u0027SAINT-LUBIN-EN-VERGONNOIS\u0027),UPPER(\u0027SAINT-SULPICE-DE-POMMERAY\u0027),UPPER(\u0027SAMBIN\u0027),UPPER(\u0027SANTENAY\u0027),UPPER(\u0027SEILLAC\u0027),UPPER(\u0027SEUR\u0027),UPPER(\u0027VALAIRE\u0027),UPPER(\u0027VEUVES\u0027),UPPER(\u0027VILLEBAROU\u0027),UPPER(\u0027VILLEFRANCOEUR\u0027),UPPER(\u0027VILLERBON\u0027),UPPER(\u0027VINEUIL\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Duree trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (total)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre de personnes des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, {[Type de logement.TYPLOGT_Hierarchie].[tous les types confondus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Measures].[Duree trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))))), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BDESC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (max)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740028\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027EPUISAY\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740028\u0027 and \"commune\".\"pays_id\" \u003d \u00271\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027EPUISAY\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Femmes]}))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat3_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat3_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat1_id\" as \"c2\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(distinct \"stat1_id\") from \"statut_emploi\";",
    "select count(distinct \"stat1_id\") from \"statut_emploi\";",
    "select count(distinct \"stat2_id\") from \"statut_emploi\";",
    "select count(distinct \"stat2_id\") from \"statut_emploi\";",
    "select count(distinct \"stat3_id\") from \"statut_emploi\";",
    "select count(distinct \"stat3_id\") from \"statut_emploi\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", \"temps_emploi\".\"temps_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"temps_emploi\".\"temps_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\", \"statut_emploi\".\"stat2_id\" as \"c2\", \"statut_emploi\".\"stat3_id\" as \"c3\", \"temps_emploi\".\"temps_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_emploi\" as \"statut_emploi\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes des menages (max)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", max(\"mobpro_ind_1\".\"nbpermen\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", max(\"mobpro_ind_1\".\"nbpermen\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Ouvriers]}), Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Employés]}))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00275\u0027, \u00276\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00275\u0027, \u00276\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}))))) ON COLUMNS,  NON EMPTY Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"indicateur_lieu\".\"categorie_id\" as \"c2\", \"indicateur_lieu\".\"indicateur_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", \"statut_emploi\".\"stat1_id\" as \"c7\", \"statut_emploi\".\"stat2_id\" as \"c8\", \"statut_emploi\".\"stat3_id\" as \"c9\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"indicateur_lieu\" as \"indicateur_lieu\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002745X\u0027, \u002750X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat3_id\" \u003d \u002711\u0027 group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"csp\".\"csp1_id\" as \"c1\", \"indicateur_lieu\".\"categorie_id\" as \"c2\", \"indicateur_lieu\".\"indicateur_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", \"statut_emploi\".\"stat1_id\" as \"c7\", \"statut_emploi\".\"stat2_id\" as \"c8\", \"statut_emploi\".\"stat3_id\" as \"c9\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"indicateur_lieu\" as \"indicateur_lieu\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"age_revolu\".\"agerev_id\" in (\u002715X\u0027, \u002720X\u0027, \u002725X\u0027, \u002730X\u0027, \u002735X\u0027, \u002745X\u0027, \u002750X\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00273\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat2_id\" \u003d \u00271\u0027 and \"statut_emploi\".\"stat3_id\" \u003d \u002711\u0027 group by \"age_revolu\".\"agerev_id\", \"csp\".\"csp1_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" group by \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 1].Members), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (min)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 1].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 1].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"motif_deplacement\".\"categorie1_id\" as \"c0\" from \"motif_deplacement\" as \"motif_deplacement\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"motif_deplacement\".\"categorie1_id\" as \"c0\" from \"motif_deplacement\" as \"motif_deplacement\") as \"init\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"motif_deplacement\".\"categorie1_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"motif_deplacement\".\"categorie1_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"motif_deplacement\".\"categorie1_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"motif_deplacement\".\"categorie1_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u0027-9\u0027, \u00277\u0027, \u00278\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u0027-9\u0027, \u00277\u0027, \u00278\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Non salariés]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Sexe du referent.Sexe_Hierarchie].[Femmes], [Sexe du referent.Sexe_Hierarchie].[Hommes]}})} ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune\".\"departement_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune\".\"departement_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\" from \"commune\" as \"commune\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre de personnes des menages (moyenne)]})) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[0 à 4 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[5 à 9 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[10 à 14 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[15 à 19 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[20 à 24 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[25 à 29 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[30 à 34 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[35 à 39 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[40 à 44 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[45 à 49 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[55 à 59 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[60 à 64 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[65 à 69 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[70 à 74 ans]}})} ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Commune de travail.CNELOCC_Hierarchie_administrative].[Departement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Lien avec la personne de reference.LPRM_Hierarchie_1].[Categorie].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"lien_avec_perrefm\".\"categorie_id\" as \"c0\" from \"lien_avec_perrefm\" as \"lien_avec_perrefm\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"lien_avec_perrefm\".\"categorie_id\" as \"c0\" from \"lien_avec_perrefm\" as \"lien_avec_perrefm\") as \"init\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]where {[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002721\u0027, \u002722\u0027, \u002724\u0027, \u002728\u0027, \u002733\u0027, \u002736\u0027, \u002737\u0027, \u002740\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002750\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002768\u0027, \u002771\u0027, \u002789\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027) and \"commune\".\"departement_id\" in (\u002703\u0027, \u002714\u0027, \u002715\u0027, \u002718\u0027, \u002721\u0027, \u002722\u0027, \u002724\u0027, \u002728\u0027, \u002733\u0027, \u002736\u0027, \u002737\u0027, \u002740\u0027, \u002743\u0027, \u002745\u0027, \u002747\u0027, \u002750\u0027, \u002758\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002768\u0027, \u002771\u0027, \u002789\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002704\u0027, \u002711\u0027, \u002721\u0027, \u002723\u0027, \u002743\u0027, \u002753\u0027, \u002774\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002708\u0027, \u002710\u0027, \u002711\u0027, \u002719\u0027, \u002723\u0027, \u002725\u0027, \u002727\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002730\u0027, \u002734\u0027, \u002735\u0027, \u002739\u0027, \u002748\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002766\u0027, \u002770\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002787\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027971\u0027, \u0027973\u0027, \u0027974\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002703\u0027, \u002704\u0027, \u002711\u0027, \u002721\u0027, \u002723\u0027, \u002743\u0027, \u002753\u0027, \u002774\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"departement_id\" in (\u002708\u0027, \u002710\u0027, \u002711\u0027, \u002719\u0027, \u002723\u0027, \u002725\u0027, \u002727\u0027, \u002729\u0027, \u00272A\u0027, \u00272B\u0027, \u002730\u0027, \u002734\u0027, \u002735\u0027, \u002739\u0027, \u002748\u0027, \u002751\u0027, \u002752\u0027, \u002756\u0027, \u002766\u0027, \u002770\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002787\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027971\u0027, \u0027973\u0027, \u0027974\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002706\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002773\u0027) and \"commune\".\"departement_id\" in (\u002702\u0027, \u002709\u0027, \u002712\u0027, \u002731\u0027, \u002732\u0027, \u002744\u0027, \u002746\u0027, \u002749\u0027, \u002753\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002765\u0027, \u002772\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002785\u0027, \u002788\u0027, \u0027972\u0027, \u0027976\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002702\u0027, \u002706\u0027, \u002722\u0027, \u002731\u0027, \u002741\u0027, \u002752\u0027, \u002773\u0027) and \"commune\".\"departement_id\" in (\u002702\u0027, \u002709\u0027, \u002712\u0027, \u002731\u0027, \u002732\u0027, \u002744\u0027, \u002746\u0027, \u002749\u0027, \u002753\u0027, \u002754\u0027, \u002755\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002762\u0027, \u002765\u0027, \u002772\u0027, \u002780\u0027, \u002781\u0027, \u002782\u0027, \u002785\u0027, \u002788\u0027, \u0027972\u0027, \u0027976\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002754\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002707\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002726\u0027, \u002738\u0027, \u002742\u0027, \u002769\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002783\u0027, \u002784\u0027, \u002786\u0027, \u002788\u0027, \u0027975\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"commune_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"mode_transport\".\"categorie_id\" as \"c4\", \"mode_transport\".\"mode_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002754\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"departement_id\" in (\u0027-9\u0027, \u002701\u0027, \u002704\u0027, \u002705\u0027, \u002706\u0027, \u002707\u0027, \u002713\u0027, \u002716\u0027, \u002717\u0027, \u002726\u0027, \u002738\u0027, \u002742\u0027, \u002769\u0027, \u002773\u0027, \u002774\u0027, \u002775\u0027, \u002779\u0027, \u002783\u0027, \u002784\u0027, \u002786\u0027, \u002788\u0027, \u0027975\u0027, \u0027977\u0027, \u0027978\u0027, \u002798\u0027, \u002799\u0027, \u0027ZZZ\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) group by \"commune\".\"region_id\", \"commune\".\"commune_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, Crossjoin([Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]})) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Femmes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members), Crossjoin({[Sexe du referent.Sexe_Hierarchie].[Hommes]}, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members))) ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Ouvriers]}), Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Employés]}))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre de personnes scolarisees des menages (min)]}) ON ROWSfrom [Cube2MobScoInd]": [
    "select min(\"mobsco_ind_1\".\"nbperscomen\") as \"m0\" from \"mobsco_ind_1\" as \"mobsco_ind_1\";",
    "select min(\"mobsco_ind_1\".\"nbperscomen\") as \"m0\" from \"mobsco_ind_1\" as \"mobsco_ind_1\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", min(\"mobsco_ind_1\".\"nbperscomen\") as \"m0\" from \"sexe\" as \"sexe\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", min(\"mobsco_ind_1\".\"nbperscomen\") as \"m0\" from \"sexe\" as \"sexe\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", min(\"mobsco_ind_1\".\"nbperscomen\") as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00275\u0027, \u00276\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", min(\"mobsco_ind_1\".\"nbperscomen\") as \"m0\" from \"csp\" as \"csp\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00275\u0027, \u00276\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u0027-9\u0027 and \"mode_transport\".\"mode_id\" \u003d \u0027-9\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\", \"commune\".\"region_id\" as \"c2\", \"commune\".\"region_nom\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"departement_id\" as \"c5\", \"commune\".\"departement_nom\" as \"c6\", \"commune\".\"departement_nom\" as \"c7\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\", \"commune\".\"region_id\" as \"c2\", \"commune\".\"region_nom\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"departement_id\" as \"c5\", \"commune\".\"departement_nom\" as \"c6\", \"commune\".\"departement_nom\" as \"c7\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[MONTRICHARD]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[SAINT-JULIEN-DE-CHEDON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE].[VALLIERES-LES-GRANDES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[tous les niveaux confondus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}), Union(Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}), Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, {[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]})))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (max)], [Measures].[Depense trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode inconnu].[Mode inconnu]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\", \"commune\".\"region_id\" as \"c2\", \"commune\".\"region_nom\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"pays_id\" as \"c5\", \"commune\".\"pays_nom\" as \"c6\", \"commune\".\"pays_nom\" as \"c7\", \"commune\".\"communaute_communes_id\" as \"c8\", \"commune\".\"communaute_communes_nom\" as \"c9\", \"commune\".\"communaute_communes_nom\" as \"c10\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"age_revolu_10\".\"agerev10_id\" \u003d \u002718\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"age_revolu_10\".\"agerev10_lib\" as \"c1\", \"commune\".\"region_id\" as \"c2\", \"commune\".\"region_nom\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"pays_id\" as \"c5\", \"commune\".\"pays_nom\" as \"c6\", \"commune\".\"pays_nom\" as \"c7\", \"commune\".\"communaute_communes_id\" as \"c8\", \"commune\".\"communaute_communes_nom\" as \"c9\", \"commune\".\"communaute_communes_nom\" as \"c10\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"age_revolu_10\".\"agerev10_id\" \u003d \u002718\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"age_revolu_10\".\"agerev10_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"age_revolu_10\".\"agerev10_id\" IS NULL THEN 1 ELSE 0 END, \"age_revolu_10\".\"agerev10_id\" ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members, {[Measures].[Surface du logement (moyenne)]}), Union(Crossjoin([Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members, {[Measures].[Consomattion chauffage annuelle (min)]}), Crossjoin([Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members, {[Measures].[Consomattion chauffage annuelle (max)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members, [Commune d\u0027etudes.CNELOCC_Hierarchie_administrative].[Departement].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune_1\".\"region_id\" as \"c6\", \"commune_1\".\"region_nom\" as \"c7\", \"commune_1\".\"region_nom\" as \"c8\", \"commune_1\".\"departement_id\" as \"c9\", \"commune_1\".\"departement_nom\" as \"c10\", \"commune_1\".\"departement_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"departement_id\", \"commune_1\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"departement_id\" as \"c3\", \"commune\".\"departement_nom\" as \"c4\", \"commune\".\"departement_nom\" as \"c5\", \"commune_1\".\"region_id\" as \"c6\", \"commune_1\".\"region_nom\" as \"c7\", \"commune_1\".\"region_nom\" as \"c8\", \"commune_1\".\"departement_id\" as \"c9\", \"commune_1\".\"departement_nom\" as \"c10\", \"commune_1\".\"departement_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"departement_id\", \"commune\".\"departement_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"departement_id\", \"commune_1\".\"departement_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"departement_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"departement_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"departement_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"departement_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"departement_id\" in (\u002701\u0027, \u002702\u0027, \u002703\u0027, \u002705\u0027, \u002706\u0027, \u002710\u0027, \u002711\u0027, \u002713\u0027, \u002714\u0027, \u002716\u0027, \u002717\u0027, \u002718\u0027, \u002719\u0027, \u002721\u0027, \u002725\u0027, \u002728\u0027, \u002730\u0027, \u002731\u0027, \u002732\u0027, \u002733\u0027, \u002734\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002738\u0027, \u002739\u0027, \u002740\u0027, \u002741\u0027, \u002744\u0027, \u002745\u0027, \u002746\u0027, \u002748\u0027, \u002749\u0027, \u002750\u0027, \u002751\u0027, \u002753\u0027, \u002754\u0027, \u002756\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002769\u0027, \u002772\u0027, \u002775\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002779\u0027, \u002780\u0027, \u002786\u0027, \u002787\u0027, \u002789\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027972\u0027, \u002799\u0027) group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"departement_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"departement_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune_1\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"commune_etud_fr\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"departement_id\" in (\u002701\u0027, \u002702\u0027, \u002703\u0027, \u002705\u0027, \u002706\u0027, \u002710\u0027, \u002711\u0027, \u002713\u0027, \u002714\u0027, \u002716\u0027, \u002717\u0027, \u002718\u0027, \u002719\u0027, \u002721\u0027, \u002725\u0027, \u002728\u0027, \u002730\u0027, \u002731\u0027, \u002732\u0027, \u002733\u0027, \u002734\u0027, \u002735\u0027, \u002736\u0027, \u002737\u0027, \u002738\u0027, \u002739\u0027, \u002740\u0027, \u002741\u0027, \u002744\u0027, \u002745\u0027, \u002746\u0027, \u002748\u0027, \u002749\u0027, \u002750\u0027, \u002751\u0027, \u002753\u0027, \u002754\u0027, \u002756\u0027, \u002757\u0027, \u002759\u0027, \u002760\u0027, \u002761\u0027, \u002763\u0027, \u002764\u0027, \u002767\u0027, \u002769\u0027, \u002772\u0027, \u002775\u0027, \u002776\u0027, \u002777\u0027, \u002778\u0027, \u002779\u0027, \u002780\u0027, \u002786\u0027, \u002787\u0027, \u002789\u0027, \u002790\u0027, \u002791\u0027, \u002792\u0027, \u002793\u0027, \u002794\u0027, \u002795\u0027, \u0027972\u0027, \u002799\u0027) group by \"commune\".\"region_id\", \"commune\".\"departement_id\", \"commune_1\".\"region_id\", \"commune_1\".\"departement_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]}), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, [Sexe du referent.Sexe_Hierarchie].[Sexe].Members)) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}, {[Age du referent.REF_AGE_Hierarchie_1].[tous les ages regroupes]}) ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}))) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}) ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"region_id\" as \"c0\" from \"commune\" as \"commune_1\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"region_id\" as \"c0\" from \"commune\" as \"commune_1\") as \"init\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\" from \"commune\" as \"commune\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC;",
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"pays_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\" from \"commune\" as \"commune_1\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"commune_1\".\"pays_id\" as \"c0\", \"commune_1\".\"region_id\" as \"c1\" from \"commune\" as \"commune_1\") as \"init\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members)) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]})) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00276\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u002717\u0027 group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))))))), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BDESC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[11-14 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))))))))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u0027-9\u0027, \u00270\u0027) and \"statut_occupation_lgt\".\"statut_id\" in (\u0027-9\u0027, \u00270\u0027) group by \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", \"statut_occupation_lgt\".\"statut_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u0027-9\u0027, \u00270\u0027) and \"statut_occupation_lgt\".\"statut_id\" in (\u0027-9\u0027, \u00270\u0027) group by \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_occupation_lgt\".\"categorie_id\" as \"c5\", \"statut_occupation_lgt\".\"statut_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_occupation_lgt\".\"categorie_id\" as \"c5\", \"statut_occupation_lgt\".\"statut_id\" as \"c6\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", \"statut_occupation_lgt\".\"statut_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"pays_id\" as \"c2\", \"commune\".\"communaute_communes_id\" as \"c3\", \"commune\".\"commune_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_occupation_lgt\".\"categorie_id\" as \"c6\", \"statut_occupation_lgt\".\"statut_id\" as \"c7\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"sexe\" as \"sexe\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002711\u0027, \u002715\u0027, \u002718\u0027, \u002725\u0027, \u002730\u0027) and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" in (\u00271\u0027, \u00275\u0027) and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740019\u0027) and \"commune\".\"commune_id\" in (\u002741005\u0027, \u002741024\u0027, \u002741096\u0027, \u002741152\u0027, \u002741159\u0027, \u002741285\u0027) and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" and \"statut_occupation_lgt\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u0027Z\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Mode de transport.MODTRANS_Hierarchie].[Categorie].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Duree trajet domicile - travail (min)]}), Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u0027-9\u0027, \u00277\u0027, \u00278\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u0027-9\u0027, \u00277\u0027, \u00278\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, Crossjoin([Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]})) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"indicateur_lieu\".\"indicateur_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"indicateur_lieu\".\"indicateur_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members)) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [],
  "select NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans], [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre de voitures des menages (min)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (moyenne)]}))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT].[VILLENEUVE-FROUVILLE]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\", \"commune_1\".\"communaute_communes_id\" as \"c18\", \"commune_1\".\"communaute_communes_nom\" as \"c19\", \"commune_1\".\"communaute_communes_nom\" as \"c20\", \"commune_1\".\"commune_id\" as \"c21\", \"commune_1\".\"commune_nom\" as \"c22\", \"commune_1\".\"commune_nom\" as \"c23\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741284\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740017\u0027 and \"commune\".\"pays_id\" \u003d \u00272\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\", \"commune_1\".\"communaute_communes_id\" as \"c18\", \"commune_1\".\"communaute_communes_nom\" as \"c19\", \"commune_1\".\"communaute_communes_nom\" as \"c20\", \"commune_1\".\"commune_id\" as \"c21\", \"commune_1\".\"commune_nom\" as \"c22\", \"commune_1\".\"commune_nom\" as \"c23\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741284\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740017\u0027 and \"commune\".\"pays_id\" \u003d \u00272\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"commune_id\" as \"c7\", \"csp\".\"csp1_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00272\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740017\u0027 and \"commune\".\"commune_id\" \u003d \u002741284\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" in (\u00272\u0027, \u00273\u0027) and \"commune_1\".\"communaute_communes_id\" in (\u002740009\u0027, \u002740016\u0027, \u002740017\u0027) and \"commune_1\".\"commune_id\" in (\u002741017\u0027, \u002741018\u0027, \u002741284\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"commune_id\" as \"c7\", \"csp\".\"csp1_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00272\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740017\u0027 and \"commune\".\"commune_id\" \u003d \u002741284\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" in (\u00272\u0027, \u00273\u0027) and \"commune_1\".\"communaute_communes_id\" in (\u002740009\u0027, \u002740016\u0027, \u002740017\u0027) and \"commune_1\".\"commune_id\" in (\u002741017\u0027, \u002741018\u0027, \u002741284\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Lien avec la personne de reference.LPRM_Hierarchie_1].[Lien avec la personne de reference].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - etudes (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Union(Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740009\u0027, \u002740013\u0027, \u002740017\u0027, \u002740019\u0027, \u002740021\u0027, \u002740022\u0027, \u002740023\u0027, \u002740024\u0027, \u002740026\u0027, \u002740029\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"communaute_communes_id\" in (\u002740001\u0027, \u002740009\u0027, \u002740013\u0027, \u002740017\u0027, \u002740019\u0027, \u002740021\u0027, \u002740022\u0027, \u002740023\u0027, \u002740024\u0027, \u002740026\u0027, \u002740029\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00272\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"motif_deplacement\".\"categorie1_id\" as \"c0\", \"motif_deplacement\".\"categorie2_id\" as \"c1\", \"motif_deplacement\".\"motif_id\" as \"c2\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"motif_deplacement\" as \"motif_deplacement\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" group by \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Measures].[Distance trajet domicile - travail (max)]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Retraités]})), Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Professions Intermédiaires]})))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]where Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[toutes les classes d\u0027ages revolus]}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]})": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members, Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]})) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002721\u0027, \u002722\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002731\u0027, \u002741\u0027, \u002742\u0027, \u002743\u0027, \u002752\u0027, \u002753\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002782\u0027, \u002783\u0027, \u002791\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002721\u0027, \u002722\u0027, \u002723\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002731\u0027, \u002741\u0027, \u002742\u0027, \u002743\u0027, \u002752\u0027, \u002753\u0027, \u002772\u0027, \u002773\u0027, \u002774\u0027, \u002782\u0027, \u002783\u0027, \u002791\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Femmes]}))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)) ON ROWSfrom [Cube4Chauffage]where {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}": [
    "select count(distinct \"stat1_id\") from \"statut_emploi\";",
    "select count(distinct \"stat1_id\") from \"statut_emploi\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"statut_emploi\".\"stat1_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"niveau_instruction\".\"categorie1_id\" as \"c4\", \"niveau_instruction\".\"categorie2_id\" as \"c5\", \"niveau_instruction\".\"niveau_inst_id\" as \"c6\", \"statut_emploi\".\"stat1_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, Crossjoin([Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members, {[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})) ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Crossjoin([Lien avec la personne de reference.LPRM_Hierarchie_1].[Lien avec la personne de reference].Members, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members) ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", \"motif_deplacement\".\"categorie1_id\" as \"c3\", \"motif_deplacement\".\"categorie2_id\" as \"c4\", \"motif_deplacement\".\"motif_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", \"statut_emploi\".\"stat2_id\" as \"c7\", \"statut_emploi\".\"stat3_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\", \"motif_deplacement\" as \"motif_deplacement\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", \"motif_deplacement\".\"categorie1_id\" as \"c3\", \"motif_deplacement\".\"categorie2_id\" as \"c4\", \"motif_deplacement\".\"motif_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", \"statut_emploi\".\"stat2_id\" as \"c7\", \"statut_emploi\".\"stat3_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\", \"motif_deplacement\" as \"motif_deplacement\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) and \"statut_emploi\".\"stat2_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Order(Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Distance trajet domicile - travail (min)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_motorisation\".\"niveau_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_motorisation\" as \"niveau_motorisation\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_motorisation\".\"niveau_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_motorisation\".\"niveau_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_motorisation\" as \"niveau_motorisation\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_motorisation\".\"niveau_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, {[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de cohabitation.MODCOHAB_Hierarchie_1].[Mode de cohabitation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"mode_cohabitation\".\"mode_id\" as \"c0\" from \"mode_cohabitation\" as \"mode_cohabitation\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"mode_cohabitation\".\"mode_id\" as \"c0\" from \"mode_cohabitation\" as \"mode_cohabitation\") as \"init\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"mode_cohabitation\".\"mode_nom\" as \"c1\", \"mode_cohabitation\".\"mode_nom\" as \"c2\" from \"mode_cohabitation\" as \"mode_cohabitation\" group by \"mode_cohabitation\".\"mode_id\", \"mode_cohabitation\".\"mode_nom\" order by CASE WHEN \"mode_cohabitation\".\"mode_nom\" IS NULL THEN 1 ELSE 0 END, \"mode_cohabitation\".\"mode_nom\" ASC;",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"mode_cohabitation\".\"mode_nom\" as \"c1\", \"mode_cohabitation\".\"mode_nom\" as \"c2\" from \"mode_cohabitation\" as \"mode_cohabitation\" group by \"mode_cohabitation\".\"mode_id\", \"mode_cohabitation\".\"mode_nom\" order by CASE WHEN \"mode_cohabitation\".\"mode_nom\" IS NULL THEN 1 ELSE 0 END, \"mode_cohabitation\".\"mode_nom\" ASC;",
    "select count(distinct \"mode_id\") from \"mode_cohabitation\";",
    "select count(distinct \"mode_id\") from \"mode_cohabitation\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_cohabitation\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"mode_cohabitation\".\"mode_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"mode_cohabitation\" as \"mode_cohabitation\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"modecohab_id\" \u003d \"mode_cohabitation\".\"mode_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_cohabitation\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE].[ROTT]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002742\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"commune_id\" \u003d \u002767416\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", \"statut_emploi\".\"stat2_id\" as \"c6\", \"statut_emploi\".\"stat3_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002742\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"commune_id\" \u003d \u002767416\u0027 and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\";",
    "select \"commune\".\"pays_id\" as \"c0\", \"commune\".\"pays_nom\" as \"c1\", \"commune\".\"pays_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"region_id\" \u003d \u002772\u0027) group by \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;",
    "select \"commune\".\"pays_id\" as \"c0\", \"commune\".\"pays_nom\" as \"c1\", \"commune\".\"pays_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"region_id\" \u003d \u002772\u0027) group by \"commune\".\"pays_id\", \"commune\".\"pays_nom\" order by CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC;",
    "select \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"communaute_communes_nom\" as \"c1\", \"commune\".\"communaute_communes_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002772\u0027) group by \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"communaute_communes_id\" as \"c0\", \"commune\".\"communaute_communes_nom\" as \"c1\", \"commune\".\"communaute_communes_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002772\u0027) group by \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002742\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ALTWILLER\u0027),UPPER(\u0027AMMERZWILLER\u0027),UPPER(\u0027ANDOLSHEIM\u0027),UPPER(\u0027ARTOLSHEIM\u0027),UPPER(\u0027ASPACH\u0027),UPPER(\u0027ROTT\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002742\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027ALTWILLER\u0027),UPPER(\u0027AMMERZWILLER\u0027),UPPER(\u0027ANDOLSHEIM\u0027),UPPER(\u0027ARTOLSHEIM\u0027),UPPER(\u0027ASPACH\u0027),UPPER(\u0027ROTT\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002772\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027QUINSAC\u0027),UPPER(\u0027RAMOUS\u0027),UPPER(\u0027REIGNAC\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"region_id\" \u003d \u002772\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027QUINSAC\u0027),UPPER(\u0027RAMOUS\u0027),UPPER(\u0027REIGNAC\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]})), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"temps_emploi\".\"temps_id\" as \"c0\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c1\", \"temps_emploi\".\"temps_nom\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c4\", \"type_menage\".\"typemr4_nom\" as \"c5\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and (\"type_menage\".\"typemr4_id\" \u003d \u00274\u0027) group by \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\", \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC, CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c1\", \"temps_emploi\".\"temps_nom\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c4\", \"type_menage\".\"typemr4_nom\" as \"c5\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and (\"type_menage\".\"typemr4_id\" \u003d \u00274\u0027) group by \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\", \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC, CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c1\", \"temps_emploi\".\"temps_nom\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c4\", \"type_menage\".\"typemr4_nom\" as \"c5\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and (\"type_menage\".\"typemr4_id\" \u003d \u00273\u0027) group by \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\", \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC, CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end as \"c1\", \"temps_emploi\".\"temps_nom\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end as \"c4\", \"type_menage\".\"typemr4_nom\" as \"c5\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and (\"type_menage\".\"typemr4_id\" \u003d \u00273\u0027) group by \"temps_emploi\".\"temps_id\", case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end, \"temps_emploi\".\"temps_nom\", \"type_menage\".\"typemr4_id\", case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end, \"type_menage\".\"typemr4_nom\" order by CASE WHEN case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end IS NULL THEN 1 ELSE 0 END, case when (temps_emploi.temps_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  temps_emploi.temps_id end ASC, CASE WHEN case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end IS NULL THEN 1 ELSE 0 END, case when (type_menage.typemr4_id \u003d \u0027-9\u0027) then \u0027999\u0027  else  type_menage.typemr4_id end ASC;",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", \"temps_emploi\".\"temps_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" and \"type_menage\".\"typemr4_id\" in (\u00273\u0027, \u00274\u0027) group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"region_nom\" as \"c1\", \"commune_1\".\"region_nom\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"pays_nom\" as \"c4\", \"commune_1\".\"pays_nom\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"communaute_communes_nom\" as \"c7\", \"commune_1\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"commune_id\" as \"c9\", \"commune_1\".\"commune_nom\" as \"c10\", \"commune_1\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"region_nom\" as \"c1\", \"commune_1\".\"region_nom\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"pays_nom\" as \"c4\", \"commune_1\".\"pays_nom\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"communaute_communes_nom\" as \"c7\", \"commune_1\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"commune_id\" as \"c9\", \"commune_1\".\"commune_nom\" as \"c10\", \"commune_1\".\"commune_nom\" as \"c11\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(*) as \"c0\" from (select distinct \"statut_occupation_lgt\".\"categorie_id\" as \"c0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_occupation_lgt\".\"categorie_id\" as \"c0\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\") as \"init\";",
    "select count(distinct \"categorie_id\") from \"statut_occupation_lgt\";",
    "select count(distinct \"categorie_id\") from \"statut_occupation_lgt\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"statut_occupation_lgt\".\"categorie_id\" as \"c0\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\", \"mobsco_ind_1\" as \"mobsco_ind_1\" where \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"niveau_motorisation\".\"niveau_id\", \"statut_occupation_lgt\".\"categorie_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"niveau_motorisation\".\"niveau_id\", \"statut_occupation_lgt\".\"categorie_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille]}), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}), Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - etudes (moyenne)]}))))))))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[18-24 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members)), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[30 ans ou plus]}, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members))))) ON ROWSfrom [Cube2MobScoInd]where {[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Travail].[Travail], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Ecole maternelle et primaire, Collège], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Lycée,  Université et grande école], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Motif Etude détaillé inconnu], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs obligatoires].[Etude].[Nourrice, Crèche], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Achats].[Achats], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Loisirs et autres], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motifs volontaires].[Autres].[Santé], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif inconnu].[Motif inconnu].[Motif inconnu], [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Sans Objet].[Sans objet].[Sans objet]}": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)), Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", \"statut_emploi\".\"stat1_id\" as \"c6\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Appartenance du logement a un HLM.LOGT_HLM_Hierarchie_1].[Appartenance a un HLM].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe du referent.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"sexe\".\"sexe_id\" as \"c0\" from \"sexe\" as \"sexe\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"sexe\".\"sexe_id\" as \"c0\" from \"sexe\" as \"sexe\") as \"init\";",
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"sexe\" as \"sexe\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u0027Z\u0027 group by \"logement_hlm\".\"appartenance_hlm_id\", \"sexe\".\"sexe_id\";",
    "select \"logement_hlm\".\"appartenance_hlm_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"logement_hlm\" as \"logement_hlm\", \"logements\" as \"logements\", \"sexe\" as \"sexe\" where \"logements\".\"logement_hlm\" \u003d \"logement_hlm\".\"appartenance_hlm_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" \u003d \u0027Z\u0027 group by \"logement_hlm\".\"appartenance_hlm_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}), Union(Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Crossjoin([Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Order(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"type_menage\".\"typemr4_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi du referent.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, {[Measures].[Nombre total d\u0027individus]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740017\u0027 and \"commune\".\"pays_id\" \u003d \u00272\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027VILLENEUVE-FROUVILLE\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740017\u0027 and \"commune\".\"pays_id\" \u003d \u00272\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and UPPER(\"commune\".\"commune_nom\") \u003d UPPER(\u0027VILLENEUVE-FROUVILLE\u0027) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre de personnes des menages (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]})} ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members, {[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}))) ON ROWSfrom [Cube4Chauffage]where {[Age du referent.REF_AGE_Hierarchie_1].[tous les ages regroupes]}": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, {[Measures].[Nombre total d\u0027individus]})) ON ROWSfrom [Cube1MobProInd]": [
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";",
    "select \"activite_economique\".\"na5_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", \"temps_emploi\".\"temps_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"activite_economique\" as \"activite_economique\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u00271\u0027, \u00272\u0027) group by \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Propriétaire].[Propriétaire]}), Union(Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué meublé ou d\u0027une chambre d\u0027hôtel]}), Union(Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué vide HLM]}), Union(Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Locataire].[Locataire ou sous-locataire d\u0027un logement loué vide non HLM]}), Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, {[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Logé gratuitement].[Logé gratuitement]})))))) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]}), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}), Union(Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]}), Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}))))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";",
    "select \"sexe\".\"sexe_id\" as \"c0\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"sexe\" as \"sexe\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Nombre de personnes scolarisees de plus de 14 ans (max)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr4_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", max(\"mobpro_ind_1\".\"nbpersco14men\") as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members, {[Measures].[Nombre total d\u0027individus]})), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Categorie].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de personnes scolarisees des menages (max)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", max(\"mobpro_ind_1\".\"nbperscomen\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"niveau_instruction\".\"categorie1_id\" as \"c0\", \"niveau_instruction\".\"categorie2_id\" as \"c1\", \"niveau_instruction\".\"niveau_inst_id\" as \"c2\", max(\"mobpro_ind_1\".\"nbperscomen\") as \"m0\" from \"niveau_instruction\" as \"niveau_instruction\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" group by \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat1_id\" as \"c0\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat1_id\" as \"c0\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"type_menage\".\"typemr4_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]}), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order({Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members, [Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Sexe du referent.Sexe_Hierarchie].[Femmes], [Sexe du referent.Sexe_Hierarchie].[Hommes]}})} ON ROWSfrom [Cube4Chauffage]where {[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[25-29 ans]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[15-17 ans]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002715\u0027, \u002725\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"age_revolu_10\".\"agerev10_id\" in (\u002715\u0027, \u002725\u0027) and \"mobsco_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"age_revolu_10\".\"agerev10_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[tous les temps confondus]}, {[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Professions Intermédiaires]}, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ALSACE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AQUITAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[AUVERGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BASSE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BOURGOGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[BRETAGNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ET FORÊT], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE LIGÉRIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Beauce Val de Loire].[BEAUCE ORATORIENNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[CŒUR DE SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES RIVIÈRES], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[ROMORANTINAIS ET  MONESTOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[VAL-DE-CHER - CONTROIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[GRAND CHAMBORD], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[BEAUCE ET GÂTINE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PAYS DE VENDÔME], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[PERCHE ET HAUT-VENDÔMOIS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VALLÉES LOIR ET BRAYE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL], [Commune de residence.CNERES_Hierarchie_intercommunale].[CHAMPAGNE-ARDENNE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CORSE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[FRANCHE-COMTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUADELOUPE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[GUYANE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[HAUTE-NORMANDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[ILE-DE-FRANCE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LA REUNION].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LANGUEDOC-ROUSSILLON].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LIMOUSIN].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[LORRAINE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MARTINIQUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MAYOTTE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[MIDI-PYRENEES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[NORD-PAS-DE-CALAIS].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PAYS DE LA LOIRE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PICARDIE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[POITOU-CHARENTES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[PROVENCE-ALPES-COTE D\u0027AZUR].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[REG INCONNUE].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[RHONE-ALPES].[PAYS INCONNU].[CC INCONNUE], [Commune de residence.CNERES_Hierarchie_intercommunale].[SAINT-MARTIN].[PAYS INCONNU].[SAINT-MARTIN], [Commune de residence.CNERES_Hierarchie_intercommunale].[SANS OBJET].[PAYS INCONNU].[SANS OBJET]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés non précaires]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Commerce, transports et services divers]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Administration publique, enseignement, santé humaine et action sociale]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Agriculture, sylviculture et pêche]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Construction]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Nature l\u0027activite economique.NATACTECO_Hierarchie].[Industrie manufacturière, industries extractives  et autres]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))))))))))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence], [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Retraités]})), Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Professions Intermédiaires]})))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[toutes les classes d\u0027ages revolus]})) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"mode_transport\".\"categorie_id\" as \"c3\", \"mode_transport\".\"mode_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - etudes (moyenne)], [Measures].[Nombre de voitures des menages (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\", sum(mobsco_ind_1.nbvehmen * mobsco_ind_1.coef_pond) as \"m2\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"niveau_motorisation\".\"niveau_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY Order(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin([Commune de residence.CNERES_Hierarchie_depense].[Commune de residence].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"classe_depense_insee_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"communaute_communes_id\" as \"c4\", \"commune_1\".\"commune_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741119\u0027, \u002741120\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741194\u0027, \u002741195\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002706088\u0027, \u002713001\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002728051\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737122\u0027, \u002737123\u0027, \u002737132\u0027, \u002737135\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737208\u0027, \u002737214\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741002\u0027, \u002741003\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741012\u0027, \u002741014\u0027, \u002741016\u0027, \u002741018\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741036\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741055\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741063\u0027, \u002741067\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741085\u0027, \u002741086\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741097\u0027, \u002741101\u0027, \u002741104\u0027, \u002741106\u0027, \u002741107\u0027, \u002741109\u0027, \u002741120\u0027, \u002741125\u0027, \u002741126\u0027, \u002741129\u0027, \u002741130\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741154\u0027, \u002741155\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741164\u0027, \u002741167\u0027, \u002741170\u0027, \u002741171\u0027, \u002741173\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741184\u0027, \u002741185\u0027, \u002741188\u0027, \u002741189\u0027, \u002741194\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741203\u0027, \u002741204\u0027, \u002741206\u0027, \u002741208\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741226\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741238\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741261\u0027, \u002741262\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741275\u0027, \u002741276\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741287\u0027, \u002741288\u0027, \u002741291\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002744052\u0027, \u002744109\u0027, \u002745006\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745089\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745315\u0027, \u002745317\u0027, \u002748095\u0027, \u002749353\u0027, \u002749361\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761484\u0027, \u002762041\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772269\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777337\u0027, \u002777379\u0027, \u002778003\u0027, \u002778297\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002780570\u0027, \u002785065\u0027, \u002785092\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793066\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"commune_id\", \"commune\".\"classe_depense_insee_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"classe_depense_insee_id\" as \"c1\", \"commune_1\".\"region_id\" as \"c2\", \"commune_1\".\"pays_id\" as \"c3\", \"commune_1\".\"communaute_communes_id\" as \"c4\", \"commune_1\".\"commune_id\" as \"c5\", \"csp\".\"csp1_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"csp\" as \"csp\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741119\u0027, \u002741120\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741194\u0027, \u002741195\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"commune\".\"classe_depense_insee_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002706088\u0027, \u002713001\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002728051\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737122\u0027, \u002737123\u0027, \u002737132\u0027, \u002737135\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737208\u0027, \u002737214\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741002\u0027, \u002741003\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741012\u0027, \u002741014\u0027, \u002741016\u0027, \u002741018\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741036\u0027, \u002741040\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741055\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741063\u0027, \u002741067\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741085\u0027, \u002741086\u0027, \u002741088\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741097\u0027, \u002741101\u0027, \u002741104\u0027, \u002741106\u0027, \u002741107\u0027, \u002741109\u0027, \u002741120\u0027, \u002741125\u0027, \u002741126\u0027, \u002741129\u0027, \u002741130\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741154\u0027, \u002741155\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741164\u0027, \u002741167\u0027, \u002741170\u0027, \u002741171\u0027, \u002741173\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741184\u0027, \u002741185\u0027, \u002741188\u0027, \u002741189\u0027, \u002741194\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741203\u0027, \u002741204\u0027, \u002741206\u0027, \u002741208\u0027, \u002741211\u0027, \u002741212\u0027, \u002741214\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741226\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741238\u0027, \u002741239\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741261\u0027, \u002741262\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741275\u0027, \u002741276\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741287\u0027, \u002741288\u0027, \u002741291\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002744052\u0027, \u002744109\u0027, \u002745006\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745089\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745315\u0027, \u002745317\u0027, \u002748095\u0027, \u002749353\u0027, \u002749361\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761484\u0027, \u002762041\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772269\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777337\u0027, \u002777379\u0027, \u002778003\u0027, \u002778297\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002780570\u0027, \u002785065\u0027, \u002785092\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793066\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" \u003d \u00273\u0027 group by \"commune\".\"commune_id\", \"commune\".\"classe_depense_insee_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\";",
    "select count(*) as \"c0\" from (select distinct \"annee_emmenagement\".\"annee_regroupee\" as \"c0\" from \"annee_emmenagement\" as \"annee_emmenagement\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"annee_emmenagement\".\"annee_regroupee\" as \"c0\" from \"annee_emmenagement\" as \"annee_emmenagement\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"annee_emmenagement\".\"annee\" as \"c0\", \"annee_emmenagement\".\"annee_regroupee\" as \"c1\" from \"annee_emmenagement\" as \"annee_emmenagement\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"annee_emmenagement\".\"annee\" as \"c0\", \"annee_emmenagement\".\"annee_regroupee\" as \"c1\" from \"annee_emmenagement\" as \"annee_emmenagement\") as \"init\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", min(\"mobpro_ind_1\".\"duree_courtchemin_dep\") as \"m2\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Depense trajet domicile - travail (min)]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Depense trajet domicile - travail (min)]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Depense trajet domicile - travail (min)]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00274\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", min(\"mobpro_ind_1\".\"depense_courtchemin_dep\") as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002703065\u0027, \u002705096\u0027, \u002706088\u0027, \u002713001\u0027, \u002714118\u0027, \u002714327\u0027, \u002718011\u0027, \u002718015\u0027, \u002718033\u0027, \u002718100\u0027, \u002718141\u0027, \u002718145\u0027, \u002718159\u0027, \u002718213\u0027, \u002718214\u0027, \u002718279\u0027, \u002718290\u0027, \u002721355\u0027, \u002723031\u0027, \u002726198\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728103\u0027, \u002728115\u0027, \u002728133\u0027, \u002728196\u0027, \u002728199\u0027, \u002728253\u0027, \u002728287\u0027, \u002728334\u0027, \u002729302\u0027, \u002732459\u0027, \u002733243\u0027, \u002733281\u0027, \u002733540\u0027, \u002734145\u0027, \u002735238\u0027, \u002736034\u0027, \u002736044\u0027, \u002736063\u0027, \u002736072\u0027, \u002736088\u0027, \u002736103\u0027, \u002736162\u0027, \u002736171\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002737003\u0027, \u002737018\u0027, \u002737021\u0027, \u002737027\u0027, \u002737050\u0027, \u002737054\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737073\u0027, \u002737077\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737113\u0027, \u002737116\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737150\u0027, \u002737152\u0027, \u002737154\u0027, \u002737156\u0027, \u002737159\u0027, \u002737161\u0027, \u002737163\u0027, \u002737169\u0027, \u002737170\u0027, \u002737172\u0027, \u002737175\u0027, \u002737179\u0027, \u002737185\u0027, \u002737203\u0027, \u002737208\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737233\u0027, \u002737250\u0027, \u002737253\u0027, \u002737257\u0027, \u002737261\u0027, \u002737270\u0027, \u002737273\u0027, \u002737281\u0027, \u002739199\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744052\u0027, \u002744109\u0027, \u002744184\u0027, \u002745006\u0027, \u002745019\u0027, \u002745024\u0027, \u002745028\u0027, \u002745034\u0027, \u002745055\u0027, \u002745067\u0027, \u002745068\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745089\u0027, \u002745116\u0027, \u002745130\u0027, \u002745134\u0027, \u002745146\u0027, \u002745147\u0027, \u002745169\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745203\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745269\u0027, \u002745272\u0027, \u002745284\u0027, \u002745285\u0027, \u002745298\u0027, \u002745302\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745344\u0027, \u002748095\u0027, \u002749003\u0027, \u002749353\u0027, \u002749361\u0027, \u002751431\u0027, \u002751507\u0027, \u002751573\u0027, \u002752121\u0027, \u002753130\u0027, \u002756251\u0027, \u002757474\u0027, \u002759009\u0027, \u002759350\u0027, \u002759606\u0027, \u002760057\u0027, \u002760233\u0027, \u002760491\u0027, \u002761116\u0027, \u002761411\u0027, \u002761484\u0027, \u002762041\u0027, \u002763047\u0027, \u002763113\u0027, \u002767202\u0027, \u002767482\u0027, \u002769100\u0027, \u002769168\u0027, \u002769266\u0027, \u002769275\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002771520\u0027, \u002772035\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772068\u0027, \u002772071\u0027, \u002772181\u0027, \u002772190\u0027, \u002772250\u0027, \u002772262\u0027, \u002772269\u0027, \u002772366\u0027, \u002772373\u0027, \u002773257\u0027, \u002774256\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776540\u0027, \u002777058\u0027, \u002777108\u0027, \u002777288\u0027, \u002777309\u0027, \u002777337\u0027, \u002777379\u0027, \u002777467\u0027, \u002778003\u0027, \u002778297\u0027, \u002778383\u0027, \u002778418\u0027, \u002778440\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002779191\u0027, \u002780570\u0027, \u002783107\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785166\u0027, \u002785191\u0027, \u002787085\u0027, \u002788512\u0027, \u002790010\u0027, \u002791086\u0027, \u002791228\u0027, \u002791338\u0027, \u002791377\u0027, \u002791433\u0027, \u002791661\u0027, \u002792004\u0027, \u002792009\u0027, \u002792012\u0027, \u002792023\u0027, \u002792024\u0027, \u002792026\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793013\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793059\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002794016\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794043\u0027, \u002794046\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794076\u0027, \u002794081\u0027, \u002795018\u0027, \u002795203\u0027, \u002795527\u0027, \u002795572\u0027, \u002797409\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" \u003d \u00272\u0027 and \"mode_transport\".\"mode_id\" \u003d \u00274\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages de plusieurs personnes sans famille], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale], [Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Consommation carborant trajet domicile - travail (min)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"consocarb_courtchemin_dep\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", min(\"mobpro_ind_1\".\"consocarb_courtchemin_dep\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" group by \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Measures].[Distance trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))))))))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, Filter({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]where {[Measures].[Duree trajet domicile - travail (moyenne)]}": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Depense trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Union(Crossjoin({[Measures].[Consommation carborant trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members)))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members)) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", \"statut_emploi\".\"stat1_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"commune_id\" in (\u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741215\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002745081\u0027, \u002745134\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe du referent.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Measures].[Distance trajet domicile - travail (max)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}), Crossjoin([Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members))), [Age revolu quinquenal.AgeRevQ_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube2MobScoInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\", sum(mobsco_ind_1.distance_centroid_detud * mobsco_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"sexe\" as \"sexe\" where \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobsco_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de la Vallée du Cher et du Romorantinais].[CHER À LA LOIRE]}).Count \u003e 0))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027MONTRICHARD\u0027),UPPER(\u0027SAINT-JULIEN-DE-CHEDON\u0027),UPPER(\u0027VALLIERES-LES-GRANDES\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;",
    "select \"commune\".\"commune_id\" as \"c0\", \"commune\".\"commune_nom\" as \"c1\", \"commune\".\"commune_nom\" as \"c2\" from \"commune\" as \"commune\" where (\"commune\".\"communaute_communes_id\" \u003d \u002740021\u0027 and \"commune\".\"pays_id\" \u003d \u00274\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) and ( UPPER(\"commune\".\"commune_nom\") IN (UPPER(\u0027MONTRICHARD\u0027),UPPER(\u0027SAINT-JULIEN-DE-CHEDON\u0027),UPPER(\u0027VALLIERES-LES-GRANDES\u0027))) group by \"commune\".\"commune_id\", \"commune\".\"commune_nom\" order by CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC;"
  ],
  "select NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Nombre de voitures des menages (moyenne)], [Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (max)], [Measures].[Depense trajet domicile - travail (max)]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Duree trajet domicile - travail (min)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Lien avec la personne de reference.LPRM_Hierarchie_1].[Lien avec la personne de reference].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"lien_avec_perrefm\".\"categorie_id\" as \"c1\", \"lien_avec_perrefm\".\"lien_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"lien_avec_perrefm\" as \"lien_avec_perrefm\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"lien_prm\" \u003d \"lien_avec_perrefm\".\"lien_id\" group by \"csp\".\"csp1_id\", \"lien_avec_perrefm\".\"categorie_id\", \"lien_avec_perrefm\".\"lien_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre de voitures des menages (moyenne)]})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"mode_transport\".\"categorie_id\" as \"c0\", \"mode_transport\".\"mode_id\" as \"c1\", sum(mobpro_ind_1.nbvoitmen * mobpro_ind_1.coef_pond) as \"m0\" from \"mode_transport\" as \"mode_transport\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" group by \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAMPIGNY-EN-BEAUCE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[LANCOME]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[MESLAND]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[RILLY-SUR-LOIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-CYR-DU-GAULT]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[SAINT-ETIENNE-DES-GUERETS]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Duree trajet domicile - travail (moyenne)]}), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[VALAIRE]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), {[Measures].[Nombre total d\u0027individus]})))))))))))))))))))))))))))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Union(Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)), Crossjoin(Filter({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0)), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"indicateur_lieu\".\"categorie_id\" as \"c3\", \"indicateur_lieu\".\"indicateur_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"indicateur_lieu\".\"categorie_id\" as \"c3\", \"indicateur_lieu\".\"indicateur_id\" as \"c4\", \"sexe\".\"sexe_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"indicateur_lieu\".\"categorie_id\" as \"c4\", \"indicateur_lieu\".\"indicateur_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m1\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"indicateur_lieu\" as \"indicateur_lieu\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre total d\u0027individus]}), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Nombre de personnes des menages (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members, [Type de logement.TYPLOGT_Hierarchie].[Type regroupe].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members}, {[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE]}, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Retraités]}))), Crossjoin({[Measures].[Distance trajet domicile - etudes (moyenne)]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE]}, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Professions Intermédiaires]}))))) ON COLUMNS,  NON EMPTY Crossjoin([Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON ROWSfrom [Cube2MobScoInd]where {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme].[Bac + 1 et plus].[Diplôme universitaire de 1er cycle, BTS, DUT, diplôme des professions sociales ou de santé, d\u0027infirmier(ère)]}": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe du referent.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c0\", \"categorie_logement\".\"categorie_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"logements\".\"nbmen\") as \"m0\" from \"categorie_logement\" as \"categorie_logement\", \"logements\" as \"logements\", \"sexe\" as \"sexe\" where \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" group by (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"sexe\".\"sexe_id\";",
    "select (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c0\", \"categorie_logement\".\"categorie_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", sum(\"logements\".\"nbmen\") as \"m0\" from \"categorie_logement\" as \"categorie_logement\", \"logements\" as \"logements\", \"sexe\" as \"sexe\" where \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" group by (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_occupation_lgt\".\"statut_id\" as \"c0\", \"statut_occupation_lgt\".\"categorie_id\" as \"c1\" from \"statut_occupation_lgt\" as \"statut_occupation_lgt\") as \"init\";",
    "select count(distinct \"categorie_id\") from \"statut_occupation_lgt\";",
    "select count(distinct \"categorie_id\") from \"statut_occupation_lgt\";",
    "select count(distinct \"statut_id\") from \"statut_occupation_lgt\";",
    "select count(distinct \"statut_id\") from \"statut_occupation_lgt\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", \"statut_occupation_lgt\".\"statut_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002721\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", \"statut_occupation_lgt\".\"statut_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002721\u0027, \u002724\u0027, \u002725\u0027, \u002726\u0027, \u002742\u0027, \u002753\u0027, \u002772\u0027, \u002783\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", \"statut_occupation_lgt\".\"statut_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002702\u0027, \u002703\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002723\u0027, \u002741\u0027, \u002743\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", \"statut_occupation_lgt\".\"statut_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u002701\u0027, \u002702\u0027, \u002703\u0027, \u002704\u0027, \u002706\u0027, \u002711\u0027, \u002723\u0027, \u002741\u0027, \u002743\u0027, \u002773\u0027, \u002774\u0027, \u002791\u0027, \u002794\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", \"statut_occupation_lgt\".\"statut_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002722\u0027, \u002731\u0027, \u002752\u0027, \u002754\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"statut_occupation_lgt\".\"categorie_id\" as \"c4\", \"statut_occupation_lgt\".\"statut_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"statut_occupation_lgt\" as \"statut_occupation_lgt\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" in (\u0027-9\u0027, \u00271B\u0027, \u002722\u0027, \u002731\u0027, \u002752\u0027, \u002754\u0027, \u002782\u0027, \u002793\u0027, \u0027ZZ\u0027) and \"commune\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002797801\u0027, \u0027ZZZZZ\u0027) and \"mobpro_ind_1\".\"stoc_lgt\" \u003d \"statut_occupation_lgt\".\"statut_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"statut_occupation_lgt\".\"categorie_id\", \"statut_occupation_lgt\".\"statut_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, {[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}) ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members)) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Sexe.Sexe_Hierarchie].[Sexe].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans la commune de résidence actuelle]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans un autre département de la région de résidence]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members), Union(Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Dans une autre commune du département de résidence]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members), Crossjoin({[Indicateur de lieu de travail.ILOCC_Hierarchie_1].[En métropole].[Hors de la région de résidence actuelle : en métropole]}, [Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members))))) ON ROWSfrom [Cube1MobProInd]": [
    "select count(distinct \"na5_id\") from \"activite_economique\";",
    "select count(distinct \"na5_id\") from \"activite_economique\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"activite_economique\".\"na5_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"activite_economique\".\"na5_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"activite_economique\" as \"activite_economique\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" \u003d \u00271\u0027 and \"indicateur_lieu\".\"indicateur_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027) and \"mobpro_ind_1\".\"na17_id\" \u003d \"activite_economique\".\"na17_id\" and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"activite_economique\".\"na5_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Sexe.Sexe_Hierarchie].[Sexe].Members) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[VENDÔMOIS RURAL]}) ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}), Union(Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}), Crossjoin({[Measures].[Nombre de voitures des menages (moyenne)]}, {[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]}))) ON COLUMNS,  NON EMPTY Crossjoin({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, [Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", \"statut_emploi\".\"stat1_id\" as \"c4\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\", \"statut_emploi\" as \"statut_emploi\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u00273\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"sexe\".\"sexe_id\", \"statut_emploi\".\"stat1_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (min)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"sexe\".\"sexe_id\" as \"c3\", min(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members, {[Measures].[Nombre de personnes des menages (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr4_id\" as \"c0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"type_menage\".\"typemr4_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"type_menage\".\"typemr4_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(mobpro_ind_1.nbpermen * mobpro_ind_1.coef_pond) as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Commune de travail.CNELOCC_Hierarchie_intercommunale].[Region].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Measures].[Nombre total d\u0027individus]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]})))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Motif de deplacement.MOTIFDEP_Hierarchie_1].[Categorie 2].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau de motorisation du menage.Niveau_motorisation_Hierarchie].[Niveau de motorisation].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"niveau_motorisation\".\"niveau_id\" \u003d \u00270\u0027 group by \"niveau_motorisation\".\"niveau_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" and \"niveau_motorisation\".\"niveau_id\" \u003d \u00270\u0027 group by \"niveau_motorisation\".\"niveau_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" group by \"niveau_motorisation\".\"niveau_id\";",
    "select \"niveau_motorisation\".\"niveau_id\" as \"c0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m0\" from \"niveau_motorisation\" as \"niveau_motorisation\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"motorisation_men\" \u003d \"niveau_motorisation\".\"niveau_id\" group by \"niveau_motorisation\".\"niveau_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - etudes (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}, Filter({{[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[ARVILLE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[BOURSAY], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE].[LE GAULT-PERCHE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[MONTRIEUX-EN-SOLOGNE], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[NEUNG-SUR-BEUVRON], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS].[VILLENY]}}, (Exists({Ancestor([Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes])}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays de Grande Sologne].[SOLOGNE DES ETANGS], [Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]}).Count \u003e 0))})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Nombre total d\u0027individus], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans]}, [Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\", \"commune\".\"region_id\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"region_nom\" as \"c5\", \"commune\".\"pays_id\" as \"c6\", \"commune\".\"pays_nom\" as \"c7\", \"commune\".\"pays_nom\" as \"c8\", \"commune\".\"communaute_communes_id\" as \"c9\", \"commune\".\"communaute_communes_nom\" as \"c10\", \"commune\".\"communaute_communes_nom\" as \"c11\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"age_revolu\".\"agerev_id\" \u003d \u002750\u0027) group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\", \"commune\".\"region_id\" as \"c3\", \"commune\".\"region_nom\" as \"c4\", \"commune\".\"region_nom\" as \"c5\", \"commune\".\"pays_id\" as \"c6\", \"commune\".\"pays_nom\" as \"c7\", \"commune\".\"pays_nom\" as \"c8\", \"commune\".\"communaute_communes_id\" as \"c9\", \"commune\".\"communaute_communes_nom\" as \"c10\", \"commune\".\"communaute_communes_nom\" as \"c11\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and (\"age_revolu\".\"agerev_id\" \u003d \u002750\u0027) group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\", \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC, CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC;"
  ],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"mode_transport\".\"mode_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Crossjoin({[Statut d\u0027emploi du referent.STATEMPL_Hierarchie].[Salariés]}, {[Niveau d\u0027instruction du referent.Niveau_Instruction_Hierarchie].[Sans diplôme].[Non Scolarisé].[Pas de scolarité]}) ON COLUMNS,  NON EMPTY Crossjoin({[Annee d\u0027emmenagement.MENAGE_ANNEE_EMM_Hierarchie_1].[Emménagement après 1999].[Année  2007]}, Crossjoin([Sexe du referent.Sexe_Hierarchie].[Sexe].Members, Crossjoin([Age du referent.REF_AGE_Hierarchie_1].[Age regroupe].Members, [Categorie du logement.LOGT_CATEGORIE_Hierarchie_1].[Categorie].Members))) ON ROWSfrom [Cube4Chauffage]": [
    "select count(distinct \"age_regroupe_id\") from \"age_regroupe\";",
    "select count(distinct \"age_regroupe_id\") from \"age_regroupe\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"sexe\".\"sexe_id\" as \"c9\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"age_regroupe\".\"age_regroupe_id\" in (\u002740\u0027, \u002755\u0027) and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"sexe\".\"sexe_id\";",
    "select \"annee_emmenagement\".\"annee_regroupee\" as \"c0\", \"annee_emmenagement\".\"annee\" as \"c1\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) as \"c2\", \"categorie_logement\".\"categorie_id\" as \"c3\", \"age_regroupe\".\"age_regroupe_id\" as \"c4\", \"niveau_instruction\".\"categorie1_id\" as \"c5\", \"niveau_instruction\".\"categorie2_id\" as \"c6\", \"niveau_instruction\".\"niveau_inst_id\" as \"c7\", \"statut_emploi\".\"stat1_id\" as \"c8\", \"sexe\".\"sexe_id\" as \"c9\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_emmenagement\" as \"annee_emmenagement\", \"logements\" as \"logements\", \"categorie_logement\" as \"categorie_logement\", \"age_regroupe\" as \"age_regroupe\", \"niveau_instruction\" as \"niveau_instruction\", \"statut_emploi\" as \"statut_emploi\", \"sexe\" as \"sexe\" where \"logements\".\"annee_emmenagement\" \u003d \"annee_emmenagement\".\"annee\" and \"annee_emmenagement\".\"annee_regroupee\" \u003d \u00279\u0027 and \"annee_emmenagement\".\"annee\" \u003d \u00272007\u0027 and \"logements\".\"categorie_logt\" \u003d \"categorie_logement\".\"categorie_id\" and (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end) \u003d \u00271\u0027 and \"categorie_logement\".\"categorie_id\" \u003d \u00271\u0027 and \"logements\".\"ref_age_regroupe\" \u003d \"age_regroupe\".\"age_regroupe_id\" and \"age_regroupe\".\"age_regroupe_id\" in (\u002740\u0027, \u002755\u0027) and \"logements\".\"ref_niveau_instruction\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"categorie2_id\" \u003d \u00271\u0027 and \"niveau_instruction\".\"niveau_inst_id\" \u003d \u00271\u0027 and \"logements\".\"ref_statut_emploi\" \u003d \"statut_emploi\".\"stat3_id\" and \"statut_emploi\".\"stat1_id\" \u003d \u00271\u0027 and \"logements\".\"ref_sexe\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"annee_emmenagement\".\"annee_regroupee\", \"annee_emmenagement\".\"annee\", (case when categorie_logement.categorie_id \u003d \u00271\u0027 then \u00271\u0027 else \u00272\u0027 end), \"categorie_logement\".\"categorie_id\", \"age_regroupe\".\"age_regroupe_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"statut_emploi\".\"stat1_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Order(Hierarchize(Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[15 à 19 ans]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), Union(Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[20 à 24 ans]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members), Crossjoin({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[25 à 29 ans]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members)))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Depense trajet domicile - travail (moyenne)], [Measures].[Consommation carborant trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (moyenne)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Age revolu en 10 classes.AgeRev10_Hierarchie_1].[Classe d\u0027ages revolus].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[CSP1].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Departement].Members) ON ROWSfrom [Cube2MobScoInd]": [
    "select count(distinct \"region_id\") from \"commune\";",
    "select count(distinct \"region_id\") from \"commune\";",
    "select count(distinct \"departement_id\") from \"commune\";",
    "select count(distinct \"departement_id\") from \"commune\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";",
    "select \"age_revolu_10\".\"agerev10_id\" as \"c0\", \"commune\".\"region_id\" as \"c1\", \"commune\".\"departement_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", sum(\"mobsco_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu_10\" as \"age_revolu_10\", \"mobsco_ind_1\" as \"mobsco_ind_1\", \"commune\" as \"commune\", \"csp\" as \"csp\" where \"mobsco_ind_1\".\"agerev10\" \u003d \"age_revolu_10\".\"agerev10_id\" and \"mobsco_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"departement_id\" in (\u002741\u0027, \u002745\u0027) and \"mobsco_ind_1\".\"csp_prm\" \u003d \"csp\".\"csp3_id\" group by \"age_revolu_10\".\"agerev10_id\", \"commune\".\"region_id\", \"commune\".\"departement_id\", \"csp\".\"csp1_id\";"
  ],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, Crossjoin({[Sexe.Sexe_Hierarchie].[Hommes]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, Crossjoin({[Sexe.Sexe_Hierarchie].[Hommes]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members))), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, Crossjoin({[Sexe.Sexe_Hierarchie].[Hommes]}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members)))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Duree trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"temps_emploi\".\"temps_id\" as \"c0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"temps_emploi\".\"temps_id\";",
    "select \"temps_emploi\".\"temps_id\" as \"c0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"temps_emploi\" as \"temps_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" group by \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}), Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Ouvriers]}), Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, {[Categorie socioprofessionnelle de la personne de reference.CSP_Hierarchie_1].[Employés]}))) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube2MobScoInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 3].Members}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"statut_emploi\".\"stat3_id\" as \"c2\", \"type_menage\".\"typemr4_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"statut_emploi\".\"stat3_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})}, [Measures].[Duree trajet domicile - travail (moyenne)], BASC) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members), Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";",
    "select \"indicateur_lieu\".\"categorie_id\" as \"c0\", \"indicateur_lieu\".\"indicateur_id\" as \"c1\", \"sexe\".\"sexe_id\" as \"c2\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\", sum(mobpro_ind_1.duree_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"indicateur_lieu\" as \"indicateur_lieu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"ilt\" \u003d \"indicateur_lieu\".\"indicateur_id\" and \"indicateur_lieu\".\"categorie_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"indicateur_lieu\".\"categorie_id\", \"indicateur_lieu\".\"indicateur_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]})), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Femmes]})), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]})))))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({{[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[tous les ages revolus]}, {[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Energie de chauffage du logement.LOGT_ENERGIECHAUF_Hierarchie_1].[Energie].Members})} ON ROWSfrom [Cube4Chauffage]": [
    "select count(*) as \"c0\" from (select distinct \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\") as \"init\";",
    "select \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\" group by \"annee_recensement\".\"annee\" order by CASE WHEN \"annee_recensement\".\"annee\" IS NULL THEN 1 ELSE 0 END, \"annee_recensement\".\"annee\" ASC;",
    "select \"annee_recensement\".\"annee\" as \"c0\" from \"annee_recensement\" as \"annee_recensement\" group by \"annee_recensement\".\"annee\" order by CASE WHEN \"annee_recensement\".\"annee\" IS NULL THEN 1 ELSE 0 END, \"annee_recensement\".\"annee\" ASC;",
    "select count(*) as \"c0\" from (select distinct \"energie_chauffage\".\"energie_id\" as \"c0\" from \"energie_chauffage\" as \"energie_chauffage\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"energie_chauffage\".\"energie_id\" as \"c0\" from \"energie_chauffage\" as \"energie_chauffage\") as \"init\";",
    "select count(distinct \"annee\") from \"annee_recensement\";",
    "select count(distinct \"annee\") from \"annee_recensement\";",
    "select count(distinct \"energie_id\") from \"energie_chauffage\";",
    "select count(distinct \"energie_id\") from \"energie_chauffage\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"energie_chauffage\".\"energie_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"logements\" as \"logements\", \"energie_chauffage\" as \"energie_chauffage\" where \"logements\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"logements\".\"energie_chauffage\" \u003d \"energie_chauffage\".\"energie_id\" group by \"annee_recensement\".\"annee\", \"energie_chauffage\".\"energie_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"energie_chauffage\".\"energie_id\" as \"c1\", sum(\"logements\".\"nbmen\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"logements\" as \"logements\", \"energie_chauffage\" as \"energie_chauffage\" where \"logements\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"logements\".\"energie_chauffage\" \u003d \"energie_chauffage\".\"energie_id\" group by \"annee_recensement\".\"annee\", \"energie_chauffage\".\"energie_id\";"
  ],
  "select NON EMPTY Order({Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]})}, [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members})} ON COLUMNS,  NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Measures].[Nombre total d\u0027individus]}) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"temps_emploi\".\"temps_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"temps_emploi\".\"temps_id\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"temps_emploi\" as \"temps_emploi\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"temps_emploi\" \u003d \"temps_emploi\".\"temps_id\" and \"temps_emploi\".\"temps_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"csp\".\"csp1_id\", \"temps_emploi\".\"temps_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Distance trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"type_menage\".\"typemr4_id\" as \"c0\", \"type_menage\".\"typemr9_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"type_menage\" as \"type_menage\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY Crossjoin([Temps d\u0027emploi.TEMPSEMP_Hierarchie].[Temps d\u0027emploi].Members, Crossjoin([Nature l\u0027activite economique.NATACTECO_Hierarchie].[Nature de l\u0027activite].Members, [Sexe.Sexe_Hierarchie].[Sexe].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[0 à 4 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[5 à 9 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[10 à 14 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[15 à 19 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[20 à 24 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[25 à 29 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[30 à 34 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[35 à 39 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[40 à 44 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[45 à 49 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[50 à 54 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[55 à 59 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[60 à 64 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[65 à 69 ans], [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[70 à 74 ans]}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (max)]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Order({Hierarchize({[Sexe.Sexe_Hierarchie].[tous les sexes confondus]})}, [Sexe.Sexe_Hierarchie].CurrentMember.Name, BDESC) ON COLUMNS,  NON EMPTY {Hierarchize({[Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members, [Commune de residence.CNERES_Hierarchie_administrative].[Commune de residence].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, [Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members) ON ROWSfrom [Cube1MobProInd]": [
    "select \"annee_recensement\".\"annee\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";",
    "select \"annee_recensement\".\"annee\" as \"c0\", \"sexe\".\"sexe_id\" as \"c1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m0\" from \"annee_recensement\" as \"annee_recensement\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" and \"annee_recensement\".\"annee\" \u003d 2010 and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"annee_recensement\".\"annee\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Nombre total d\u0027individus]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members})} ON ROWSfrom [Cube1MobProInd]where {[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members}": [
    "select \"mode_transport\".\"mode_id\" as \"c0\", \"mode_transport\".\"mode_nom\" as \"c1\", \"mode_transport\".\"mode_nom\" as \"c2\" from \"mode_transport\" as \"mode_transport\" where (\"mode_transport\".\"categorie_id\" \u003d \u0027Z\u0027) group by \"mode_transport\".\"mode_id\", \"mode_transport\".\"mode_nom\" order by CASE WHEN \"mode_transport\".\"mode_nom\" IS NULL THEN 1 ELSE 0 END, \"mode_transport\".\"mode_nom\" ASC;",
    "select \"mode_transport\".\"mode_id\" as \"c0\", \"mode_transport\".\"mode_nom\" as \"c1\", \"mode_transport\".\"mode_nom\" as \"c2\" from \"mode_transport\" as \"mode_transport\" where (\"mode_transport\".\"categorie_id\" \u003d \u0027Z\u0027) group by \"mode_transport\".\"mode_id\", \"mode_transport\".\"mode_nom\" order by CASE WHEN \"mode_transport\".\"mode_nom\" IS NULL THEN 1 ELSE 0 END, \"mode_transport\".\"mode_nom\" ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays Vendômois].[COLLINES DU PERCHE]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Statut d\u0027emploi.STATEMPL_Hierarchie].[tous les statuts confondus]})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"niveau_instruction\".\"categorie1_id\" as \"c1\", \"niveau_instruction\".\"categorie2_id\" as \"c2\", \"niveau_instruction\".\"niveau_inst_id\" as \"c3\", \"sexe\".\"sexe_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" group by \"csp\".\"csp1_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Annee du recensement.Annee_rencesement_Hierarchie_1].[Annee].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"age_revolu\".\"agerev_id\", \"annee_recensement\".\"annee\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", \"annee_recensement\".\"annee\" as \"c1\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"age_revolu\" as \"age_revolu\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"annee_recensement\" as \"annee_recensement\" where \"mobpro_ind_1\".\"agerev\" \u003d \"age_revolu\".\"agerev_id\" and \"mobpro_ind_1\".\"annee_recensement\" \u003d \"annee_recensement\".\"annee\" group by \"age_revolu\".\"agerev_id\", \"annee_recensement\".\"annee\";",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\" from \"age_revolu\" as \"age_revolu\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC;",
    "select \"age_revolu\".\"agerev_id\" as \"c0\", CAST (age_revolu.agerevq_id as integer) as \"c1\", \"age_revolu\".\"agerevq_lib\" as \"c2\" from \"age_revolu\" as \"age_revolu\" group by \"age_revolu\".\"agerev_id\", CAST (age_revolu.agerevq_id as integer), \"age_revolu\".\"agerevq_lib\" order by CASE WHEN CAST (age_revolu.agerevq_id as integer) IS NULL THEN 1 ELSE 0 END, CAST (age_revolu.agerevq_id as integer) ASC;"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Depense trajet domicile - travail (max)]})} ON COLUMNS,  NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"pays_id\" as \"c12\", \"commune_1\".\"pays_nom\" as \"c13\", \"commune_1\".\"pays_nom\" as \"c14\", \"commune_1\".\"communaute_communes_id\" as \"c15\", \"commune_1\".\"communaute_communes_nom\" as \"c16\", \"commune_1\".\"communaute_communes_nom\" as \"c17\", \"commune_1\".\"commune_id\" as \"c18\", \"commune_1\".\"commune_nom\" as \"c19\", \"commune_1\".\"commune_nom\" as \"c20\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune_1\".\"region_id\" as \"c9\", \"commune_1\".\"region_nom\" as \"c10\", \"commune_1\".\"region_nom\" as \"c11\", \"commune_1\".\"pays_id\" as \"c12\", \"commune_1\".\"pays_nom\" as \"c13\", \"commune_1\".\"pays_nom\" as \"c14\", \"commune_1\".\"communaute_communes_id\" as \"c15\", \"commune_1\".\"communaute_communes_nom\" as \"c16\", \"commune_1\".\"communaute_communes_nom\" as \"c17\", \"commune_1\".\"commune_id\" as \"c18\", \"commune_1\".\"commune_nom\" as \"c19\", \"commune_1\".\"commune_nom\" as \"c20\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\", \"commune_1\".\"communaute_communes_id\" as \"c18\", \"commune_1\".\"communaute_communes_nom\" as \"c19\", \"commune_1\".\"communaute_communes_nom\" as \"c20\", \"commune_1\".\"commune_id\" as \"c21\", \"commune_1\".\"commune_nom\" as \"c22\", \"commune_1\".\"commune_nom\" as \"c23\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"region_nom\" as \"c1\", \"commune\".\"region_nom\" as \"c2\", \"commune\".\"pays_id\" as \"c3\", \"commune\".\"pays_nom\" as \"c4\", \"commune\".\"pays_nom\" as \"c5\", \"commune\".\"communaute_communes_id\" as \"c6\", \"commune\".\"communaute_communes_nom\" as \"c7\", \"commune\".\"communaute_communes_nom\" as \"c8\", \"commune\".\"commune_id\" as \"c9\", \"commune\".\"commune_nom\" as \"c10\", \"commune\".\"commune_nom\" as \"c11\", \"commune_1\".\"region_id\" as \"c12\", \"commune_1\".\"region_nom\" as \"c13\", \"commune_1\".\"region_nom\" as \"c14\", \"commune_1\".\"pays_id\" as \"c15\", \"commune_1\".\"pays_nom\" as \"c16\", \"commune_1\".\"pays_nom\" as \"c17\", \"commune_1\".\"communaute_communes_id\" as \"c18\", \"commune_1\".\"communaute_communes_nom\" as \"c19\", \"commune_1\".\"communaute_communes_nom\" as \"c20\", \"commune_1\".\"commune_id\" as \"c21\", \"commune_1\".\"commune_nom\" as \"c22\", \"commune_1\".\"commune_nom\" as \"c23\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and (\"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"region_id\" \u003d \u002724\u0027) group by \"commune\".\"region_id\", \"commune\".\"region_nom\", \"commune\".\"pays_id\", \"commune\".\"pays_nom\", \"commune\".\"communaute_communes_id\", \"commune\".\"communaute_communes_nom\", \"commune\".\"commune_id\", \"commune\".\"commune_nom\", \"commune_1\".\"region_id\", \"commune_1\".\"region_nom\", \"commune_1\".\"pays_id\", \"commune_1\".\"pays_nom\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"communaute_communes_nom\", \"commune_1\".\"commune_id\", \"commune_1\".\"commune_nom\" order by CASE WHEN \"commune\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"region_nom\" ASC, CASE WHEN \"commune\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"pays_nom\" ASC, CASE WHEN \"commune\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune\".\"commune_nom\" ASC, CASE WHEN \"commune_1\".\"region_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"region_nom\" ASC, CASE WHEN \"commune_1\".\"pays_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"pays_nom\" ASC, CASE WHEN \"commune_1\".\"communaute_communes_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"communaute_communes_nom\" ASC, CASE WHEN \"commune_1\".\"commune_nom\" IS NULL THEN 1 ELSE 0 END, \"commune_1\".\"commune_nom\" ASC;",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"commune_1\".\"commune_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002702304\u0027, \u002702691\u0027, \u002703065\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002705096\u0027, \u002706088\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713001\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714118\u0027, \u002714327\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718011\u0027, \u002718015\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718033\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718100\u0027, \u002718103\u0027, \u002718141\u0027, \u002718145\u0027, \u002718147\u0027, \u002718148\u0027, \u002718159\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718213\u0027, \u002718214\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002718290\u0027, \u002719272\u0027, \u002721295\u0027, \u002721355\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002723031\u0027, \u002724322\u0027, \u002725388\u0027, \u002726198\u0027, \u002726349\u0027, \u002727022\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728078\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728093\u0027, \u002728103\u0027, \u002728110\u0027, \u002728115\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728133\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728196\u0027, \u002728198\u0027, \u002728199\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728253\u0027, \u002728262\u0027, \u002728280\u0027, \u002728287\u0027, \u002728318\u0027, \u002728334\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u002729302\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002732459\u0027, \u002733058\u0027, \u002733063\u0027, \u002733243\u0027, \u002733281\u0027, \u002733483\u0027, \u002733540\u0027, \u002734101\u0027, \u002734145\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735238\u0027, \u002735352\u0027, \u002736018\u0027, \u002736034\u0027, \u002736036\u0027, \u002736044\u0027, \u002736063\u0027, \u002736068\u0027, \u002736069\u0027, \u002736072\u0027, \u002736077\u0027, \u002736088\u0027, \u002736093\u0027, \u002736103\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736162\u0027, \u002736171\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002736244\u0027, \u002737003\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737018\u0027, \u002737021\u0027, \u002737023\u0027, \u002737027\u0027, \u002737043\u0027, \u002737046\u0027, \u002737050\u0027, \u002737054\u0027, \u002737060\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737070\u0027, \u002737072\u0027, \u002737073\u0027, \u002737075\u0027, \u002737077\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737111\u0027, \u002737113\u0027, \u002737115\u0027, \u002737116\u0027, \u002737119\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737138\u0027, \u002737150\u0027, \u002737152\u0027, \u002737153\u0027, \u002737154\u0027, \u002737155\u0027, \u002737156\u0027, \u002737159\u0027, \u002737160\u0027, \u002737161\u0027, \u002737163\u0027, \u002737167\u0027, \u002737169\u0027, \u002737170\u0027, \u002737171\u0027, \u002737172\u0027, \u002737175\u0027, \u002737177\u0027, \u002737179\u0027, \u002737185\u0027, \u002737194\u0027, \u002737195\u0027, \u002737203\u0027, \u002737208\u0027, \u002737211\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737252\u0027, \u002737253\u0027, \u002737254\u0027, \u002737257\u0027, \u002737261\u0027, \u002737263\u0027, \u002737270\u0027, \u002737273\u0027, \u002737276\u0027, \u002737281\u0027, \u002738382\u0027, \u002739199\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744004\u0027, \u002744052\u0027, \u002744109\u0027, \u002744169\u0027, \u002744184\u0027, \u002744188\u0027, \u002745004\u0027, \u002745006\u0027, \u002745008\u0027, \u002745019\u0027, \u002745020\u0027, \u002745024\u0027, \u002745028\u0027, \u002745029\u0027, \u002745034\u0027, \u002745042\u0027, \u002745046\u0027, \u002745055\u0027, \u002745062\u0027, \u002745067\u0027, \u002745068\u0027, \u002745072\u0027, \u002745073\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745087\u0027, \u002745089\u0027, \u002745098\u0027, \u002745109\u0027, \u002745116\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745130\u0027, \u002745133\u0027, \u002745134\u0027, \u002745142\u0027, \u002745144\u0027, \u002745146\u0027, \u002745147\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745169\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745203\u0027, \u002745206\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745269\u0027, \u002745272\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745284\u0027, \u002745285\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745298\u0027, \u002745299\u0027, \u002745300\u0027, \u002745302\u0027, \u002745307\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002745344\u0027, \u002747157\u0027, \u002748095\u0027, \u002749003\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002749353\u0027, \u002749361\u0027, \u002750184\u0027, \u002751388\u0027, \u002751431\u0027, \u002751454\u0027, \u002751507\u0027, \u002751559\u0027, \u002751573\u0027, \u002752121\u0027, \u002752353\u0027, \u002753013\u0027, \u002753130\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002756251\u0027, \u002757474\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759009\u0027, \u002759121\u0027, \u002759350\u0027, \u002759384\u0027, \u002759606\u0027, \u002760057\u0027, \u002760139\u0027, \u002760233\u0027, \u002760463\u0027, \u002760491\u0027, \u002761043\u0027, \u002761116\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761411\u0027, \u002761454\u0027, \u002761484\u0027, \u002762041\u0027, \u002762351\u0027, \u002763047\u0027, \u002763113\u0027, \u002763124\u0027, \u002765257\u0027, \u002767202\u0027, \u002767348\u0027, \u002767482\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769100\u0027, \u002769168\u0027, \u002769259\u0027, \u002769266\u0027, \u002769268\u0027, \u002769275\u0027, \u002769290\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002771520\u0027, \u002772032\u0027, \u002772035\u0027, \u002772039\u0027, \u002772042\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772068\u0027, \u002772071\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772181\u0027, \u002772183\u0027, \u002772190\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772250\u0027, \u002772257\u0027, \u002772262\u0027, \u002772264\u0027, \u002772269\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002772366\u0027, \u002772373\u0027, \u002773181\u0027, \u002773227\u0027, \u002773257\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774256\u0027, \u002774268\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776035\u0027, \u002776540\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777058\u0027, \u002777060\u0027, \u002777108\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777288\u0027, \u002777291\u0027, \u002777305\u0027, \u002777309\u0027, \u002777327\u0027, \u002777337\u0027, \u002777379\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777467\u0027, \u002777495\u0027, \u002778003\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778297\u0027, \u002778372\u0027, \u002778383\u0027, \u002778407\u0027, \u002778418\u0027, \u002778440\u0027, \u002778501\u0027, \u002778545\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002778688\u0027, \u002779046\u0027, \u002779191\u0027, \u002779202\u0027, \u002780570\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783107\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785151\u0027, \u002785166\u0027, \u002785191\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787085\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002788512\u0027, \u002789025\u0027, \u002790010\u0027, \u002791086\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791228\u0027, \u002791272\u0027, \u002791338\u0027, \u002791377\u0027, \u002791405\u0027, \u002791425\u0027, \u002791433\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791661\u0027, \u002791692\u0027, \u002792004\u0027, \u002792007\u0027, \u002792009\u0027, \u002792012\u0027, \u002792020\u0027, \u002792023\u0027, \u002792024\u0027, \u002792025\u0027, \u002792026\u0027, \u002792032\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793008\u0027, \u002793010\u0027, \u002793013\u0027, \u002793027\u0027, \u002793046\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793057\u0027, \u002793059\u0027, \u002793064\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794016\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794042\u0027, \u002794043\u0027, \u002794046\u0027, \u002794047\u0027, \u002794048\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794071\u0027, \u002794073\u0027, \u002794076\u0027, \u002794078\u0027, \u002794080\u0027, \u002794081\u0027, \u002795018\u0027, \u002795051\u0027, \u002795127\u0027, \u002795203\u0027, \u002795218\u0027, \u002795500\u0027, \u002795527\u0027, \u002795572\u0027, \u002795607\u0027, \u002797409\u0027, \u002797611\u0027, \u002797801\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"region_id\" as \"c3\", \"commune_1\".\"pays_id\" as \"c4\", \"commune_1\".\"communaute_communes_id\" as \"c5\", \"commune_1\".\"commune_id\" as \"c6\", \"sexe\".\"sexe_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"commune_id\" in (\u002701305\u0027, \u002702304\u0027, \u002702691\u0027, \u002703065\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002705096\u0027, \u002706088\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713001\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714118\u0027, \u002714327\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718011\u0027, \u002718015\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718033\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718100\u0027, \u002718103\u0027, \u002718141\u0027, \u002718145\u0027, \u002718147\u0027, \u002718148\u0027, \u002718159\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718213\u0027, \u002718214\u0027, \u002718255\u0027, \u002718263\u0027, \u002718279\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002718290\u0027, \u002719272\u0027, \u002721295\u0027, \u002721355\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002723031\u0027, \u002724322\u0027, \u002725388\u0027, \u002726198\u0027, \u002726349\u0027, \u002727022\u0027, \u002727056\u0027, \u002727229\u0027, \u002727330\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728051\u0027, \u002728061\u0027, \u002728075\u0027, \u002728078\u0027, \u002728079\u0027, \u002728085\u0027, \u002728088\u0027, \u002728093\u0027, \u002728103\u0027, \u002728110\u0027, \u002728115\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728133\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728196\u0027, \u002728198\u0027, \u002728199\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728253\u0027, \u002728262\u0027, \u002728280\u0027, \u002728287\u0027, \u002728318\u0027, \u002728334\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u002729302\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002732459\u0027, \u002733058\u0027, \u002733063\u0027, \u002733243\u0027, \u002733281\u0027, \u002733483\u0027, \u002733540\u0027, \u002734101\u0027, \u002734145\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735238\u0027, \u002735352\u0027, \u002736018\u0027, \u002736034\u0027, \u002736036\u0027, \u002736044\u0027, \u002736063\u0027, \u002736068\u0027, \u002736069\u0027, \u002736072\u0027, \u002736077\u0027, \u002736088\u0027, \u002736093\u0027, \u002736103\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736162\u0027, \u002736171\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736228\u0027, \u002736229\u0027, \u002736230\u0027, \u002736233\u0027, \u002736237\u0027, \u002736244\u0027, \u002737003\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737018\u0027, \u002737021\u0027, \u002737023\u0027, \u002737027\u0027, \u002737043\u0027, \u002737046\u0027, \u002737050\u0027, \u002737054\u0027, \u002737060\u0027, \u002737063\u0027, \u002737065\u0027, \u002737066\u0027, \u002737070\u0027, \u002737072\u0027, \u002737073\u0027, \u002737075\u0027, \u002737077\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737104\u0027, \u002737109\u0027, \u002737110\u0027, \u002737111\u0027, \u002737113\u0027, \u002737115\u0027, \u002737116\u0027, \u002737119\u0027, \u002737122\u0027, \u002737123\u0027, \u002737131\u0027, \u002737132\u0027, \u002737135\u0027, \u002737138\u0027, \u002737150\u0027, \u002737152\u0027, \u002737153\u0027, \u002737154\u0027, \u002737155\u0027, \u002737156\u0027, \u002737159\u0027, \u002737160\u0027, \u002737161\u0027, \u002737163\u0027, \u002737167\u0027, \u002737169\u0027, \u002737170\u0027, \u002737171\u0027, \u002737172\u0027, \u002737175\u0027, \u002737177\u0027, \u002737179\u0027, \u002737185\u0027, \u002737194\u0027, \u002737195\u0027, \u002737203\u0027, \u002737208\u0027, \u002737211\u0027, \u002737214\u0027, \u002737221\u0027, \u002737225\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737233\u0027, \u002737240\u0027, \u002737247\u0027, \u002737250\u0027, \u002737252\u0027, \u002737253\u0027, \u002737254\u0027, \u002737257\u0027, \u002737261\u0027, \u002737263\u0027, \u002737270\u0027, \u002737273\u0027, \u002737276\u0027, \u002737281\u0027, \u002738382\u0027, \u002739199\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741001\u0027, \u002741002\u0027, \u002741003\u0027, \u002741004\u0027, \u002741005\u0027, \u002741006\u0027, \u002741007\u0027, \u002741008\u0027, \u002741009\u0027, \u002741010\u0027, \u002741011\u0027, \u002741012\u0027, \u002741013\u0027, \u002741014\u0027, \u002741015\u0027, \u002741016\u0027, \u002741017\u0027, \u002741018\u0027, \u002741019\u0027, \u002741020\u0027, \u002741022\u0027, \u002741023\u0027, \u002741024\u0027, \u002741025\u0027, \u002741026\u0027, \u002741027\u0027, \u002741028\u0027, \u002741029\u0027, \u002741030\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741034\u0027, \u002741035\u0027, \u002741036\u0027, \u002741037\u0027, \u002741038\u0027, \u002741039\u0027, \u002741040\u0027, \u002741041\u0027, \u002741042\u0027, \u002741043\u0027, \u002741044\u0027, \u002741045\u0027, \u002741046\u0027, \u002741047\u0027, \u002741048\u0027, \u002741049\u0027, \u002741050\u0027, \u002741051\u0027, \u002741052\u0027, \u002741053\u0027, \u002741054\u0027, \u002741055\u0027, \u002741056\u0027, \u002741057\u0027, \u002741058\u0027, \u002741059\u0027, \u002741060\u0027, \u002741061\u0027, \u002741062\u0027, \u002741063\u0027, \u002741064\u0027, \u002741065\u0027, \u002741066\u0027, \u002741067\u0027, \u002741068\u0027, \u002741069\u0027, \u002741070\u0027, \u002741071\u0027, \u002741072\u0027, \u002741073\u0027, \u002741074\u0027, \u002741075\u0027, \u002741077\u0027, \u002741078\u0027, \u002741079\u0027, \u002741080\u0027, \u002741081\u0027, \u002741082\u0027, \u002741083\u0027, \u002741084\u0027, \u002741085\u0027, \u002741086\u0027, \u002741087\u0027, \u002741088\u0027, \u002741089\u0027, \u002741090\u0027, \u002741091\u0027, \u002741092\u0027, \u002741093\u0027, \u002741094\u0027, \u002741095\u0027, \u002741096\u0027, \u002741097\u0027, \u002741098\u0027, \u002741099\u0027, \u002741100\u0027, \u002741101\u0027, \u002741102\u0027, \u002741103\u0027, \u002741104\u0027, \u002741105\u0027, \u002741106\u0027, \u002741107\u0027, \u002741108\u0027, \u002741109\u0027, \u002741110\u0027, \u002741112\u0027, \u002741113\u0027, \u002741114\u0027, \u002741115\u0027, \u002741116\u0027, \u002741118\u0027, \u002741119\u0027, \u002741120\u0027, \u002741121\u0027, \u002741122\u0027, \u002741123\u0027, \u002741124\u0027, \u002741125\u0027, \u002741126\u0027, \u002741127\u0027, \u002741128\u0027, \u002741129\u0027, \u002741130\u0027, \u002741131\u0027, \u002741132\u0027, \u002741133\u0027, \u002741134\u0027, \u002741135\u0027, \u002741136\u0027, \u002741137\u0027, \u002741138\u0027, \u002741139\u0027, \u002741140\u0027, \u002741141\u0027, \u002741142\u0027, \u002741143\u0027, \u002741144\u0027, \u002741145\u0027, \u002741146\u0027, \u002741147\u0027, \u002741148\u0027, \u002741149\u0027, \u002741150\u0027, \u002741151\u0027, \u002741152\u0027, \u002741153\u0027, \u002741154\u0027, \u002741155\u0027, \u002741156\u0027, \u002741157\u0027, \u002741158\u0027, \u002741159\u0027, \u002741160\u0027, \u002741161\u0027, \u002741163\u0027, \u002741164\u0027, \u002741165\u0027, \u002741166\u0027, \u002741167\u0027, \u002741168\u0027, \u002741169\u0027, \u002741170\u0027, \u002741171\u0027, \u002741172\u0027, \u002741173\u0027, \u002741174\u0027, \u002741175\u0027, \u002741176\u0027, \u002741177\u0027, \u002741178\u0027, \u002741179\u0027, \u002741180\u0027, \u002741181\u0027, \u002741182\u0027, \u002741183\u0027, \u002741184\u0027, \u002741185\u0027, \u002741186\u0027, \u002741187\u0027, \u002741188\u0027, \u002741189\u0027, \u002741190\u0027, \u002741191\u0027, \u002741192\u0027, \u002741193\u0027, \u002741194\u0027, \u002741195\u0027, \u002741196\u0027, \u002741197\u0027, \u002741198\u0027, \u002741199\u0027, \u002741200\u0027, \u002741201\u0027, \u002741202\u0027, \u002741203\u0027, \u002741204\u0027, \u002741205\u0027, \u002741206\u0027, \u002741207\u0027, \u002741208\u0027, \u002741209\u0027, \u002741210\u0027, \u002741211\u0027, \u002741212\u0027, \u002741213\u0027, \u002741214\u0027, \u002741216\u0027, \u002741217\u0027, \u002741218\u0027, \u002741219\u0027, \u002741220\u0027, \u002741221\u0027, \u002741222\u0027, \u002741223\u0027, \u002741224\u0027, \u002741225\u0027, \u002741226\u0027, \u002741228\u0027, \u002741229\u0027, \u002741230\u0027, \u002741231\u0027, \u002741232\u0027, \u002741233\u0027, \u002741234\u0027, \u002741235\u0027, \u002741236\u0027, \u002741237\u0027, \u002741238\u0027, \u002741239\u0027, \u002741240\u0027, \u002741241\u0027, \u002741242\u0027, \u002741243\u0027, \u002741244\u0027, \u002741245\u0027, \u002741246\u0027, \u002741247\u0027, \u002741248\u0027, \u002741249\u0027, \u002741250\u0027, \u002741251\u0027, \u002741252\u0027, \u002741253\u0027, \u002741254\u0027, \u002741255\u0027, \u002741256\u0027, \u002741257\u0027, \u002741258\u0027, \u002741259\u0027, \u002741260\u0027, \u002741261\u0027, \u002741262\u0027, \u002741263\u0027, \u002741264\u0027, \u002741265\u0027, \u002741266\u0027, \u002741267\u0027, \u002741268\u0027, \u002741269\u0027, \u002741270\u0027, \u002741271\u0027, \u002741272\u0027, \u002741273\u0027, \u002741274\u0027, \u002741275\u0027, \u002741276\u0027, \u002741277\u0027, \u002741278\u0027, \u002741279\u0027, \u002741280\u0027, \u002741281\u0027, \u002741282\u0027, \u002741283\u0027, \u002741284\u0027, \u002741285\u0027, \u002741286\u0027, \u002741287\u0027, \u002741288\u0027, \u002741289\u0027, \u002741290\u0027, \u002741291\u0027, \u002741292\u0027, \u002741293\u0027, \u002741294\u0027, \u002741295\u0027, \u002741296\u0027, \u002741297\u0027, \u002743124\u0027, \u002744004\u0027, \u002744052\u0027, \u002744109\u0027, \u002744169\u0027, \u002744184\u0027, \u002744188\u0027, \u002745004\u0027, \u002745006\u0027, \u002745008\u0027, \u002745019\u0027, \u002745020\u0027, \u002745024\u0027, \u002745028\u0027, \u002745029\u0027, \u002745034\u0027, \u002745042\u0027, \u002745046\u0027, \u002745055\u0027, \u002745062\u0027, \u002745067\u0027, \u002745068\u0027, \u002745072\u0027, \u002745073\u0027, \u002745075\u0027, \u002745081\u0027, \u002745082\u0027, \u002745087\u0027, \u002745089\u0027, \u002745098\u0027, \u002745109\u0027, \u002745116\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745130\u0027, \u002745133\u0027, \u002745134\u0027, \u002745142\u0027, \u002745144\u0027, \u002745146\u0027, \u002745147\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745169\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745179\u0027, \u002745182\u0027, \u002745188\u0027, \u002745192\u0027, \u002745193\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745203\u0027, \u002745206\u0027, \u002745208\u0027, \u002745228\u0027, \u002745229\u0027, \u002745232\u0027, \u002745234\u0027, \u002745235\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745269\u0027, \u002745272\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745284\u0027, \u002745285\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745298\u0027, \u002745299\u0027, \u002745300\u0027, \u002745302\u0027, \u002745307\u0027, \u002745308\u0027, \u002745309\u0027, \u002745315\u0027, \u002745317\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002745344\u0027, \u002747157\u0027, \u002748095\u0027, \u002749003\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002749353\u0027, \u002749361\u0027, \u002750184\u0027, \u002751388\u0027, \u002751431\u0027, \u002751454\u0027, \u002751507\u0027, \u002751559\u0027, \u002751573\u0027, \u002752121\u0027, \u002752353\u0027, \u002753013\u0027, \u002753130\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002756251\u0027, \u002757474\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759009\u0027, \u002759121\u0027, \u002759350\u0027, \u002759384\u0027, \u002759606\u0027, \u002760057\u0027, \u002760139\u0027, \u002760233\u0027, \u002760463\u0027, \u002760491\u0027, \u002761043\u0027, \u002761116\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761411\u0027, \u002761454\u0027, \u002761484\u0027, \u002762041\u0027, \u002762351\u0027, \u002763047\u0027, \u002763113\u0027, \u002763124\u0027, \u002765257\u0027, \u002767202\u0027, \u002767348\u0027, \u002767482\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769100\u0027, \u002769168\u0027, \u002769259\u0027, \u002769266\u0027, \u002769268\u0027, \u002769275\u0027, \u002769290\u0027, \u002769381\u0027, \u002769382\u0027, \u002769383\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002771520\u0027, \u002772032\u0027, \u002772035\u0027, \u002772039\u0027, \u002772042\u0027, \u002772049\u0027, \u002772050\u0027, \u002772054\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772068\u0027, \u002772071\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772181\u0027, \u002772183\u0027, \u002772190\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772250\u0027, \u002772257\u0027, \u002772262\u0027, \u002772264\u0027, \u002772269\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002772366\u0027, \u002772373\u0027, \u002773181\u0027, \u002773227\u0027, \u002773257\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774256\u0027, \u002774268\u0027, \u002775101\u0027, \u002775102\u0027, \u002775103\u0027, \u002775104\u0027, \u002775105\u0027, \u002775106\u0027, \u002775107\u0027, \u002775108\u0027, \u002775109\u0027, \u002775110\u0027, \u002775111\u0027, \u002775112\u0027, \u002775113\u0027, \u002775114\u0027, \u002775115\u0027, \u002775116\u0027, \u002775117\u0027, \u002775118\u0027, \u002775119\u0027, \u002775120\u0027, \u002776035\u0027, \u002776540\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777058\u0027, \u002777060\u0027, \u002777108\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777288\u0027, \u002777291\u0027, \u002777305\u0027, \u002777309\u0027, \u002777327\u0027, \u002777337\u0027, \u002777379\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777467\u0027, \u002777495\u0027, \u002778003\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778297\u0027, \u002778372\u0027, \u002778383\u0027, \u002778407\u0027, \u002778418\u0027, \u002778440\u0027, \u002778501\u0027, \u002778545\u0027, \u002778621\u0027, \u002778640\u0027, \u002778646\u0027, \u002778686\u0027, \u002778688\u0027, \u002779046\u0027, \u002779191\u0027, \u002779202\u0027, \u002780570\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783107\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785027\u0027, \u002785065\u0027, \u002785092\u0027, \u002785119\u0027, \u002785151\u0027, \u002785166\u0027, \u002785191\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787085\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002788512\u0027, \u002789025\u0027, \u002790010\u0027, \u002791086\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791228\u0027, \u002791272\u0027, \u002791338\u0027, \u002791377\u0027, \u002791405\u0027, \u002791425\u0027, \u002791433\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791661\u0027, \u002791692\u0027, \u002792004\u0027, \u002792007\u0027, \u002792009\u0027, \u002792012\u0027, \u002792020\u0027, \u002792023\u0027, \u002792024\u0027, \u002792025\u0027, \u002792026\u0027, \u002792032\u0027, \u002792035\u0027, \u002792036\u0027, \u002792040\u0027, \u002792044\u0027, \u002792046\u0027, \u002792048\u0027, \u002792049\u0027, \u002792050\u0027, \u002792051\u0027, \u002792060\u0027, \u002792062\u0027, \u002792063\u0027, \u002792064\u0027, \u002792071\u0027, \u002792073\u0027, \u002792075\u0027, \u002793001\u0027, \u002793005\u0027, \u002793007\u0027, \u002793008\u0027, \u002793010\u0027, \u002793013\u0027, \u002793027\u0027, \u002793046\u0027, \u002793048\u0027, \u002793051\u0027, \u002793055\u0027, \u002793057\u0027, \u002793059\u0027, \u002793064\u0027, \u002793066\u0027, \u002793070\u0027, \u002793072\u0027, \u002793073\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794016\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794033\u0027, \u002794037\u0027, \u002794041\u0027, \u002794042\u0027, \u002794043\u0027, \u002794046\u0027, \u002794047\u0027, \u002794048\u0027, \u002794054\u0027, \u002794065\u0027, \u002794067\u0027, \u002794068\u0027, \u002794071\u0027, \u002794073\u0027, \u002794076\u0027, \u002794078\u0027, \u002794080\u0027, \u002794081\u0027, \u002795018\u0027, \u002795051\u0027, \u002795127\u0027, \u002795203\u0027, \u002795218\u0027, \u002795500\u0027, \u002795527\u0027, \u002795572\u0027, \u002795607\u0027, \u002797409\u0027, \u002797611\u0027, \u002797801\u0027, \u002799999\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"commune_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002740002\u0027, \u002740009\u0027, \u002740013\u0027, \u002740021\u0027, \u002740022\u0027, \u002740024\u0027, \u002740026\u0027, \u002740029\u0027) and \"commune_1\".\"commune_id\" in (\u002728088\u0027, \u002737063\u0027, \u002737122\u0027, \u002737163\u0027, \u002737214\u0027, \u002737233\u0027, \u002737261\u0027, \u002741018\u0027, \u002741025\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741047\u0027, \u002741052\u0027, \u002741059\u0027, \u002741067\u0027, \u002741082\u0027, \u002741091\u0027, \u002741092\u0027, \u002741101\u0027, \u002741106\u0027, \u002741136\u0027, \u002741146\u0027, \u002741147\u0027, \u002741150\u0027, \u002741151\u0027, \u002741167\u0027, \u002741189\u0027, \u002741194\u0027, \u002741212\u0027, \u002741217\u0027, \u002741220\u0027, \u002741230\u0027, \u002741242\u0027, \u002741269\u0027, \u002741276\u0027, \u002741295\u0027, \u002745302\u0027, \u002756251\u0027, \u002775107\u0027, \u002783107\u0027, \u002795527\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"sexe\".\"sexe_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"commune_1\".\"region_id\" as \"c4\", \"commune_1\".\"pays_id\" as \"c5\", \"commune_1\".\"communaute_communes_id\" as \"c6\", \"commune_1\".\"commune_id\" as \"c7\", \"sexe\".\"sexe_id\" as \"c8\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\", max(\"mobpro_ind_1\".\"distance_chemin_court\") as \"m2\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"commune\" as \"commune_1\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"commune\".\"commune_id\" \u003d \u002741032\u0027 and \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" in (\u0027-9\u0027, \u002711\u0027, \u002724\u0027, \u002753\u0027, \u002793\u0027) and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002740002\u0027, \u002740009\u0027, \u002740013\u0027, \u002740021\u0027, \u002740022\u0027, \u002740024\u0027, \u002740026\u0027, \u002740029\u0027) and \"commune_1\".\"commune_id\" in (\u002728088\u0027, \u002737063\u0027, \u002737122\u0027, \u002737163\u0027, \u002737214\u0027, \u002737233\u0027, \u002737261\u0027, \u002741018\u0027, \u002741025\u0027, \u002741029\u0027, \u002741031\u0027, \u002741032\u0027, \u002741033\u0027, \u002741047\u0027, \u002741052\u0027, \u002741059\u0027, \u002741067\u0027, \u002741082\u0027, \u002741091\u0027, \u002741092\u0027, \u002741101\u0027, \u002741106\u0027, \u002741136\u0027, \u002741146\u0027, \u002741147\u0027, \u002741150\u0027, \u002741151\u0027, \u002741167\u0027, \u002741189\u0027, \u002741194\u0027, \u002741212\u0027, \u002741217\u0027, \u002741220\u0027, \u002741230\u0027, \u002741242\u0027, \u002741269\u0027, \u002741276\u0027, \u002741295\u0027, \u002745302\u0027, \u002756251\u0027, \u002775107\u0027, \u002783107\u0027, \u002795527\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members)), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"mode_transport\".\"categorie_id\" as \"c1\", \"mode_transport\".\"mode_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", \"sexe\".\"sexe_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"mode_transport\" as \"mode_transport\", \"niveau_instruction\" as \"niveau_instruction\", \"sexe\" as \"sexe\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u00271\u0027, \u00272\u0027) and \"mobpro_ind_1\".\"sexe_id\" \u003d \"sexe\".\"sexe_id\" and \"sexe\".\"sexe_id\" in (\u00271\u0027, \u00272\u0027) group by \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\", \"sexe\".\"sexe_id\";"
  ],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Surface du logement (moyenne)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members), Union(Crossjoin({[Measures].[Consomattion chauffage annuelle (min)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members), Crossjoin({[Measures].[Consomattion chauffage annuelle (max)]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members)))) ON COLUMNS,  NON EMPTY {Hierarchize({[Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members})} ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS]}, {[Measures].[Distance trajet domicile - travail (moyenne)]}) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Niveau d\u0027instruction].Members}})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"niveau_inst_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"niveau_instruction\".\"categorie1_id\" as \"c3\", \"niveau_instruction\".\"categorie2_id\" as \"c4\", \"niveau_instruction\".\"niveau_inst_id\" as \"c5\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"niveau_instruction\" as \"niveau_instruction\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"commune\".\"region_id\" \u003d \u002724\u0027 and \"commune\".\"pays_id\" \u003d \u00273\u0027 and \"commune\".\"communaute_communes_id\" \u003d \u002740009\u0027 and \"mobpro_ind_1\".\"dipl\" \u003d \"niveau_instruction\".\"niveau_inst_id\" and \"niveau_instruction\".\"categorie1_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"categorie2_id\" in (\u0027-9\u0027, \u0027Z\u0027) and \"niveau_instruction\".\"niveau_inst_id\" in (\u0027-9\u0027, \u0027ZZ\u0027) group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"niveau_instruction\".\"categorie1_id\", \"niveau_instruction\".\"categorie2_id\", \"niveau_instruction\".\"niveau_inst_id\";"
  ],
  "select NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Crossjoin([Statut d\u0027occupation du logement.STOCLOGT_Hierarchie].[Statut d\u0027occupation].Members, {[Measures].[Nombre total d\u0027individus]}) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (moyenne)]}), Union(Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Distance trajet domicile - travail (max)]}), Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, {[Measures].[Nombre total d\u0027individus]})))) ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin([Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members), Crossjoin({[Commune de residence.CNERES_Hierarchie_intercommunale].[CENTRE].[Pays des Châteaux].[AGGLOPOLYS].[CHAILLES]}, [Commune de travail.CNELOCC_Hierarchie_intercommunale].[Pays].Members))) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}, {[Measures].[Nombre de voitures des menages (moyenne)]}), Union(Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, {[Measures].[Nombre de voitures des menages (moyenne)]}), Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, {[Measures].[Nombre de voitures des menages (moyenne)]})))) ON COLUMNS,  NON EMPTY {Hierarchize({{[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants], [Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 9 categories].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", \"type_menage\".\"typemr9_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"type_menage\".\"typemr4_id\" as \"c1\", \"type_menage\".\"typemr9_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"csp\".\"csp1_id\", \"type_menage\".\"typemr4_id\", \"type_menage\".\"typemr9_id\";"
  ],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Ouvriers]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members)), Crossjoin({[Measures].[Distance trajet domicile - travail (moyenne)]}, Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, [Motif de deplacement.MOTIFDEP_Hierarchie_1].[Motif de deplacement].Members)))), [Categorie socioprofessionnelle.CSP_Hierarchie_1].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY Order({Hierarchize({{[Commune de residence.CNERES_Hierarchie_intercommunale].[Communaute de communes].Members}, {[Commune de residence.CNERES_Hierarchie_intercommunale].[Commune de residence].Members}})}, [Commune de residence.CNERES_Hierarchie_intercommunale].CurrentMember.Name, BASC) ON ROWSfrom [Cube1MobProInd]": [
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"csp\".\"csp1_id\" as \"c0\", \"motif_deplacement\".\"categorie1_id\" as \"c1\", \"motif_deplacement\".\"categorie2_id\" as \"c2\", \"motif_deplacement\".\"motif_id\" as \"c3\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"csp\" as \"csp\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"motif_deplacement\".\"categorie1_id\" as \"c4\", \"motif_deplacement\".\"categorie2_id\" as \"c5\", \"motif_deplacement\".\"motif_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"csp\".\"csp1_id\" as \"c3\", \"motif_deplacement\".\"categorie1_id\" as \"c4\", \"motif_deplacement\".\"categorie2_id\" as \"c5\", \"motif_deplacement\".\"motif_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"motif_deplacement\".\"categorie1_id\" as \"c5\", \"motif_deplacement\".\"categorie2_id\" as \"c6\", \"motif_deplacement\".\"motif_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";",
    "select \"commune\".\"region_id\" as \"c0\", \"commune\".\"pays_id\" as \"c1\", \"commune\".\"communaute_communes_id\" as \"c2\", \"commune\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"motif_deplacement\".\"categorie1_id\" as \"c5\", \"motif_deplacement\".\"categorie2_id\" as \"c6\", \"motif_deplacement\".\"motif_id\" as \"c7\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.distance_chemin_court * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"motif_deplacement\" as \"motif_deplacement\" where \"mobpro_ind_1\".\"commune_res\" \u003d \"commune\".\"commune_id\" and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00273\u0027, \u00276\u0027) and \"mobpro_ind_1\".\"motif_deplacement\" \u003d \"motif_deplacement\".\"motif_id\" and \"motif_deplacement\".\"categorie1_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"categorie2_id\" \u003d \u00271\u0027 and \"motif_deplacement\".\"motif_id\" \u003d \u00271\u0027 group by \"commune\".\"region_id\", \"commune\".\"pays_id\", \"commune\".\"communaute_communes_id\", \"commune\".\"commune_id\", \"csp\".\"csp1_id\", \"motif_deplacement\".\"categorie1_id\", \"motif_deplacement\".\"categorie2_id\", \"motif_deplacement\".\"motif_id\";"
  ],
  "select NON EMPTY {Hierarchize({[Measures].[Distance trajet domicile - travail (moyenne)]})} ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, [Age revolu quinquenal.AgeRevQ_Hierarchie_1].[Age revolu quinquenal].Members) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Measures].[Surface du logement (moyenne)], [Measures].[Consomattion chauffage annuelle (min)], [Measures].[Consomattion chauffage annuelle (max)]}})} ON COLUMNS,  NON EMPTY Crossjoin([Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members, [Nombre de pieces du logement.LOGT_NBPIECE_Hierarchie_1].[Nombre de pieces].Members) ON ROWSfrom [Cube4Chauffage]": [],
  "select NON EMPTY Order(Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Marche à pied]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale monoparentale]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages avec famille principale composée d\u0027un couple]}, {[Sexe.Sexe_Hierarchie].[Hommes]}))), Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin({[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}, Crossjoin({[Type de menage.TYPMEN_Hierarchie].[Ménages d\u0027une personne seule sans famille]}, {[Sexe.Sexe_Hierarchie].[Hommes]})))))))))))), [Sexe.Sexe_Hierarchie].CurrentMember.Name, BASC) ON COLUMNS,  NON EMPTY {Hierarchize({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}, Filter({{[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 2].Members}}, (Exists({Ancestor([Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].CurrentMember, [Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Categorie 1])}, {[Niveau d\u0027instruction.Niveau_Instruction_Hierarchie].[Avec diplôme]}).Count \u003e 0))})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY Hierarchize(Union(Crossjoin({[Measures].[Duree trajet domicile - travail (moyenne)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Union(Crossjoin({[Measures].[Distance trajet domicile - travail (max)]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]})), Crossjoin({[Measures].[Nombre total d\u0027individus]}, Crossjoin([Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members, {[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues]}))))) ON COLUMNS,  NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 1].Members}, {[Statut d\u0027emploi.STATEMPL_Hierarchie].[Statut d\u0027emploi de niveau 2].Members}})} ON COLUMNS,  NON EMPTY {Hierarchize({[Type de menage.TYPMEN_Hierarchie].[Type regroupe en 4 categories].Members})} ON ROWSfrom [Cube1MobProInd]": [
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat2_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select count(*) as \"c0\" from (select distinct \"statut_emploi\".\"stat2_id\" as \"c0\", \"statut_emploi\".\"stat1_id\" as \"c1\" from \"statut_emploi\" as \"statut_emploi\") as \"init\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"type_menage\".\"typemr4_id\";",
    "select \"statut_emploi\".\"stat1_id\" as \"c0\", \"statut_emploi\".\"stat2_id\" as \"c1\", \"type_menage\".\"typemr4_id\" as \"c2\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\" from \"statut_emploi\" as \"statut_emploi\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"type_menage\" as \"type_menage\" where \"mobpro_ind_1\".\"stat_empl\" \u003d \"statut_emploi\".\"stat3_id\" and \"mobpro_ind_1\".\"type_menage\" \u003d \"type_menage\".\"typemr9_id\" group by \"statut_emploi\".\"stat1_id\", \"statut_emploi\".\"stat2_id\", \"type_menage\".\"typemr4_id\";"
  ],
  "select NON EMPTY Crossjoin({[Measures].[Nombre total d\u0027individus]}, [Type de logement.TYPLOGT_Hierarchie].[Type de logement].Members) ON COLUMNS,  NON EMPTY {Hierarchize({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[CSP1].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({[Sexe.Sexe_Hierarchie].[Sexe].Members})} ON COLUMNS,  NON EMPTY {Hierarchize({[Mode de transport.MODTRANS_Hierarchie].[Mode de transport].Members})} ON ROWSfrom [Cube1MobProInd]": [],
  "select NON EMPTY {Hierarchize({{[Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Deux roues], [Mode de transport.MODTRANS_Hierarchie].[Transports en commun].[Transports en commun], [Mode de transport.MODTRANS_Hierarchie].[Modes personnels].[Voiture, camion, fourgonnette]}})} ON COLUMNS,  NON EMPTY Hierarchize(Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Cadres et professions intellectuelles supérieures]}, Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]})), Union(Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Agriculteurs exploitants]}, Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]})), Crossjoin({[Categorie socioprofessionnelle.CSP_Hierarchie_1].[Artisans, commerçants et chefs d\u0027entreprise]}, Crossjoin([Commune de travail.CNELOCC_Hierarchie_intercommunale].[Commune d\u0027occupation].Members, {[Measures].[Depense trajet domicile - travail (moyenne)]}))))) ON ROWSfrom [Cube1MobProInd]": [
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"commune_id\" \u003d \u002737261\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"region_id\" \u003d \u002724\u0027 and \"commune_1\".\"pays_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"communaute_communes_id\" \u003d \u0027-9\u0027 and \"commune_1\".\"commune_id\" \u003d \u002737261\u0027 group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m0\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002740002\u0027, \u002740009\u0027, \u002740013\u0027, \u002740020\u0027, \u002740023\u0027, \u002740028\u0027, \u002740029\u0027, \u002797801\u0027) and \"commune_1\".\"commune_id\" in (\u002702304\u0027, \u002702691\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718103\u0027, \u002718147\u0027, \u002718148\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718255\u0027, \u002718263\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002719272\u0027, \u002721295\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002724322\u0027, \u002725388\u0027, \u002726349\u0027, \u002727022\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728078\u0027, \u002728093\u0027, \u002728110\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728198\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728262\u0027, \u002728280\u0027, \u002728318\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002733058\u0027, \u002733063\u0027, \u002733483\u0027, \u002734101\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735352\u0027, \u002736018\u0027, \u002736036\u0027, \u002736068\u0027, \u002736069\u0027, \u002736077\u0027, \u002736093\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736244\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737023\u0027, \u002737043\u0027, \u002737046\u0027, \u002737060\u0027, \u002737070\u0027, \u002737072\u0027, \u002737075\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737111\u0027, \u002737115\u0027, \u002737119\u0027, \u002737138\u0027, \u002737153\u0027, \u002737155\u0027, \u002737160\u0027, \u002737167\u0027, \u002737171\u0027, \u002737177\u0027, \u002737194\u0027, \u002737195\u0027, \u002737211\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737240\u0027, \u002737247\u0027, \u002737252\u0027, \u002737254\u0027, \u002737263\u0027, \u002737276\u0027, \u002738382\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741054\u0027, \u002741064\u0027, \u002741081\u0027, \u002741103\u0027, \u002741113\u0027, \u002741124\u0027, \u002741168\u0027, \u002741195\u0027, \u002741274\u0027, \u002741292\u0027, \u002744004\u0027, \u002744169\u0027, \u002744188\u0027, \u002745004\u0027, \u002745008\u0027, \u002745020\u0027, \u002745029\u0027, \u002745042\u0027, \u002745046\u0027, \u002745062\u0027, \u002745072\u0027, \u002745073\u0027, \u002745087\u0027, \u002745098\u0027, \u002745109\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745133\u0027, \u002745142\u0027, \u002745144\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745206\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745299\u0027, \u002745300\u0027, \u002745307\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002747157\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002750184\u0027, \u002751388\u0027, \u002751454\u0027, \u002751559\u0027, \u002752353\u0027, \u002753013\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759121\u0027, \u002759384\u0027, \u002760139\u0027, \u002760463\u0027, \u002761043\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761454\u0027, \u002762351\u0027, \u002763124\u0027, \u002765257\u0027, \u002767348\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769259\u0027, \u002769268\u0027, \u002769290\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002772032\u0027, \u002772039\u0027, \u002772042\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772183\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772257\u0027, \u002772264\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002773181\u0027, \u002773227\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774268\u0027, \u002776035\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777060\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777291\u0027, \u002777305\u0027, \u002777327\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777495\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778372\u0027, \u002778407\u0027, \u002778501\u0027, \u002778545\u0027, \u002778688\u0027, \u002779046\u0027, \u002779202\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785151\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002789025\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791272\u0027, \u002791405\u0027, \u002791425\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791692\u0027, \u002792007\u0027, \u002792020\u0027, \u002792025\u0027, \u002792032\u0027, \u002793008\u0027, \u002793010\u0027, \u002793027\u0027, \u002793046\u0027, \u002793057\u0027, \u002793064\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794042\u0027, \u002794047\u0027, \u002794048\u0027, \u002794071\u0027, \u002794073\u0027, \u002794078\u0027, \u002794080\u0027, \u002795051\u0027, \u002795127\u0027, \u002795218\u0027, \u002795500\u0027, \u002795607\u0027, \u002797611\u0027, \u002797801\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";",
    "select \"commune_1\".\"region_id\" as \"c0\", \"commune_1\".\"pays_id\" as \"c1\", \"commune_1\".\"communaute_communes_id\" as \"c2\", \"commune_1\".\"commune_id\" as \"c3\", \"csp\".\"csp1_id\" as \"c4\", \"mode_transport\".\"categorie_id\" as \"c5\", \"mode_transport\".\"mode_id\" as \"c6\", sum(\"mobpro_ind_1\".\"coef_pond\") as \"m0\", sum(mobpro_ind_1.depense_courtchemin_dep * mobpro_ind_1.coef_pond) as \"m1\" from \"commune\" as \"commune_1\", \"mobpro_ind_1\" as \"mobpro_ind_1\", \"csp\" as \"csp\", \"mode_transport\" as \"mode_transport\" where \"mobpro_ind_1\".\"commune_t\" \u003d \"commune_1\".\"commune_id\" and \"commune_1\".\"communaute_communes_id\" in (\u0027-9\u0027, \u002740002\u0027, \u002740009\u0027, \u002740013\u0027, \u002740020\u0027, \u002740023\u0027, \u002740028\u0027, \u002740029\u0027, \u002797801\u0027) and \"commune_1\".\"commune_id\" in (\u002702304\u0027, \u002702691\u0027, \u002703102\u0027, \u002703190\u0027, \u002703305\u0027, \u002703310\u0027, \u002705002\u0027, \u002710425\u0027, \u002711131\u0027, \u002712224\u0027, \u002713054\u0027, \u002713099\u0027, \u002713214\u0027, \u002714452\u0027, \u002714669\u0027, \u002716015\u0027, \u002716232\u0027, \u002717300\u0027, \u002718005\u0027, \u002718018\u0027, \u002718026\u0027, \u002718030\u0027, \u002718036\u0027, \u002718037\u0027, \u002718041\u0027, \u002718047\u0027, \u002718067\u0027, \u002718096\u0027, \u002718103\u0027, \u002718147\u0027, \u002718148\u0027, \u002718165\u0027, \u002718174\u0027, \u002718186\u0027, \u002718197\u0027, \u002718205\u0027, \u002718206\u0027, \u002718210\u0027, \u002718255\u0027, \u002718263\u0027, \u002718281\u0027, \u002718282\u0027, \u002718287\u0027, \u002719272\u0027, \u002721295\u0027, \u002722105\u0027, \u002722113\u0027, \u002722118\u0027, \u002722187\u0027, \u002722278\u0027, \u002722360\u0027, \u002724322\u0027, \u002725388\u0027, \u002726349\u0027, \u002727022\u0027, \u002727425\u0027, \u002727469\u0027, \u002727615\u0027, \u002727681\u0027, \u002728007\u0027, \u002728012\u0027, \u002728018\u0027, \u002728027\u0027, \u002728078\u0027, \u002728093\u0027, \u002728110\u0027, \u002728121\u0027, \u002728127\u0027, \u002728132\u0027, \u002728134\u0027, \u002728149\u0027, \u002728150\u0027, \u002728158\u0027, \u002728173\u0027, \u002728194\u0027, \u002728198\u0027, \u002728204\u0027, \u002728205\u0027, \u002728218\u0027, \u002728220\u0027, \u002728223\u0027, \u002728224\u0027, \u002728227\u0027, \u002728229\u0027, \u002728233\u0027, \u002728241\u0027, \u002728262\u0027, \u002728280\u0027, \u002728318\u0027, \u002728340\u0027, \u002728357\u0027, \u002728364\u0027, \u002728406\u0027, \u002728410\u0027, \u002728415\u0027, \u002728422\u0027, \u002728424\u0027, \u002729019\u0027, \u00272A139\u0027, \u00272B050\u0027, \u002730189\u0027, \u002731079\u0027, \u002731169\u0027, \u002731555\u0027, \u002731565\u0027, \u002733058\u0027, \u002733063\u0027, \u002733483\u0027, \u002734101\u0027, \u002735023\u0027, \u002735051\u0027, \u002735125\u0027, \u002735207\u0027, \u002735352\u0027, \u002736018\u0027, \u002736036\u0027, \u002736068\u0027, \u002736069\u0027, \u002736077\u0027, \u002736093\u0027, \u002736107\u0027, \u002736113\u0027, \u002736128\u0027, \u002736199\u0027, \u002736200\u0027, \u002736202\u0027, \u002736217\u0027, \u002736244\u0027, \u002737008\u0027, \u002737009\u0027, \u002737010\u0027, \u002737011\u0027, \u002737015\u0027, \u002737023\u0027, \u002737043\u0027, \u002737046\u0027, \u002737060\u0027, \u002737070\u0027, \u002737072\u0027, \u002737075\u0027, \u002737079\u0027, \u002737091\u0027, \u002737100\u0027, \u002737111\u0027, \u002737115\u0027, \u002737119\u0027, \u002737138\u0027, \u002737153\u0027, \u002737155\u0027, \u002737160\u0027, \u002737167\u0027, \u002737171\u0027, \u002737177\u0027, \u002737194\u0027, \u002737195\u0027, \u002737211\u0027, \u002737229\u0027, \u002737230\u0027, \u002737231\u0027, \u002737240\u0027, \u002737247\u0027, \u002737252\u0027, \u002737254\u0027, \u002737263\u0027, \u002737276\u0027, \u002738382\u0027, \u002739478\u0027, \u002739500\u0027, \u002740036\u0027, \u002740088\u0027, \u002740192\u0027, \u002740197\u0027, \u002740228\u0027, \u002741054\u0027, \u002741064\u0027, \u002741081\u0027, \u002741103\u0027, \u002741113\u0027, \u002741124\u0027, \u002741168\u0027, \u002741195\u0027, \u002741274\u0027, \u002741292\u0027, \u002744004\u0027, \u002744169\u0027, \u002744188\u0027, \u002745004\u0027, \u002745008\u0027, \u002745020\u0027, \u002745029\u0027, \u002745042\u0027, \u002745046\u0027, \u002745062\u0027, \u002745072\u0027, \u002745073\u0027, \u002745087\u0027, \u002745098\u0027, \u002745109\u0027, \u002745122\u0027, \u002745123\u0027, \u002745126\u0027, \u002745133\u0027, \u002745142\u0027, \u002745144\u0027, \u002745154\u0027, \u002745155\u0027, \u002745167\u0027, \u002745171\u0027, \u002745173\u0027, \u002745175\u0027, \u002745196\u0027, \u002745200\u0027, \u002745202\u0027, \u002745206\u0027, \u002745244\u0027, \u002745248\u0027, \u002745252\u0027, \u002745264\u0027, \u002745273\u0027, \u002745274\u0027, \u002745281\u0027, \u002745282\u0027, \u002745286\u0027, \u002745290\u0027, \u002745296\u0027, \u002745299\u0027, \u002745300\u0027, \u002745307\u0027, \u002745324\u0027, \u002745326\u0027, \u002745327\u0027, \u002745331\u0027, \u002745335\u0027, \u002745338\u0027, \u002745340\u0027, \u002745341\u0027, \u002747157\u0027, \u002749007\u0027, \u002749021\u0027, \u002749035\u0027, \u002749054\u0027, \u002749278\u0027, \u002749307\u0027, \u002750184\u0027, \u002751388\u0027, \u002751454\u0027, \u002751559\u0027, \u002752353\u0027, \u002753013\u0027, \u002754328\u0027, \u002754528\u0027, \u002755545\u0027, \u002756047\u0027, \u002756061\u0027, \u002756231\u0027, \u002757540\u0027, \u002758086\u0027, \u002758193\u0027, \u002758218\u0027, \u002758280\u0027, \u002759121\u0027, \u002759384\u0027, \u002760139\u0027, \u002760463\u0027, \u002761043\u0027, \u002761287\u0027, \u002761332\u0027, \u002761341\u0027, \u002761454\u0027, \u002762351\u0027, \u002763124\u0027, \u002765257\u0027, \u002767348\u0027, \u002767520\u0027, \u002768149\u0027, \u002768224\u0027, \u002768315\u0027, \u002769259\u0027, \u002769268\u0027, \u002769290\u0027, \u002769387\u0027, \u002771076\u0027, \u002771270\u0027, \u002772032\u0027, \u002772039\u0027, \u002772042\u0027, \u002772063\u0027, \u002772064\u0027, \u002772065\u0027, \u002772080\u0027, \u002772087\u0027, \u002772124\u0027, \u002772132\u0027, \u002772154\u0027, \u002772172\u0027, \u002772183\u0027, \u002772208\u0027, \u002772213\u0027, \u002772240\u0027, \u002772257\u0027, \u002772264\u0027, \u002772272\u0027, \u002772297\u0027, \u002772310\u0027, \u002772331\u0027, \u002772333\u0027, \u002772356\u0027, \u002773181\u0027, \u002773227\u0027, \u002774014\u0027, \u002774063\u0027, \u002774081\u0027, \u002774160\u0027, \u002774173\u0027, \u002774268\u0027, \u002776035\u0027, \u002776575\u0027, \u002776593\u0027, \u002776597\u0027, \u002777060\u0027, \u002777182\u0027, \u002777243\u0027, \u002777258\u0027, \u002777280\u0027, \u002777291\u0027, \u002777305\u0027, \u002777327\u0027, \u002777384\u0027, \u002777389\u0027, \u002777440\u0027, \u002777495\u0027, \u002778146\u0027, \u002778168\u0027, \u002778208\u0027, \u002778372\u0027, \u002778407\u0027, \u002778501\u0027, \u002778545\u0027, \u002778688\u0027, \u002779046\u0027, \u002779202\u0027, \u002780829\u0027, \u002782048\u0027, \u002783029\u0027, \u002783137\u0027, \u002784031\u0027, \u002784035\u0027, \u002784087\u0027, \u002784132\u0027, \u002785151\u0027, \u002785288\u0027, \u002786062\u0027, \u002786111\u0027, \u002786158\u0027, \u002786194\u0027, \u002786237\u0027, \u002786259\u0027, \u002787059\u0027, \u002787122\u0027, \u002787183\u0027, \u002788160\u0027, \u002789025\u0027, \u002791105\u0027, \u002791135\u0027, \u002791174\u0027, \u002791182\u0027, \u002791272\u0027, \u002791405\u0027, \u002791425\u0027, \u002791471\u0027, \u002791477\u0027, \u002791479\u0027, \u002791494\u0027, \u002791525\u0027, \u002791549\u0027, \u002791552\u0027, \u002791570\u0027, \u002791573\u0027, \u002791587\u0027, \u002791593\u0027, \u002791600\u0027, \u002791692\u0027, \u002792007\u0027, \u002792020\u0027, \u002792025\u0027, \u002792032\u0027, \u002793008\u0027, \u002793010\u0027, \u002793027\u0027, \u002793046\u0027, \u002793057\u0027, \u002793064\u0027, \u002793077\u0027, \u002793078\u0027, \u002793079\u0027, \u002794002\u0027, \u002794015\u0027, \u002794018\u0027, \u002794021\u0027, \u002794028\u0027, \u002794042\u0027, \u002794047\u0027, \u002794048\u0027, \u002794071\u0027, \u002794073\u0027, \u002794078\u0027, \u002794080\u0027, \u002795051\u0027, \u002795127\u0027, \u002795218\u0027, \u002795500\u0027, \u002795607\u0027, \u002797611\u0027, \u002797801\u0027) and \"mobpro_ind_1\".\"csp3_id\" \u003d \"csp\".\"csp3_id\" and \"csp\".\"csp1_id\" in (\u00271\u0027, \u00272\u0027, \u00273\u0027) and \"mobpro_ind_1\".\"mode_trans\" \u003d \"mode_transport\".\"mode_id\" and \"mode_transport\".\"categorie_id\" in (\u00272\u0027, \u00273\u0027) and \"mode_transport\".\"mode_id\" in (\u00273\u0027, \u00274\u0027, \u00275\u0027) group by \"commune_1\".\"region_id\", \"commune_1\".\"pays_id\", \"commune_1\".\"communaute_communes_id\", \"commune_1\".\"commune_id\", \"csp\".\"csp1_id\", \"mode_transport\".\"categorie_id\", \"mode_transport\".\"mode_id\";"
  ],
  "select NON EMPTY Crossjoin([Sexe.Sexe_Hierarchie].[Sexe].Members, Crossjoin({[Statut d\u0027emploi.STATEMPL_Hierarchie].[Salariés].[Salariés en formation].[En contrat d\u0027apprentissage]}, [Indicateur de lieu de travail.ILOCC_Hierarchie_1].[Indicateur de lieu].Members)) ON COLUMNS,  NON EMPTY {Hierarchize({{[Measures].[Duree trajet domicile - travail (moyenne)], [Measures].[Distance trajet domicile - travail (max)], [Measures].[Nombre total d\u0027individus]}})} ON ROWSfrom [Cube1MobProInd]": []
}